declare class ActorOnClickedSignature__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): ActorOnClickedSignature__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): ActorOnClickedSignature__PythonCallable;
	static GetDefaultObject(): ActorOnClickedSignature__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorOnClickedSignature__PythonCallable;
	static C(Other: UObject | any): ActorOnClickedSignature__PythonCallable;
}

declare class ActorOnInputTouchBeginSignature__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): ActorOnInputTouchBeginSignature__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): ActorOnInputTouchBeginSignature__PythonCallable;
	static GetDefaultObject(): ActorOnInputTouchBeginSignature__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorOnInputTouchBeginSignature__PythonCallable;
	static C(Other: UObject | any): ActorOnInputTouchBeginSignature__PythonCallable;
}

declare class ActorOnInputTouchEndSignature__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): ActorOnInputTouchEndSignature__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): ActorOnInputTouchEndSignature__PythonCallable;
	static GetDefaultObject(): ActorOnInputTouchEndSignature__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorOnInputTouchEndSignature__PythonCallable;
	static C(Other: UObject | any): ActorOnInputTouchEndSignature__PythonCallable;
}

declare class ActorOnReleasedSignature__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): ActorOnReleasedSignature__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): ActorOnReleasedSignature__PythonCallable;
	static GetDefaultObject(): ActorOnReleasedSignature__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorOnReleasedSignature__PythonCallable;
	static C(Other: UObject | any): ActorOnReleasedSignature__PythonCallable;
}

declare class ComponentBeginCursorOverSignature__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): ComponentBeginCursorOverSignature__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): ComponentBeginCursorOverSignature__PythonCallable;
	static GetDefaultObject(): ComponentBeginCursorOverSignature__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ComponentBeginCursorOverSignature__PythonCallable;
	static C(Other: UObject | any): ComponentBeginCursorOverSignature__PythonCallable;
}

declare class ComponentBeginOverlapSignature__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): ComponentBeginOverlapSignature__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): ComponentBeginOverlapSignature__PythonCallable;
	static GetDefaultObject(): ComponentBeginOverlapSignature__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ComponentBeginOverlapSignature__PythonCallable;
	static C(Other: UObject | any): ComponentBeginOverlapSignature__PythonCallable;
}

declare class ComponentBeginTouchOverSignature__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): ComponentBeginTouchOverSignature__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): ComponentBeginTouchOverSignature__PythonCallable;
	static GetDefaultObject(): ComponentBeginTouchOverSignature__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ComponentBeginTouchOverSignature__PythonCallable;
	static C(Other: UObject | any): ComponentBeginTouchOverSignature__PythonCallable;
}

declare class ComponentCollisionSettingsChangedSignature__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): ComponentCollisionSettingsChangedSignature__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): ComponentCollisionSettingsChangedSignature__PythonCallable;
	static GetDefaultObject(): ComponentCollisionSettingsChangedSignature__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ComponentCollisionSettingsChangedSignature__PythonCallable;
	static C(Other: UObject | any): ComponentCollisionSettingsChangedSignature__PythonCallable;
}

declare class ComponentEndCursorOverSignature__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): ComponentEndCursorOverSignature__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): ComponentEndCursorOverSignature__PythonCallable;
	static GetDefaultObject(): ComponentEndCursorOverSignature__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ComponentEndCursorOverSignature__PythonCallable;
	static C(Other: UObject | any): ComponentEndCursorOverSignature__PythonCallable;
}

declare class ComponentEndOverlapSignature__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): ComponentEndOverlapSignature__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): ComponentEndOverlapSignature__PythonCallable;
	static GetDefaultObject(): ComponentEndOverlapSignature__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ComponentEndOverlapSignature__PythonCallable;
	static C(Other: UObject | any): ComponentEndOverlapSignature__PythonCallable;
}

declare class ComponentEndTouchOverSignature__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): ComponentEndTouchOverSignature__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): ComponentEndTouchOverSignature__PythonCallable;
	static GetDefaultObject(): ComponentEndTouchOverSignature__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ComponentEndTouchOverSignature__PythonCallable;
	static C(Other: UObject | any): ComponentEndTouchOverSignature__PythonCallable;
}

declare class ComponentHitSignature__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): ComponentHitSignature__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): ComponentHitSignature__PythonCallable;
	static GetDefaultObject(): ComponentHitSignature__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ComponentHitSignature__PythonCallable;
	static C(Other: UObject | any): ComponentHitSignature__PythonCallable;
}

declare class ComponentOnClickedSignature__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): ComponentOnClickedSignature__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): ComponentOnClickedSignature__PythonCallable;
	static GetDefaultObject(): ComponentOnClickedSignature__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ComponentOnClickedSignature__PythonCallable;
	static C(Other: UObject | any): ComponentOnClickedSignature__PythonCallable;
}

declare class ComponentOnInputTouchBeginSignature__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): ComponentOnInputTouchBeginSignature__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): ComponentOnInputTouchBeginSignature__PythonCallable;
	static GetDefaultObject(): ComponentOnInputTouchBeginSignature__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ComponentOnInputTouchBeginSignature__PythonCallable;
	static C(Other: UObject | any): ComponentOnInputTouchBeginSignature__PythonCallable;
}

declare class ComponentOnInputTouchEndSignature__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): ComponentOnInputTouchEndSignature__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): ComponentOnInputTouchEndSignature__PythonCallable;
	static GetDefaultObject(): ComponentOnInputTouchEndSignature__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ComponentOnInputTouchEndSignature__PythonCallable;
	static C(Other: UObject | any): ComponentOnInputTouchEndSignature__PythonCallable;
}

declare class ComponentOnReleasedSignature__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): ComponentOnReleasedSignature__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): ComponentOnReleasedSignature__PythonCallable;
	static GetDefaultObject(): ComponentOnReleasedSignature__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ComponentOnReleasedSignature__PythonCallable;
	static C(Other: UObject | any): ComponentOnReleasedSignature__PythonCallable;
}

declare class ComponentSleepSignature__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): ComponentSleepSignature__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): ComponentSleepSignature__PythonCallable;
	static GetDefaultObject(): ComponentSleepSignature__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ComponentSleepSignature__PythonCallable;
	static C(Other: UObject | any): ComponentSleepSignature__PythonCallable;
}

declare class ComponentWakeSignature__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): ComponentWakeSignature__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): ComponentWakeSignature__PythonCallable;
	static GetDefaultObject(): ComponentWakeSignature__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ComponentWakeSignature__PythonCallable;
	static C(Other: UObject | any): ComponentWakeSignature__PythonCallable;
}

declare class IsRootComponentChanged__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): IsRootComponentChanged__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): IsRootComponentChanged__PythonCallable;
	static GetDefaultObject(): IsRootComponentChanged__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): IsRootComponentChanged__PythonCallable;
	static C(Other: UObject | any): IsRootComponentChanged__PythonCallable;
}

declare class PawnControllerChangedSignature__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): PawnControllerChangedSignature__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): PawnControllerChangedSignature__PythonCallable;
	static GetDefaultObject(): PawnControllerChangedSignature__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PawnControllerChangedSignature__PythonCallable;
	static C(Other: UObject | any): PawnControllerChangedSignature__PythonCallable;
}

declare class PawnRestartedSignature__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): PawnRestartedSignature__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): PawnRestartedSignature__PythonCallable;
	static GetDefaultObject(): PawnRestartedSignature__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PawnRestartedSignature__PythonCallable;
	static C(Other: UObject | any): PawnRestartedSignature__PythonCallable;
}

declare class PhysicsVolumeChanged__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): PhysicsVolumeChanged__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): PhysicsVolumeChanged__PythonCallable;
	static GetDefaultObject(): PhysicsVolumeChanged__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PhysicsVolumeChanged__PythonCallable;
	static C(Other: UObject | any): PhysicsVolumeChanged__PythonCallable;
}

declare class TakeAnyDamageSignature__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): TakeAnyDamageSignature__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): TakeAnyDamageSignature__PythonCallable;
	static GetDefaultObject(): TakeAnyDamageSignature__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TakeAnyDamageSignature__PythonCallable;
	static C(Other: UObject | any): TakeAnyDamageSignature__PythonCallable;
}

declare class TakePointDamageSignature__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): TakePointDamageSignature__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): TakePointDamageSignature__PythonCallable;
	static GetDefaultObject(): TakePointDamageSignature__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TakePointDamageSignature__PythonCallable;
	static C(Other: UObject | any): TakePointDamageSignature__PythonCallable;
}

declare class TakeRadialDamageSignature__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): TakeRadialDamageSignature__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): TakeRadialDamageSignature__PythonCallable;
	static GetDefaultObject(): TakeRadialDamageSignature__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TakeRadialDamageSignature__PythonCallable;
	static C(Other: UObject | any): TakeRadialDamageSignature__PythonCallable;
}

declare class V8Config extends UObject { 
	bGenAltPropAccessorForAllProp: boolean;
	bGenGetStructRefArrayFunction: boolean;
	static Load(ResourceName: string): V8Config;
	static Find(Outer: UObject, ResourceName: string): V8Config;
	static GetDefaultObject(): V8Config;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): V8Config;
	static C(Other: UObject | any): V8Config;
}

declare class DirectoryWatcher extends UObject { 
	Added: string[];
	Modified: string[];
	Removed: string[];
	OnChanged: UnrealEngineMulticastDelegate<() => void>;
	static Load(ResourceName: string): DirectoryWatcher;
	static Find(Outer: UObject, ResourceName: string): DirectoryWatcher;
	static GetDefaultObject(): DirectoryWatcher;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DirectoryWatcher;
	Watch(Directory: string): void;
	Unwatch(): void;
	Contains(File: string): boolean;
	static C(Other: UObject | any): DirectoryWatcher;
}

declare class JavascriptContext extends UObject { 
	Paths: string[];
	static Load(ResourceName: string): JavascriptContext;
	static Find(Outer: UObject, ResourceName: string): JavascriptContext;
	static GetDefaultObject(): JavascriptContext;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptContext;
	WriteDTS(Target: string,bIncludingTooltip: boolean): boolean;
	WriteAliases(Target: string): boolean;
	UnregisterConsoleCommand(Command: string): void;
	SetContextId(Name: string): void;
	RunScript(Script: string,bOutput: boolean): string;
	RunFileWithArgs(Filename: string,Args: string[]): string;
	RunFile(Filename: string): string;
	ResetUnrealConsoleDelegate(): void;
	RequestV8GarbageCollection(): void;
	RegisterConsoleCommand(Command: string,Help: string,UFunction: JavascriptFunction): void;
	ReadScriptFile(Filename: string): string;
	IsDebugContext(): boolean;
	GetScriptFileFullPath(Filename: string): string;
	FindPathFile(TargetRootPath: string,TargetFileName: string,OutFiles?: string[]): {OutFiles: string[]};
	Expose(Name: string,UObject: UObject): void;
	DestroyInspector(): void;
	CreateInspector(Port: number): void;
	static C(Other: UObject | any): JavascriptContext;
}

declare class JavascriptHeapStatistics { 
	TotalHeapSize: number;
	TotalHeapSizeExecutable: number;
	TotalPhysicalSize: number;
	TotalAvailableSize: number;
	UsedHeapSize: number;
	HeapSizeLimit: number;
	MallocedMemory: number;
	bDoesZapGarbage: boolean;
	clone() : JavascriptHeapStatistics;
	static C(Other: UObject | any): JavascriptHeapStatistics;
}

declare class JavascriptIsolate extends UObject { 
	static Load(ResourceName: string): JavascriptIsolate;
	static Find(Outer: UObject, ResourceName: string): JavascriptIsolate;
	static GetDefaultObject(): JavascriptIsolate;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptIsolate;
	Init(bIsEditor: boolean): void;
	GetHeapStatistics(Statistics?: JavascriptHeapStatistics): {Statistics: JavascriptHeapStatistics};
	CreateContext(): JavascriptContext;
	static C(Other: UObject | any): JavascriptIsolate;
}

declare class JavascriptAsset { 
	Name: string;
	Asset: SoftObjectPath;
	clone() : JavascriptAsset;
	static C(Other: UObject | any): JavascriptAsset;
}

declare class JavascriptClassAsset { 
	Name: string;
	Class: UnrealEngineClass;
	clone() : JavascriptClassAsset;
	static C(Other: UObject | any): JavascriptClassAsset;
}

declare class JavascriptComponent extends ActorComponent { 
	ScriptSourceFile: string;
	bActiveWithinEditor: boolean;
	JavascriptContext: JavascriptContext;
	JavascriptIsolate: JavascriptIsolate;
	OnTick: UnrealEngineDelegate<(DeltaSeconds: number) => void>;
	OnBeginPlay: UnrealEngineDelegate<() => void>;
	OnEndPlay: UnrealEngineDelegate<() => void>;
	OnInvoke: UnrealEngineDelegate<(Name: string) => void>;
	Assets: JavascriptAsset[];
	ClassAssets: JavascriptClassAsset[];
	static Load(ResourceName: string): JavascriptComponent;
	static Find(Outer: UObject, ResourceName: string): JavascriptComponent;
	static GetDefaultObject(): JavascriptComponent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptComponent;
	ResolveClass(Name: string): UnrealEngineClass;
	ResolveAsset(Name: string,bTryLoad: boolean): UObject;
	Invoke(Name: string): void;
	ForceGC(): void;
	Expose(ExposedAs: string,UObject: UObject): void;
	static C(Other: UObject | any): JavascriptComponent;
}

declare class JavascriptDelegate extends UObject { 
	static Load(ResourceName: string): JavascriptDelegate;
	static Find(Outer: UObject, ResourceName: string): JavascriptDelegate;
	static GetDefaultObject(): JavascriptDelegate;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptDelegate;
	Fire(): void;
	static C(Other: UObject | any): JavascriptDelegate;
}

declare class JavascriptGeneratedClass extends BlueprintGeneratedClass { 
	static Load(ResourceName: string): JavascriptGeneratedClass;
	static Find(Outer: UObject, ResourceName: string): JavascriptGeneratedClass;
	static GetDefaultObject(): JavascriptGeneratedClass;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptGeneratedClass;
	static C(Other: UObject | any): JavascriptGeneratedClass;
}

declare class JavascriptGeneratedClass_Native extends BlueprintGeneratedClass { 
	static Load(ResourceName: string): JavascriptGeneratedClass_Native;
	static Find(Outer: UObject, ResourceName: string): JavascriptGeneratedClass_Native;
	static GetDefaultObject(): JavascriptGeneratedClass_Native;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptGeneratedClass_Native;
	static C(Other: UObject | any): JavascriptGeneratedClass_Native;
}

declare class JavascriptGeneratedFunction extends UFunction { 
	static Load(ResourceName: string): JavascriptGeneratedFunction;
	static Find(Outer: UObject, ResourceName: string): JavascriptGeneratedFunction;
	static GetDefaultObject(): JavascriptGeneratedFunction;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptGeneratedFunction;
	static C(Other: UObject | any): JavascriptGeneratedFunction;
}

declare class JavascriptGlobalDelegates extends UObject { 
	static Load(ResourceName: string): JavascriptGlobalDelegates;
	static Find(Outer: UObject, ResourceName: string): JavascriptGlobalDelegates;
	static GetDefaultObject(): JavascriptGlobalDelegates;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptGlobalDelegates;
	UnbindAll(): void;
	Unbind(Key: string): void;
	RedirectorFollowed(PackageName: string,Redirector: UObject): void;
	PreLoadMap(MapName: string): void;
	PreGarbageCollectDelegate(): void;
	PostLoadMapWithWorld(World: World): void;
	PostGarbageCollect(): void;
	PostDemoPlay(): void;
	PostApplyLevelOffset(Level: Level,World: World,Offset: Vector,Flag: boolean): void;
	PackageCreatedForLoad(InPackage: Package): void;
	OnWorldCleanup(World: World,bSessionEnded: boolean,bCleanupResources: boolean): void;
	OnPreWorldInitialization_Friendly(World: World): void;
	OnPreWorldFinishDestroy(World: World): void;
	OnPreObjectPropertyChanged_Friendly(InObject: UObject,Property: any,MemberProperty: any): void;
	OnPostWorldInitialization_Friendly(World: World): void;
	OnPostWorldCreation(World: World): void;
	OnPostDuplicate_Friendly(World: World,bDuplicateForPIE: boolean): void;
	OnObjectPropertyChanged_Friendly(InObject: UObject,Property: any,MemberProperty: any,ChangeType: number): void;
	OnObjectPreSave_Friendly(ObjectSaved: UObject): void;
	OnObjectModified(UObject: UObject): void;
	OnAssetLoaded(UObject: UObject): void;
	OnActorLabelChanged(Actor: Actor): void;
	LevelRemovedFromWorld(Level: Level,World: World): void;
	LevelAddedToWorld(Level: Level,World: World): void;
	Bind(Key: string): void;
	static C(Other: UObject | any): JavascriptGlobalDelegates;
}

declare class JavascriptStaticCache extends UObject { 
	Isolates: JavascriptIsolate[];
	bExecuteTestModePIE: boolean;
	static Load(ResourceName: string): JavascriptStaticCache;
	static Find(Outer: UObject, ResourceName: string): JavascriptStaticCache;
	static GetDefaultObject(): JavascriptStaticCache;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptStaticCache;
	static C(Other: UObject | any): JavascriptStaticCache;
}

declare class JavascriptRow { 
	Values: string[];
	clone() : JavascriptRow;
	static C(Other: UObject | any): JavascriptRow;
}

declare class JavascriptStreamableManager { 
	clone() : JavascriptStreamableManager;
	static C(Other: UObject | any): JavascriptStreamableManager;
	IsAsyncLoadComplete(Target: SoftObjectPath): boolean;
	RequestAsyncLoad(TargetsToStream: SoftObjectPath[],DelegateToCall: JavascriptFunction,Priority: number): void;
	SimpleAsyncLoad(Target: SoftObjectPath,Priority: number): void;
	Unload(Target: SoftObjectPath): void;
	static IsAsyncLoadComplete(Manager: JavascriptStreamableManager,Target: SoftObjectPath): boolean;
	static RequestAsyncLoad(Manager: JavascriptStreamableManager,TargetsToStream: SoftObjectPath[],DelegateToCall: JavascriptFunction,Priority: number): void;
	static SimpleAsyncLoad(Manager: JavascriptStreamableManager,Target: SoftObjectPath,Priority: number): void;
	static Unload(Manager: JavascriptStreamableManager,Target: SoftObjectPath): void;
	static CreateStreamableManager(): JavascriptStreamableManager;
}

declare class JavascriptInternetAddr { 
	clone() : JavascriptInternetAddr;
	static C(Other: UObject | any): JavascriptInternetAddr;
	SetIp(ResolvedAddress?: string,bValid?: boolean): {Addr: JavascriptInternetAddr, bValid: boolean};
	SetPort(Port?: number): {Addr: JavascriptInternetAddr};
	static SetIp(Addr?: JavascriptInternetAddr,ResolvedAddress?: string,bValid?: boolean): {Addr: JavascriptInternetAddr, bValid: boolean};
	static SetPort(Addr?: JavascriptInternetAddr,Port?: number): {Addr: JavascriptInternetAddr};
	static CreateInternetAddr(): JavascriptInternetAddr;
}

declare class JavascriptSocket { 
	clone() : JavascriptSocket;
	static C(Other: UObject | any): JavascriptSocket;
	SendMemoryTo(ToAddr?: JavascriptInternetAddr,NumBytes?: number,BytesSent?: number): {Socket: JavascriptSocket, BytesSent: number, $: boolean};
	static SendMemoryTo(Socket?: JavascriptSocket,ToAddr?: JavascriptInternetAddr,NumBytes?: number,BytesSent?: number): {Socket: JavascriptSocket, BytesSent: number, $: boolean};
	static CreateSocket(SocketType: string,Description: string,bForceUDP: boolean): JavascriptSocket;
}

declare type EJavascriptStatDataType = 'Invalid' | 'ST_None' | 'ST_int64' | 'ST_double' | 'ST_FName' | 'ST_Ptr' | 'EJavascriptStatDataType_MAX';
declare var EJavascriptStatDataType : { Invalid:'Invalid',ST_None:'ST_None',ST_int64:'ST_int64',ST_double:'ST_double',ST_FName:'ST_FName',ST_Ptr:'ST_Ptr',EJavascriptStatDataType_MAX:'EJavascriptStatDataType_MAX', };
declare type EJavascriptStatOperation = 'Invalid' | 'SetLongName' | 'AdvanceFrameEventGameThread' | 'AdvanceFrameEventRenderThread' | 'CycleScopeStart' | 'CycleScopeEnd' | 'SpecialMessageMarker' | 'Set' | 'Clear' | 'Add' | 'Subtract' | 'ChildrenStart' | 'ChildrenEnd' | 'Leaf' | 'MaxVal' | 'Memory' | 'EJavascriptStatOperation_MAX';
declare var EJavascriptStatOperation : { Invalid:'Invalid',SetLongName:'SetLongName',AdvanceFrameEventGameThread:'AdvanceFrameEventGameThread',AdvanceFrameEventRenderThread:'AdvanceFrameEventRenderThread',CycleScopeStart:'CycleScopeStart',CycleScopeEnd:'CycleScopeEnd',SpecialMessageMarker:'SpecialMessageMarker',Set:'Set',Clear:'Clear',Add:'Add',Subtract:'Subtract',ChildrenStart:'ChildrenStart',ChildrenEnd:'ChildrenEnd',Leaf:'Leaf',MaxVal:'MaxVal',Memory:'Memory',EJavascriptStatOperation_MAX:'EJavascriptStatOperation_MAX', };
declare class JavascriptStat { 
	clone() : JavascriptStat;
	static C(Other: UObject | any): JavascriptStat;
	AddMessage(InStatOperation: EJavascriptStatOperation): void;
	AddMessage_float(InStatOperation: EJavascriptStatOperation,Value: number,bIsCycle: boolean): void;
	AddMessage_int(InStatOperation: EJavascriptStatOperation,Value: number,bIsCycle: boolean): void;
	static AddMessage(Stat: JavascriptStat,InStatOperation: EJavascriptStatOperation): void;
	static AddMessage_float(Stat: JavascriptStat,InStatOperation: EJavascriptStatOperation,Value: number,bIsCycle: boolean): void;
	static AddMessage_int(Stat: JavascriptStat,InStatOperation: EJavascriptStatOperation,Value: number,bIsCycle: boolean): void;
	static NewStat(InStatName: string,InStatDesc: string,InGroupName: string,InGroupCategory: string,InGroupDesc: string,bDefaultEnable: boolean,bShouldClearEveryFrame: boolean,InStatType: EJavascriptStatDataType,bCycleStat: boolean,bSortByName: boolean): JavascriptStat;
}

declare type ELogVerbosity_JS = 'NoLogging' | 'Fatal' | 'Error' | 'Warning' | 'Display' | 'Log' | 'Verbose' | 'VeryVerbose' | 'ELogVerbosity_MAX';
declare var ELogVerbosity_JS : { NoLogging:'NoLogging',Fatal:'Fatal',Error:'Error',Warning:'Warning',Display:'Display',Log:'Log',Verbose:'Verbose',VeryVerbose:'VeryVerbose',ELogVerbosity_MAX:'ELogVerbosity_MAX', };
declare class JavascriptLogCategory { 
	clone() : JavascriptLogCategory;
	static C(Other: UObject | any): JavascriptLogCategory;
	GetCategoryName(): string;
	IsSuppressed(Verbosity: ELogVerbosity_JS): boolean;
	Log(Verbosity: ELogVerbosity_JS,Message: string,Filename: string,LineNumber: number): void;
	static GetCategoryName(Category: JavascriptLogCategory): string;
	static IsSuppressed(Category: JavascriptLogCategory,Verbosity: ELogVerbosity_JS): boolean;
	static Log(Category: JavascriptLogCategory,Verbosity: ELogVerbosity_JS,Message: string,Filename: string,LineNumber: number): void;
	static CreateLogCategory(CategoryName: string,InDefaultVerbosity: ELogVerbosity_JS): JavascriptLogCategory;
}

declare class JavscriptProperty { 
	Type: string;
	Name: string;
	clone() : JavscriptProperty;
	static C(Other: UObject | any): JavscriptProperty;
}

declare class JavascriptProfileNode { 
	clone() : JavascriptProfileNode;
	static C(Other: UObject | any): JavascriptProfileNode;
	GetBailoutReason(): string;
	GetChild(index: number): JavascriptProfileNode;
	GetChildrenCount(): number;
	GetColumnNumber(): number;
	GetDeoptInfo_Reason(index: number): string;
	GetDeoptInfo_Stack(index: number): string;
	GetDeoptInfosCount(index: number): number;
	GetFunctionName(): string;
	GetHitCount(): number;
	GetHitLineCount(): number;
	GetLineNumber(): number;
	GetNodeId(): number;
	GetScriptId(): number;
	GetScriptResourceName(): string;
	static GetBailoutReason(UNode: JavascriptProfileNode): string;
	static GetChild(UNode: JavascriptProfileNode,index: number): JavascriptProfileNode;
	static GetChildrenCount(UNode: JavascriptProfileNode): number;
	static GetColumnNumber(UNode: JavascriptProfileNode): number;
	static GetDeoptInfo_Reason(UNode: JavascriptProfileNode,index: number): string;
	static GetDeoptInfo_Stack(UNode: JavascriptProfileNode,index: number): string;
	static GetDeoptInfosCount(UNode: JavascriptProfileNode,index: number): number;
	static GetFunctionName(UNode: JavascriptProfileNode): string;
	static GetHitCount(UNode: JavascriptProfileNode): number;
	static GetHitLineCount(UNode: JavascriptProfileNode): number;
	static GetLineNumber(UNode: JavascriptProfileNode): number;
	static GetNodeId(UNode: JavascriptProfileNode): number;
	static GetScriptId(UNode: JavascriptProfileNode): number;
	static GetScriptResourceName(UNode: JavascriptProfileNode): string;
}

declare class JavascriptLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): JavascriptLibrary;
	static Find(Outer: UObject, ResourceName: string): JavascriptLibrary;
	static GetDefaultObject(): JavascriptLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptLibrary;
	static WriteStringToFile(UObject: UObject,Filename: string,Data: string,EncodingOptions: EJavascriptEncodingOptions): boolean;
	static WriteFile(UObject: UObject,Filename: string): boolean;
	static WriteCSV(InPath: string,InData?: JavascriptRow[],EncodingOptions?: EJavascriptEncodingOptions): {InData: JavascriptRow[], $: boolean};
	static V8_SetIdleTaskBudget(BudgetInSeconds: number): void;
	static V8_SetFlagsFromString(V8Flags: string): void;
	static V8_IsEnableHotReload(): boolean;
	static UnregisterComponent(ActorComponent: ActorComponent): void;
	static Unload(Manager: JavascriptStreamableManager,Target: SoftObjectPath): void;
	static TryLoadByPath(Path: string): UObject;
	static SimpleAsyncLoad(Manager: JavascriptStreamableManager,Target: SoftObjectPath,Priority: number): void;
	static SetRootComponent(Actor: Actor,Component: SceneComponent): void;
	static SetPort(Addr?: JavascriptInternetAddr,Port?: number): {Addr: JavascriptInternetAddr};
	static SetObjectFlags(Obj: UObject,Flags: number): void;
	static SetMobility(SceneComponent: SceneComponent,Type: EComponentMobility): void;
	static SetMobile(SceneComponent: SceneComponent): void;
	static SetIp(Addr?: JavascriptInternetAddr,ResolvedAddress?: string,bValid?: boolean): {Addr: JavascriptInternetAddr, bValid: boolean};
	static SetClientTravel(Engine: Engine,InWorld: World,NextURL: string,InTravelType: ETravelType): void;
	static SetActorFlags(Actor: Actor,Flags: number): void;
	static SendMemoryTo(Socket?: JavascriptSocket,ToAddr?: JavascriptInternetAddr,NumBytes?: number,BytesSent?: number): {Socket: JavascriptSocket, BytesSent: number, $: boolean};
	static SegmentIntersection2D(SegmentStartA: Vector,SegmentEndA: Vector,SegmentStartB: Vector,SegmentEndB: Vector,IntersectionPoint?: Vector): {IntersectionPoint: Vector, $: boolean};
	static ResolveIp(HostName: string,OutIp?: string): {OutIp: string, $: boolean};
	static ReregisterComponent(ActorComponent: ActorComponent): void;
	static ReregisterAllComponents(Actor: Actor): void;
	static RequestAsyncLoad(Manager: JavascriptStreamableManager,TargetsToStream: SoftObjectPath[],DelegateToCall: JavascriptFunction,Priority: number): void;
	static RegisterComponent(ActorComponent: ActorComponent): void;
	static ReadStringFromFileAsync(UObject: UObject,Filename: string,UFunction: JavascriptFunction): ReadStringFromFileHandle;
	static ReadStringFromFile(UObject: UObject,Filename: string,ReadFlags: EFileRead_JS): string;
	static ReadFile(UObject: UObject,Filename: string): boolean;
	static ReadDirectory(UObject: UObject,Directory: string,OutItems?: DirectoryItem[]): {OutItems: DirectoryItem[], $: boolean};
	static ReadCSV(InPath: string,OutData?: JavascriptRow[],ReadFlags?: EFileRead_JS): {OutData: JavascriptRow[], $: boolean};
	static NewStat(InStatName: string,InStatDesc: string,InGroupName: string,InGroupCategory: string,InGroupDesc: string,bDefaultEnable: boolean,bShouldClearEveryFrame: boolean,InStatType: EJavascriptStatDataType,bCycleStat: boolean,bSortByName: boolean): JavascriptStat;
	static MarkRenderStateDirty(Component: ActorComponent): void;
	static MakeDirectory(Path: string,Tree: boolean): boolean;
	static Log(Category: JavascriptLogCategory,Verbosity: ELogVerbosity_JS,Message: string,Filename: string,LineNumber: number): void;
	static LoadPackage(InOuter: Package,PackageName: string): Package;
	static IsSuppressed(Category: JavascriptLogCategory,Verbosity: ELogVerbosity_JS): boolean;
	static IsRegistered(ActorComponent: ActorComponent): boolean;
	static IsPlayInPreview(World: World): boolean;
	static IsPlayInEditor(World: World): boolean;
	static IsPendingKill(InActor: Actor): boolean;
	static IsGeneratedByBlueprint(InClass: UnrealEngineClass): boolean;
	static IsGameWorld(World: World): boolean;
	static IsAsyncLoadComplete(Manager: JavascriptStreamableManager,Target: SoftObjectPath): boolean;
	static HasUndo(Engine: Engine): boolean;
	static HasAnyPackageFlags(Package: Package,Flags: number): boolean;
	static HasAnyFlags(UObject: UObject,Flags: number): boolean;
	static HandleSeamlessTravelPlayer(GameMode: GameModeBase,C?: Controller): {C: Controller};
	static GetWorldBounds(InWorld: World): Box;
	static GetSuperClasses(InClass: UnrealEngineClass): UnrealEngineClass[];
	static GetStructProperties(StructName: string,bIncludeSuper: boolean): JavscriptProperty[];
	static GetScriptResourceName(UNode: JavascriptProfileNode): string;
	static GetScriptId(UNode: JavascriptProfileNode): number;
	static GetPlatformName(): string;
	static GetOutermost(UObject: UObject): UObject;
	static GetOuter(UObject: UObject): UObject;
	static GetObjectsWithOuter(Outer: UObject,Results?: UObject[],bIncludeNestedObjects?: boolean,ExclusionFlags?: number,ExclusionInternalFlags?: number): {Results: UObject[]};
	static GetObjectsOfClass(ClassToLookFor: UnrealEngineClass,Results?: UObject[],bIncludeDerivedClasses?: boolean,ExcludeFlags?: number,ExclusionInternalFlags?: number): {Results: UObject[]};
	static GetNodeId(UNode: JavascriptProfileNode): number;
	static GetName(UObject: UObject): string;
	static GetModel(World: World): Model;
	static GetMetaData(Field: Field,Key: string): string;
	static GetLineNumber(UNode: JavascriptProfileNode): number;
	static GetLevels(World: World): Level[];
	static GetLevel(Actor: Actor): Level;
	static GetLastRenderTime(Actor: Actor): number;
	static GetHitLineCount(UNode: JavascriptProfileNode): number;
	static GetHitCount(UNode: JavascriptProfileNode): number;
	static GetFunctionParmsSize(UFunction: UFunction): number;
	static GetFunctionName(UNode: JavascriptProfileNode): string;
	static GetFileSize(UObject: UObject,Filename: string): number;
	static GetFields(UObject: UObject,bIncludeSuper: boolean): Field[];
	static GetEnumListByEnumName(EnumName: string): string[];
	static GetDynamicBinding(Outer: UnrealEngineClass,BindingObjectClass: UnrealEngineClass): DynamicBlueprintBinding;
	static GetDir(UObject: UObject,WhichDir: string): string;
	static GetDerivedClasses(ClassToLookFor: UnrealEngineClass,Results?: UnrealEngineClass[],bRecursive?: boolean): {Results: UnrealEngineClass[]};
	static GetDeoptInfosCount(UNode: JavascriptProfileNode,index: number): number;
	static GetDeoptInfo_Stack(UNode: JavascriptProfileNode,index: number): string;
	static GetDeoptInfo_Reason(UNode: JavascriptProfileNode,index: number): string;
	static GetCurrentProcessId(): number;
	static GetComponentsByClass(Actor: Actor,ComponentClass: UnrealEngineClass): ActorComponent[];
	static GetColumnNumber(UNode: JavascriptProfileNode): number;
	static GetClassPathName(Class: UnrealEngineClass): string;
	static GetChildrenCount(UNode: JavascriptProfileNode): number;
	static GetChild(UNode: JavascriptProfileNode,index: number): JavascriptProfileNode;
	static GetCategoryName(Category: JavascriptLogCategory): string;
	static GetBlueprintGeneratedClassFromPath(Path: string): UnrealEngineClass;
	static GetBlueprintGeneratedClass(Blueprint: Blueprint): UnrealEngineClass;
	static GetBailoutReason(UNode: JavascriptProfileNode): string;
	static GetArchetypePathName(UObject: UObject): string;
	static GetAllActorsOfClassAndTagsInCurrentLevel(WorldContextObject: UObject,ActorClass: UnrealEngineClass,Tags_Accept: string[],Tags_Deny: string[],OutActors?: Actor[]): {OutActors: Actor[]};
	static GetAllActorsOfClassAndTags(WorldContextObject: UObject,ActorClass: UnrealEngineClass,Tags_Accept: string[],Tags_Deny: string[],OutActors?: Actor[]): {OutActors: Actor[]};
	static GenerateNavigation(InWorld: World,NavData: RecastNavMesh): void;
	static FindPackage(InOuter: UObject,PackageName: string): Package;
	static FindObjectWithOuter(Outer: UObject,ClassToLookFor: UnrealEngineClass,NameToLookFor: string): UObject;
	static FileExists(Filename: string): boolean;
	static Duplicate(UObject: UObject,Outer: UObject,Name: string): UObject;
	static DirectoryExists(InDirectory: string): boolean;
	static DeleteFile(Filename: string,ReadOnly: boolean): boolean;
	static DeleteDirectory(Path: string,RequireExists: boolean,Tree: boolean): boolean;
	static CreateStreamableManager(): JavascriptStreamableManager;
	static CreateSocket(SocketType: string,Description: string,bForceUDP: boolean): JavascriptSocket;
	static CreatePackage(Outer: UObject,PackageName: string): Package;
	static CreateLogCategory(CategoryName: string,InDefaultVerbosity: ELogVerbosity_JS): JavascriptLogCategory;
	static CreateInternetAddr(): JavascriptInternetAddr;
	static CreateEnum(Outer: UObject,Name: string,DisplayNames: string[],Flags: string[]): Enum;
	static ConvertRelativePathToFull(UObject: UObject,RelativePath: string): string;
	static ClipboardPaste(): string;
	static ClipboardCopy(string: string): void;
	static CallJS(UFunction: JavascriptFunction,CustomStruct: JavascriptStubStruct): void;
	static AddMessage_int(Stat: JavascriptStat,InStatOperation: EJavascriptStatOperation,Value: number,bIsCycle: boolean): void;
	static AddMessage_float(Stat: JavascriptStat,InStatOperation: EJavascriptStatOperation,Value: number,bIsCycle: boolean): void;
	static AddMessage(Stat: JavascriptStat,InStatOperation: EJavascriptStatOperation): void;
	static AddDynamicBinding(Outer: UnrealEngineClass,BindingObject: DynamicBlueprintBinding): void;
	static Actor_GetWorld(Actor: Actor): World;
	static C(Other: UObject | any): JavascriptLibrary;
}

declare class JavascriptMemoryObject extends UObject { 
	static Load(ResourceName: string): JavascriptMemoryObject;
	static Find(Outer: UObject, ResourceName: string): JavascriptMemoryObject;
	static GetDefaultObject(): JavascriptMemoryObject;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptMemoryObject;
	static C(Other: UObject | any): JavascriptMemoryObject;
}

declare class JavascriptRef { 
	clone() : JavascriptRef;
	static C(Other: UObject | any): JavascriptRef;
}

declare class JavascriptObject extends UObject { 
	Ref: JavascriptRef;
	Func: JavascriptFunction;
	static Load(ResourceName: string): JavascriptObject;
	static Find(Outer: UObject, ResourceName: string): JavascriptObject;
	static GetDefaultObject(): JavascriptObject;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptObject;
	static C(Other: UObject | any): JavascriptObject;
}

declare class JavascriptOutputDevice extends UObject { 
	static Load(ResourceName: string): JavascriptOutputDevice;
	static Find(Outer: UObject, ResourceName: string): JavascriptOutputDevice;
	static GetDefaultObject(): JavascriptOutputDevice;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptOutputDevice;
	OnMessage(Message: string,Verbosity: ELogVerbosity_JS,Category: string): void;
	static Log(Category: string,Verbosity: ELogVerbosity_JS,Filename: string,LineNumber: number,Message: string): void;
	Kill(): void;
	static C(Other: UObject | any): JavascriptOutputDevice;
}

declare class JavascriptProcess extends UObject { 
	static Load(ResourceName: string): JavascriptProcess;
	static Find(Outer: UObject, ResourceName: string): JavascriptProcess;
	static GetDefaultObject(): JavascriptProcess;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptProcess;
	WriteToPipe(Message: string,OutWritten?: string): {OutWritten: string, $: boolean};
	Wait(): void;
	Terminate(KillTree: boolean): void;
	static Sleep(Seconds: number): void;
	static SimulateKeypress(KeyEvent: number): void;
	static SetEnvironmentVar(VarName: string,VarValue: string): void;
	ReadFromPipe(): string;
	ReadArrayFromPipe(Array?: number[]): {Array: number[], $: boolean};
	static Open_PID(ProcessId: number): JavascriptProcess;
	static Open(ProcName: string): JavascriptProcess;
	static LaunchURL(URL: string,Parms: string,Error?: string): {Error: string};
	IsRunning(): boolean;
	static IsApplicationRunning_PID(ProcessId: number): boolean;
	static IsApplicationRunning(ProcName: string): boolean;
	static GetString(Key: string,bFlag: boolean): string;
	GetReturnCode(ReturnCode?: number): {ReturnCode: number, $: boolean};
	static GetEnvironmentVar(VarName: string): string;
	static GetCurrentProcessId(): number;
	static GetApplicationName(ProcessId: number): string;
	static Create(URL: string,Parms: string,bLaunchDetached: boolean,bLaunchHidden: boolean,bLaunchReallyHidden: boolean,PriorityModifier: number,OptionalWorkingDirectory: string,bUsePipe: boolean): JavascriptProcess;
	Close(): void;
	static CanLaunchURL(URL: string): boolean;
	static C(Other: UObject | any): JavascriptProcess;
}

declare class JavascriptCpuProfiler { 
	clone() : JavascriptCpuProfiler;
	static C(Other: UObject | any): JavascriptCpuProfiler;
}

declare class JavascriptProfile extends UObject { 
	static Load(ResourceName: string): JavascriptProfile;
	static Find(Outer: UObject, ResourceName: string): JavascriptProfile;
	static GetDefaultObject(): JavascriptProfile;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptProfile;
	static Stop(Profiler: JavascriptCpuProfiler,Title: string): JavascriptProfile;
	static Start(Title: string,bRecordSamples: boolean): JavascriptCpuProfiler;
	static SetSamplingInterval(Profiler: JavascriptCpuProfiler,us: number): void;
	static SetIdle(Profiler: JavascriptCpuProfiler,is_idle: boolean): void;
	GetTopDownRoot(): JavascriptProfileNode;
	GetSampleTimestamp(index: number): number;
	GetSamplesCount(): number;
	GetSample(index: number): JavascriptProfileNode;
	static C(Other: UObject | any): JavascriptProfile;
}

declare class JavascriptSemaphore extends UObject { 
	static Load(ResourceName: string): JavascriptSemaphore;
	static Find(Outer: UObject, ResourceName: string): JavascriptSemaphore;
	static GetDefaultObject(): JavascriptSemaphore;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptSemaphore;
	Unlock(): void;
	TryLock(NanosecondsToWait: number): boolean;
	Lock(): void;
	Dispose(): void;
	static Create(Name: string,bCreate: boolean,MaxLocks: number): JavascriptSemaphore;
	static C(Other: UObject | any): JavascriptSemaphore;
}

declare class JavascriptSettings extends UObject { 
	V8Flags: string;
	bEnableHotReload: boolean;
	static Load(ResourceName: string): JavascriptSettings;
	static Find(Outer: UObject, ResourceName: string): JavascriptSettings;
	static GetDefaultObject(): JavascriptSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptSettings;
	static C(Other: UObject | any): JavascriptSettings;
}

declare class JavascriptSharedMemoryRegion extends JavascriptMemoryObject { 
	static Load(ResourceName: string): JavascriptSharedMemoryRegion;
	static Find(Outer: UObject, ResourceName: string): JavascriptSharedMemoryRegion;
	static GetDefaultObject(): JavascriptSharedMemoryRegion;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptSharedMemoryRegion;
	Dispose(): void;
	static Create(Name: string,bCreate: boolean,bRead: boolean,bWrite: boolean,Size: number): JavascriptSharedMemoryRegion;
	static C(Other: UObject | any): JavascriptSharedMemoryRegion;
}

declare class JavascriptAutomatedTestInstance { 
	clone() : JavascriptAutomatedTestInstance;
	static C(Other: UObject | any): JavascriptAutomatedTestInstance;
	AddAnalyticsItem(InAnalyticsItem: string): void;
	AddError(InError: string): void;
	AddLogItem(InLogItem: string): void;
	AddWarning(InWarning: string): void;
	ClearExecutionInfo(): void;
	Destroy(): {Test: JavascriptAutomatedTestInstance};
	SetContinue(bInContinue: boolean): void;
	static AddAnalyticsItem(Test: JavascriptAutomatedTestInstance,InAnalyticsItem: string): void;
	static AddError(Test: JavascriptAutomatedTestInstance,InError: string): void;
	static AddLogItem(Test: JavascriptAutomatedTestInstance,InLogItem: string): void;
	static AddWarning(Test: JavascriptAutomatedTestInstance,InWarning: string): void;
	static ClearExecutionInfo(Test: JavascriptAutomatedTestInstance): void;
	static Destroy(Test?: JavascriptAutomatedTestInstance): {Test: JavascriptAutomatedTestInstance};
	static SetContinue(Test: JavascriptAutomatedTestInstance,bInContinue: boolean): void;
}

declare class JavascriptAutomatedTest { 
	Name: string;
	bComplexTask: boolean;
	TestFlags: number;
	RequiredDeviceNum: number;
	TestFunctionNames: string[];
	UFunction: JavascriptFunction;
	clone() : JavascriptAutomatedTest;
	static C(Other: UObject | any): JavascriptAutomatedTest;
	Create(): JavascriptAutomatedTestInstance;
	static Create(Test: JavascriptAutomatedTest): JavascriptAutomatedTestInstance;
}

declare class JavascriptTestLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): JavascriptTestLibrary;
	static Find(Outer: UObject, ResourceName: string): JavascriptTestLibrary;
	static GetDefaultObject(): JavascriptTestLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptTestLibrary;
	static SetContinue(Test: JavascriptAutomatedTestInstance,bInContinue: boolean): void;
	static PushFrameCounter(): void;
	static PopFrameCounter(): void;
	static NewWorld(): World;
	static InitializeActorsForPlay(World: World,URL: URL): void;
	static DestroyWorld(World: World): void;
	static DestroyUObject(UObject: UObject): void;
	static Destroy(Test?: JavascriptAutomatedTestInstance): {Test: JavascriptAutomatedTestInstance};
	static Create(Test: JavascriptAutomatedTest): JavascriptAutomatedTestInstance;
	static ClearExecutionInfo(Test: JavascriptAutomatedTestInstance): void;
	static BeginPlay(World: World): void;
	static AddWarning(Test: JavascriptAutomatedTestInstance,InWarning: string): void;
	static AddLogItem(Test: JavascriptAutomatedTestInstance,InLogItem: string): void;
	static AddError(Test: JavascriptAutomatedTestInstance,InError: string): void;
	static AddAnalyticsItem(Test: JavascriptAutomatedTestInstance,InAnalyticsItem: string): void;
	static C(Other: UObject | any): JavascriptTestLibrary;
}

declare class DirectoryWatcherCallback__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): DirectoryWatcherCallback__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): DirectoryWatcherCallback__PythonCallable;
	static GetDefaultObject(): DirectoryWatcherCallback__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DirectoryWatcherCallback__PythonCallable;
	static C(Other: UObject | any): DirectoryWatcherCallback__PythonCallable;
}

declare class JavascriptNameSignature__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): JavascriptNameSignature__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): JavascriptNameSignature__PythonCallable;
	static GetDefaultObject(): JavascriptNameSignature__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptNameSignature__PythonCallable;
	static C(Other: UObject | any): JavascriptNameSignature__PythonCallable;
}

declare class JavascriptNoParamSignature__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): JavascriptNoParamSignature__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): JavascriptNoParamSignature__PythonCallable;
	static GetDefaultObject(): JavascriptNoParamSignature__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptNoParamSignature__PythonCallable;
	static C(Other: UObject | any): JavascriptNoParamSignature__PythonCallable;
}

declare class JavascriptTickSignature__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): JavascriptTickSignature__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): JavascriptTickSignature__PythonCallable;
	static GetDefaultObject(): JavascriptTickSignature__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptTickSignature__PythonCallable;
	static C(Other: UObject | any): JavascriptTickSignature__PythonCallable;
}

declare class JavascriptComboButton extends ContentWidget { 
	ComboButtonStyle: ComboButtonStyle;
	ButtonStyle: ButtonStyle;
	OnGetMenuContent: UnrealEngineDelegate<() => JavascriptSlateWidget>;
	OnMenuOpenChanged: UnrealEngineDelegate<(Value: boolean) => void>;
	OnComboBoxOpened: UnrealEngineDelegate<() => void>;
	bIsFocusable: boolean;
	bHasDownArrow: boolean;
	ForegroundColor: SlateColor;
	ButtonColorAndOpacity: SlateColor;
	ContentPadding: Margin;
	MenuPlacement: EMenuPlacement;
	HAlign: EHorizontalAlignment;
	VAlign: EVerticalAlignment;
	static Load(ResourceName: string): JavascriptComboButton;
	static Find(Outer: UObject, ResourceName: string): JavascriptComboButton;
	static GetDefaultObject(): JavascriptComboButton;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptComboButton;
	SetIsOpen(InIsOpen: boolean,bFocusMenu: boolean): void;
	static C(Other: UObject | any): JavascriptComboButton;
}

declare class JavascriptSlateIcon { 
	StyleSetName: string;
	StyleName: string;
	SmallStyleName: string;
	clone() : JavascriptSlateIcon;
	static C(Other: UObject | any): JavascriptSlateIcon;
}

declare class JavascriptComboButtonContext extends UObject { 
	OnGetLabel: UnrealEngineDelegate<() => string>;
	OnGetTooltip: UnrealEngineDelegate<() => string>;
	OnGetIcon: UnrealEngineDelegate<() => JavascriptSlateIcon>;
	OnGetWidget: UnrealEngineDelegate<(EditingObject: UObject) => JavascriptSlateWidget>;
	OnCanExecute: UnrealEngineDelegate<() => boolean>;
	static Load(ResourceName: string): JavascriptComboButtonContext;
	static Find(Outer: UObject, ResourceName: string): JavascriptComboButtonContext;
	static GetDefaultObject(): JavascriptComboButtonContext;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptComboButtonContext;
	UnmarkReferencedObject(): void;
	MarkReferencedObject(): void;
	static C(Other: UObject | any): JavascriptComboButtonContext;
}

declare class JavascriptTextProperty { 
	Key: string;
	Namespace: string;
	Value: string;
	TableId: string;
	clone() : JavascriptTextProperty;
	static C(Other: UObject | any): JavascriptTextProperty;
	static FromStringTable(InTableId: string,InKey: string): JavascriptTextProperty;
}

declare class JavascriptFTextBox extends Widget { 
	OnIsReadOnly: UnrealEngineDelegate<() => boolean>;
	OnIsValidText: UnrealEngineDelegate<(TextValue: string) => string>;
	OnGetDefaultValue: UnrealEngineDelegate<() => JavascriptTextProperty>;
	OnTextCommitted: UnrealEngineMulticastDelegate<(TextProperty: JavascriptTextProperty) => void>;
	WidgetStyle: EditableTextBoxStyle;
	WrapTextAt: number;
	AutoWrapText: boolean;
	static Load(ResourceName: string): JavascriptFTextBox;
	static Find(Outer: UObject, ResourceName: string): JavascriptFTextBox;
	static GetDefaultObject(): JavascriptFTextBox;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptFTextBox;
	static C(Other: UObject | any): JavascriptFTextBox;
}

declare class JavascriptGameViewport extends ContentWidget { 
	BackgroundColor: LinearColor;
	static Load(ResourceName: string): JavascriptGameViewport;
	static Find(Outer: UObject, ResourceName: string): JavascriptGameViewport;
	static GetDefaultObject(): JavascriptGameViewport;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptGameViewport;
	Spawn(ActorClass: UnrealEngineClass): Actor;
	SetViewRotation(Rotation: Rotator): void;
	SetViewLocation(Location: Vector): void;
	GetViewRotation(): Rotator;
	GetViewportWorld(): World;
	GetViewLocation(): Vector;
	static C(Other: UObject | any): JavascriptGameViewport;
}

declare class JavascriptIntSpinBox extends Widget { 
	Value: number;
	ValueDelegate: UnrealEngineDelegate<() => number>;
	WidgetStyle: SpinBoxStyle;
	Style: SlateWidgetStyleAsset;
	Delta: number;
	SliderExponent: number;
	Font: SlateFontInfo;
	Justification: ETextJustify;
	MinDesiredWidth: number;
	ClearKeyboardFocusOnCommit: boolean;
	SelectAllTextOnCommit: boolean;
	ForegroundColor: SlateColor;
	OnValueChanged: UnrealEngineMulticastDelegate<(InValue: number) => void>;
	OnValueCommitted: UnrealEngineMulticastDelegate<(InValue: number, CommitMethod: ETextCommit) => void>;
	OnBeginSliderMovement: UnrealEngineMulticastDelegate<() => void>;
	OnEndSliderMovement: UnrealEngineMulticastDelegate<(InValue: number) => void>;
	bOverride_MinValue: boolean;
	bOverride_MaxValue: boolean;
	bOverride_MinSliderValue: boolean;
	bOverride_MaxSliderValue: boolean;
	MinValue: number;
	MaxValue: number;
	MinSliderValue: number;
	MaxSliderValue: number;
	static Load(ResourceName: string): JavascriptIntSpinBox;
	static Find(Outer: UObject, ResourceName: string): JavascriptIntSpinBox;
	static GetDefaultObject(): JavascriptIntSpinBox;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptIntSpinBox;
	SetValue(NewValue: number): void;
	SetMinValue(NewValue: number): void;
	SetMinSliderValue(NewValue: number): void;
	SetMaxValue(NewValue: number): void;
	SetMaxSliderValue(NewValue: number): void;
	SetForegroundColor(InForegroundColor: SlateColor): void;
	GetValue(): number;
	GetMinValue(): number;
	GetMinSliderValue(): number;
	GetMaxValue(): number;
	GetMaxSliderValue(): number;
	ClearMinValue(): void;
	ClearMinSliderValue(): void;
	ClearMaxValue(): void;
	ClearMaxSliderValue(): void;
	static C(Other: UObject | any): JavascriptIntSpinBox;
}

declare class TableColumnHeaderStyle extends SlateWidgetStyle { 
	SortPrimaryAscendingImage: SlateBrush;
	SortPrimaryDescendingImage: SlateBrush;
	SortSecondaryAscendingImage: SlateBrush;
	SortSecondaryDescendingImage: SlateBrush;
	NormalBrush: SlateBrush;
	HoveredBrush: SlateBrush;
	MenuDropdownImage: SlateBrush;
	MenuDropdownNormalBorderBrush: SlateBrush;
	MenuDropdownHoveredBorderBrush: SlateBrush;
	clone() : TableColumnHeaderStyle;
	static C(Other: UObject | any): TableColumnHeaderStyle;
}

declare class SplitterStyle extends SlateWidgetStyle { 
	HandleNormalBrush: SlateBrush;
	HandleHighlightBrush: SlateBrush;
	clone() : SplitterStyle;
	static C(Other: UObject | any): SplitterStyle;
}

declare class HeaderRowStyle extends SlateWidgetStyle { 
	ColumnStyle: TableColumnHeaderStyle;
	LastColumnStyle: TableColumnHeaderStyle;
	ColumnSplitterStyle: SplitterStyle;
	SplitterHandleSize: number;
	BackgroundBrush: SlateBrush;
	ForegroundColor: SlateColor;
	HorizontalSeparatorBrush: SlateBrush;
	HorizontalSeparatorThickness: number;
	clone() : HeaderRowStyle;
	static C(Other: UObject | any): HeaderRowStyle;
}

declare class JavascriptColumn { 
	ID: string;
	Width: number;
	Widget: Widget;
	clone() : JavascriptColumn;
	static C(Other: UObject | any): JavascriptColumn;
}

declare class JavascriptTreeView extends ListViewBase { 
	OnGenerateRowEvent: UnrealEngineDelegate<(UObject: UObject, ID: string, Instance: JavascriptTreeView) => Widget>;
	OnExpansionChanged: UnrealEngineDelegate<(Item: UObject, bExpanded: boolean, Instance: JavascriptTreeView) => void>;
	OnContextMenuOpening: UnrealEngineDelegate<(Instance: JavascriptTreeView) => Widget>;
	OnGetChildren: UnrealEngineDelegate<(Item: UObject, Instance: JavascriptTreeView) => void>;
	JavascriptContext: JavascriptContext;
	Items: UObject[];
	HeaderRowStyle: HeaderRowStyle;
	TableRowStyle: TableRowStyle;
	ScrollBarStyle: ScrollBarStyle;
	SelectionMode: ESelectionMode;
	Children: UObject[];
	Columns: JavascriptColumn[];
	ColumnWidgets: Widget[];
	static Load(ResourceName: string): JavascriptTreeView;
	static Find(Outer: UObject, ResourceName: string): JavascriptTreeView;
	static GetDefaultObject(): JavascriptTreeView;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptTreeView;
	SetSingleExpandedItem(InItem: UObject): void;
	SetSelection(SoleSelectedItem: UObject): void;
	SetItemSelection(MultiSelectedItems: UObject[],bIsSelected: boolean): void;
	SetItemExpansion(InItem: UObject,InShouldExpandItem: boolean): void;
	SetDoubleClickSelection(SelectedItem: UObject): void;
	RequestTreeRefresh(): void;
	RequestNavigateToItem(Item: UObject): void;
	OnSelectionChanged(UObject: UObject,Type: ESelectInfo): void;
	OnDoubleClick(UObject: UObject): void;
	IsItemExpanded(InItem: UObject): boolean;
	IsDoubleClickSelection(SelectedItem: UObject): boolean;
	GetSelectedItems(OutItems?: UObject[]): {OutItems: UObject[], $: boolean};
	GetDoubleClickedItems(OutItems?: UObject[]): {OutItems: UObject[]};
	ClearSelection(): void;
	ClearDoubleClickSelection(): void;
	static C(Other: UObject | any): JavascriptTreeView;
}

declare class JavascriptListView extends JavascriptTreeView { 
	ItemHeight: number;
	static Load(ResourceName: string): JavascriptListView;
	static Find(Outer: UObject, ResourceName: string): JavascriptListView;
	static GetDefaultObject(): JavascriptListView;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptListView;
	RequestListRefresh(): void;
	OnClick(UObject: UObject): void;
	static C(Other: UObject | any): JavascriptListView;
}

declare type EJavasrciptUserInterfaceActionType = 'None' | 'Button' | 'ToggleButton' | 'RadioButton' | 'Check' | 'CollapsedButton' | 'EJavasrciptUserInterfaceActionType_MAX';
declare var EJavasrciptUserInterfaceActionType : { None:'None',Button:'Button',ToggleButton:'ToggleButton',RadioButton:'RadioButton',Check:'Check',CollapsedButton:'CollapsedButton',EJavasrciptUserInterfaceActionType_MAX:'EJavasrciptUserInterfaceActionType_MAX', };
declare class JavascriptMenuContext extends UObject { 
	Description: string;
	Tooltip: string;
	Icon: JavascriptSlateIcon;
	ActionType: EJavasrciptUserInterfaceActionType;
	OnCanExecute: UnrealEngineDelegate<() => boolean>;
	OnExecute: UnrealEngineDelegate<() => void>;
	OnGetActionCheckState: UnrealEngineDelegate<() => ECheckBoxState>;
	static Load(ResourceName: string): JavascriptMenuContext;
	static Find(Outer: UObject, ResourceName: string): JavascriptMenuContext;
	static GetDefaultObject(): JavascriptMenuContext;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptMenuContext;
	static C(Other: UObject | any): JavascriptMenuContext;
}

declare class JavascriptSlateTextRun { 
	clone() : JavascriptSlateTextRun;
	static C(Other: UObject | any): JavascriptSlateTextRun;
}

declare class JavascriptTextModel extends UObject { 
	static Load(ResourceName: string): JavascriptTextModel;
	static Find(Outer: UObject, ResourceName: string): JavascriptTextModel;
	static GetDefaultObject(): JavascriptTextModel;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptTextModel;
	SetString(string: string): void;
	GetString(): string;
	CreateRun(MessageTextStyle: TextBlockStyle,BeginIndex: number,EndIndex: number): JavascriptSlateTextRun;
	static C(Other: UObject | any): JavascriptTextModel;
}

declare class JavascriptTextLayout { 
	clone() : JavascriptTextLayout;
	static C(Other: UObject | any): JavascriptTextLayout;
	AddLine(Model?: JavascriptTextModel,Runs?: JavascriptSlateTextRun[]): {TextLayout: JavascriptTextLayout};
	ClearLines(): {TextLayout: JavascriptTextLayout};
	GetAsText(): string;
	GetLineLength(): number;
	static AddLine(TextLayout?: JavascriptTextLayout,Model?: JavascriptTextModel,Runs?: JavascriptSlateTextRun[]): {TextLayout: JavascriptTextLayout};
	static ClearLines(TextLayout?: JavascriptTextLayout): {TextLayout: JavascriptTextLayout};
	static GetAsText(TextLayout: JavascriptTextLayout): string;
	static GetLineLength(TargetTextLayout: JavascriptTextLayout): number;
}

declare class JavascriptMultiLineEditableTextBox extends MultiLineEditableTextBox { 
	OnVScrollBarUserScrolled: UnrealEngineMulticastDelegate<(Offset: number) => void>;
	GetTextDelegate: UnrealEngineDelegate<(TextLayout: JavascriptTextLayout) => string>;
	SetTextDelegate: UnrealEngineDelegate<(InText: string, TextLayout: JavascriptTextLayout) => void>;
	bAlwaysShowScrollbars: boolean;
	static Load(ResourceName: string): JavascriptMultiLineEditableTextBox;
	static Find(Outer: UObject, ResourceName: string): JavascriptMultiLineEditableTextBox;
	static GetDefaultObject(): JavascriptMultiLineEditableTextBox;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptMultiLineEditableTextBox;
	ScrollTo(Line: number,Offset: number): void;
	Refresh(): void;
	GoTo(Line: number,Offset: number): void;
	static C(Other: UObject | any): JavascriptMultiLineEditableTextBox;
}

declare class JavascriptRichTextBlockHyperlinkDecorator extends RichTextBlockDecorator { 
	HyperlinkId: string;
	OnClick: UnrealEngineMulticastDelegate<(Self: JavascriptRichTextBlockHyperlinkDecorator) => void>;
	static Load(ResourceName: string): JavascriptRichTextBlockHyperlinkDecorator;
	static Find(Outer: UObject, ResourceName: string): JavascriptRichTextBlockHyperlinkDecorator;
	static GetDefaultObject(): JavascriptRichTextBlockHyperlinkDecorator;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptRichTextBlockHyperlinkDecorator;
	GetMetadata(Key: string): string;
	static C(Other: UObject | any): JavascriptRichTextBlockHyperlinkDecorator;
}

declare class JavascriptSearchBox extends Widget { 
	JavascriptContext: JavascriptContext;
	OnTextChanged: UnrealEngineMulticastDelegate<(text: string) => void>;
	OnTextCommitted: UnrealEngineMulticastDelegate<(text: string, CommitMethod: ETextCommit) => void>;
	text: string;
	TextDelegate: UnrealEngineDelegate<() => string>;
	HintText: string;
	HintTextDelegate: UnrealEngineDelegate<() => string>;
	static Load(ResourceName: string): JavascriptSearchBox;
	static Find(Outer: UObject, ResourceName: string): JavascriptSearchBox;
	static GetDefaultObject(): JavascriptSearchBox;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptSearchBox;
	SetText(InText: string): void;
	SetHintText(InHintText: string): void;
	OnKeyDown(MyGeometry: Geometry,InKeyEvent: KeyEvent): EventReply;
	static C(Other: UObject | any): JavascriptSearchBox;
}

declare class JavascriptStyleSet { 
	StyleSetName: string;
	clone() : JavascriptStyleSet;
	static C(Other: UObject | any): JavascriptStyleSet;
	GetBrush(StyleName: string): SlateBrush;
	GetButtonStyle(StyleName: string): ButtonStyle;
	GetCheckBoxStyle(StyleName: string): CheckBoxStyle;
	GetColor(StyleName: string): LinearColor;
	GetComboBoxStyle(StyleName: string): ComboBoxStyle;
	GetComboButtonStyle(StyleName: string): ComboButtonStyle;
	GetEditableTextBoxStyle(StyleName: string): EditableTextBoxStyle;
	GetEditableTextStyle(StyleName: string): EditableTextStyle;
	GetFloat(StyleName: string): number;
	GetFontStyle(StyleName: string): SlateFontInfo;
	GetMargin(StyleName: string): Margin;
	GetProgressBarStyle(StyleName: string): ProgressBarStyle;
	GetSlateColor(StyleName: string): SlateColor;
	GetSound(StyleName: string): SlateSound;
	GetSpinBoxStyle(StyleName: string): SpinBoxStyle;
	GetTableRowStyle(StyleName: string): TableRowStyle;
	GetTextBlockStyle(StyleName: string): TextBlockStyle;
	GetVector(StyleName: string): Vector2D;
	static GetBrush(Handle: JavascriptStyleSet,StyleName: string): SlateBrush;
	static GetButtonStyle(Handle: JavascriptStyleSet,StyleName: string): ButtonStyle;
	static GetCheckBoxStyle(Handle: JavascriptStyleSet,StyleName: string): CheckBoxStyle;
	static GetColor(Handle: JavascriptStyleSet,StyleName: string): LinearColor;
	static GetComboBoxStyle(Handle: JavascriptStyleSet,StyleName: string): ComboBoxStyle;
	static GetComboButtonStyle(Handle: JavascriptStyleSet,StyleName: string): ComboButtonStyle;
	static GetEditableTextBoxStyle(Handle: JavascriptStyleSet,StyleName: string): EditableTextBoxStyle;
	static GetEditableTextStyle(Handle: JavascriptStyleSet,StyleName: string): EditableTextStyle;
	static GetFloat(Handle: JavascriptStyleSet,StyleName: string): number;
	static GetFontStyle(Handle: JavascriptStyleSet,StyleName: string): SlateFontInfo;
	static GetMargin(Handle: JavascriptStyleSet,StyleName: string): Margin;
	static GetProgressBarStyle(Handle: JavascriptStyleSet,StyleName: string): ProgressBarStyle;
	static GetSlateColor(Handle: JavascriptStyleSet,StyleName: string): SlateColor;
	static GetSound(Handle: JavascriptStyleSet,StyleName: string): SlateSound;
	static GetSpinBoxStyle(Handle: JavascriptStyleSet,StyleName: string): SpinBoxStyle;
	static GetTableRowStyle(Handle: JavascriptStyleSet,StyleName: string): TableRowStyle;
	static GetTextBlockStyle(Handle: JavascriptStyleSet,StyleName: string): TextBlockStyle;
	static GetVector(Handle: JavascriptStyleSet,StyleName: string): Vector2D;
}

declare class JavascriptStyleSetLibrary extends BlueprintFunctionLibrary { 
	SlateColor: SlateColor;
	SlateBrush: SlateBrush;
	ButtonStyle: ButtonStyle;
	TextBlockStyle: TextBlockStyle;
	EditableTextStyle: EditableTextStyle;
	EditableTextBoxStyle: EditableTextBoxStyle;
	CheckBoxStyle: CheckBoxStyle;
	ComboBoxStyle: ComboBoxStyle;
	ComboButtonStyle: ComboButtonStyle;
	ProgressBarStyle: ProgressBarStyle;
	SpinBoxStyle: SpinBoxStyle;
	TableRowStyle: TableRowStyle;
	static Load(ResourceName: string): JavascriptStyleSetLibrary;
	static Find(Outer: UObject, ResourceName: string): JavascriptStyleSetLibrary;
	static GetDefaultObject(): JavascriptStyleSetLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptStyleSetLibrary;
	static GetVector(Handle: JavascriptStyleSet,StyleName: string): Vector2D;
	static GetTextBlockStyle(Handle: JavascriptStyleSet,StyleName: string): TextBlockStyle;
	static GetTableRowStyle(Handle: JavascriptStyleSet,StyleName: string): TableRowStyle;
	static GetSpinBoxStyle(Handle: JavascriptStyleSet,StyleName: string): SpinBoxStyle;
	static GetSound(Handle: JavascriptStyleSet,StyleName: string): SlateSound;
	static GetSlateColor(Handle: JavascriptStyleSet,StyleName: string): SlateColor;
	static GetProgressBarStyle(Handle: JavascriptStyleSet,StyleName: string): ProgressBarStyle;
	static GetMargin(Handle: JavascriptStyleSet,StyleName: string): Margin;
	static GetFontStyle(Handle: JavascriptStyleSet,StyleName: string): SlateFontInfo;
	static GetFloat(Handle: JavascriptStyleSet,StyleName: string): number;
	static GetEditableTextStyle(Handle: JavascriptStyleSet,StyleName: string): EditableTextStyle;
	static GetEditableTextBoxStyle(Handle: JavascriptStyleSet,StyleName: string): EditableTextBoxStyle;
	static GetComboButtonStyle(Handle: JavascriptStyleSet,StyleName: string): ComboButtonStyle;
	static GetComboBoxStyle(Handle: JavascriptStyleSet,StyleName: string): ComboBoxStyle;
	static GetColor(Handle: JavascriptStyleSet,StyleName: string): LinearColor;
	static GetCheckBoxStyle(Handle: JavascriptStyleSet,StyleName: string): CheckBoxStyle;
	static GetButtonStyle(Handle: JavascriptStyleSet,StyleName: string): ButtonStyle;
	static GetBrush(Handle: JavascriptStyleSet,StyleName: string): SlateBrush;
	static C(Other: UObject | any): JavascriptStyleSetLibrary;
}

declare class JavascriptTextBlock extends TextBlock { 
	HighlightText: string;
	HighlightTextDelegate: UnrealEngineDelegate<() => string>;
	static Load(ResourceName: string): JavascriptTextBlock;
	static Find(Outer: UObject, ResourceName: string): JavascriptTextBlock;
	static GetDefaultObject(): JavascriptTextBlock;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptTextBlock;
	SetHighlightText(InHighlightText: string): void;
	static C(Other: UObject | any): JavascriptTextBlock;
}

declare class JavascriptTileView extends TileView { 
	JavascriptContext: JavascriptContext;
	TileListItems: UObject[];
	static Load(ResourceName: string): JavascriptTileView;
	static Find(Outer: UObject, ResourceName: string): JavascriptTileView;
	static GetDefaultObject(): JavascriptTileView;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptTileView;
	OnSelectionChanged(UObject: UObject,Type: ESelectInfo): void;
	OnDoubleClick(UObject: UObject): void;
	OnClick(UObject: UObject): void;
	static C(Other: UObject | any): JavascriptTileView;
}

declare class JavascriptToolbarButtonContext extends UObject { 
	OnGetLabel: UnrealEngineDelegate<() => string>;
	OnGetTooltip: UnrealEngineDelegate<() => string>;
	OnGetIcon: UnrealEngineDelegate<() => JavascriptSlateIcon>;
	OnExecuteAction: UnrealEngineDelegate<(EditingObject: UObject) => void>;
	OnCanExecuteAction: UnrealEngineDelegate<(EditingObject: UObject) => boolean>;
	OnIsActionChecked: UnrealEngineDelegate<(EditingObject: UObject) => boolean>;
	OnIsActionButtonVisible: UnrealEngineDelegate<(EditingObject: UObject) => boolean>;
	static Load(ResourceName: string): JavascriptToolbarButtonContext;
	static Find(Outer: UObject, ResourceName: string): JavascriptToolbarButtonContext;
	static GetDefaultObject(): JavascriptToolbarButtonContext;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptToolbarButtonContext;
	UnmarkReferencedObject(): void;
	MarkReferencedObject(): void;
	static C(Other: UObject | any): JavascriptToolbarButtonContext;
}

declare class JavascriptUMGBlueprintLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): JavascriptUMGBlueprintLibrary;
	static Find(Outer: UObject, ResourceName: string): JavascriptUMGBlueprintLibrary;
	static GetDefaultObject(): JavascriptUMGBlueprintLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptUMGBlueprintLibrary;
	static SlateColor_UseSubduedForeground(): SlateColor;
	static SlateColor_UseForeground(): SlateColor;
	static GetLineLength(TargetTextLayout: JavascriptTextLayout): number;
	static GetAsText(TextLayout: JavascriptTextLayout): string;
	static DrawSpaceSpline(Context?: PaintContext,InStart?: Vector2D,InStartDir?: Vector2D,InEnd?: Vector2D,InEndDir?: Vector2D,InThickness?: number,InTint?: LinearColor): {Context: PaintContext};
	static ClearLines(TextLayout?: JavascriptTextLayout): {TextLayout: JavascriptTextLayout};
	static AddLine(TextLayout?: JavascriptTextLayout,Model?: JavascriptTextModel,Runs?: JavascriptSlateTextRun[]): {TextLayout: JavascriptTextLayout};
	static C(Other: UObject | any): JavascriptUMGBlueprintLibrary;
}

declare class JavascriptSlateStyle { 
	clone() : JavascriptSlateStyle;
	static C(Other: UObject | any): JavascriptSlateStyle;
	AddBorderBrush(PropertyName: string,InImageName: string,InMargin: Margin,InColorAndOpacity: LinearColor,InImageType: ESlateBrushImageType): void;
	AddBoxBrush(PropertyName: string,InImageName: string,InMargin: Margin,InColorAndOpacity: LinearColor,InImageType: ESlateBrushImageType): void;
	AddButtonStyle(PropertyName: string,ButtonStyle: ButtonStyle): void;
	AddFontInfo(PropertyName: string,FontInfo: SlateFontInfo): void;
	AddImageBrush(PropertyName: string,InImageName: string,InImageSize: Vector2D,InTint: LinearColor,InTiling: ESlateBrushTileType,InImageType: ESlateBrushImageType): void;
	AddSound(PropertyName: string,Sound: SlateSound): void;
	Register(): void;
	RootToContentDir(RelativePath: string): string;
	RootToCoreContentDir(RelativePath: string): string;
	SetContentRoot(InContentRootDir: string): void;
	SetCoreContentRoot(InCoreContentRootDir: string): void;
	SetParentStyleName(InParentStyleName: string): void;
	Unregister(): void;
	static AddBorderBrush(StyleSet: JavascriptSlateStyle,PropertyName: string,InImageName: string,InMargin: Margin,InColorAndOpacity: LinearColor,InImageType: ESlateBrushImageType): void;
	static AddBoxBrush(StyleSet: JavascriptSlateStyle,PropertyName: string,InImageName: string,InMargin: Margin,InColorAndOpacity: LinearColor,InImageType: ESlateBrushImageType): void;
	static AddButtonStyle(StyleSet: JavascriptSlateStyle,PropertyName: string,ButtonStyle: ButtonStyle): void;
	static AddFontInfo(StyleSet: JavascriptSlateStyle,PropertyName: string,FontInfo: SlateFontInfo): void;
	static AddImageBrush(StyleSet: JavascriptSlateStyle,PropertyName: string,InImageName: string,InImageSize: Vector2D,InTint: LinearColor,InTiling: ESlateBrushTileType,InImageType: ESlateBrushImageType): void;
	static AddSound(StyleSet: JavascriptSlateStyle,PropertyName: string,Sound: SlateSound): void;
	static Register(StyleSet: JavascriptSlateStyle): void;
	static RootToContentDir(StyleSet: JavascriptSlateStyle,RelativePath: string): string;
	static RootToCoreContentDir(StyleSet: JavascriptSlateStyle,RelativePath: string): string;
	static SetContentRoot(StyleSet: JavascriptSlateStyle,InContentRootDir: string): void;
	static SetCoreContentRoot(StyleSet: JavascriptSlateStyle,InCoreContentRootDir: string): void;
	static SetParentStyleName(StyleSet: JavascriptSlateStyle,InParentStyleName: string): void;
	static Unregister(StyleSet: JavascriptSlateStyle): void;
	static CreateSlateStyle(InStyleSetName: string): JavascriptSlateStyle;
}

declare class JavascriptUMGLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): JavascriptUMGLibrary;
	static Find(Outer: UObject, ResourceName: string): JavascriptUMGLibrary;
	static GetDefaultObject(): JavascriptUMGLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptUMGLibrary;
	static Unregister(StyleSet: JavascriptSlateStyle): void;
	static TakeWidget(Widget: Widget): JavascriptSlateWidget;
	static ShowWindow(NewWindow: JavascriptSlateWidget): void;
	static SetParentStyleName(StyleSet: JavascriptSlateStyle,InParentStyleName: string): void;
	static SetCoreContentRoot(StyleSet: JavascriptSlateStyle,InCoreContentRootDir: string): void;
	static SetContentRoot(StyleSet: JavascriptSlateStyle,InContentRootDir: string): void;
	static SetContent(TargetWidget: NativeWidgetHost,SlateWidget: JavascriptSlateWidget): Widget;
	static RootToCoreContentDir(StyleSet: JavascriptSlateStyle,RelativePath: string): string;
	static RootToContentDir(StyleSet: JavascriptSlateStyle,RelativePath: string): string;
	static Register(StyleSet: JavascriptSlateStyle): void;
	static GetUIGeometry(Widget: Widget): Geometry;
	static GetRootWindow(): JavascriptSlateWidget;
	static GenerateDynamicImageResource(InDynamicBrushName: string): Vector2D;
	static CreateSlateStyle(InStyleSetName: string): JavascriptSlateStyle;
	static AddWindowAsNativeChild(NewWindow: JavascriptSlateWidget,RootWindow: JavascriptSlateWidget): void;
	static AddWindow(NewWindow: JavascriptSlateWidget,bShowImmediately: boolean): void;
	static AddSound(StyleSet: JavascriptSlateStyle,PropertyName: string,Sound: SlateSound): void;
	static AddImageBrush(StyleSet: JavascriptSlateStyle,PropertyName: string,InImageName: string,InImageSize: Vector2D,InTint: LinearColor,InTiling: ESlateBrushTileType,InImageType: ESlateBrushImageType): void;
	static AddFontInfo(StyleSet: JavascriptSlateStyle,PropertyName: string,FontInfo: SlateFontInfo): void;
	static AddButtonStyle(StyleSet: JavascriptSlateStyle,PropertyName: string,ButtonStyle: ButtonStyle): void;
	static AddBoxBrush(StyleSet: JavascriptSlateStyle,PropertyName: string,InImageName: string,InMargin: Margin,InColorAndOpacity: LinearColor,InImageType: ESlateBrushImageType): void;
	static AddBorderBrush(StyleSet: JavascriptSlateStyle,PropertyName: string,InImageName: string,InMargin: Margin,InColorAndOpacity: LinearColor,InImageType: ESlateBrushImageType): void;
	static C(Other: UObject | any): JavascriptUMGLibrary;
}

declare class JavascriptWidget extends UserWidget { 
	JavascriptContext: JavascriptContext;
	OnInputActionEvent: UnrealEngineMulticastDelegate<(ActionName: string) => void>;
	OnReleaseActionEvent: UnrealEngineMulticastDelegate<(ActionName: string) => void>;
	OnInputAxisEvent: UnrealEngineMulticastDelegate<(Axis: number, AxisName: string) => void>;
	ContentSlot: PanelSlot;
	static Load(ResourceName: string): JavascriptWidget;
	static Find(Outer: UObject, ResourceName: string): JavascriptWidget;
	static GetDefaultObject(): JavascriptWidget;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptWidget;
	SetRootWidget(Widget: Widget): void;
	RemoveChild(): boolean;
	OnReleaseInputActionByName(ActionName: string): void;
	OnListenForInputAxis(AxisName: string,EventType: EInputEvent,bConsume: boolean): void;
	OnListenForInputAction(ActionName: string,EventType: EInputEvent,bConsume: boolean): void;
	OnInputAxisByName(Axis: number,ActionName: string): void;
	OnInputActionByName(ActionName: string): void;
	OnDestroy(bReleaseChildren: boolean): void;
	static HasValidCachedWidget(Widget: Widget): boolean;
	static CallSynchronizeProperties(WidgetOrSlot: Visual): void;
	AddChild(Content: Widget): PanelSlot;
	static C(Other: UObject | any): JavascriptWidget;
}

declare type EJavascriptWindowType = 'Normal' | 'Menu' | 'ToolTip' | 'Notification' | 'CursorDecorator' | 'EJavascriptWindowType_MAX';
declare var EJavascriptWindowType : { Normal:'Normal',Menu:'Menu',ToolTip:'ToolTip',Notification:'Notification',CursorDecorator:'CursorDecorator',EJavascriptWindowType_MAX:'EJavascriptWindowType_MAX', };
declare class WindowStyle extends SlateWidgetStyle { 
	MinimizeButtonStyle: ButtonStyle;
	MaximizeButtonStyle: ButtonStyle;
	RestoreButtonStyle: ButtonStyle;
	CloseButtonStyle: ButtonStyle;
	TitleTextStyle: TextBlockStyle;
	ActiveTitleBrush: SlateBrush;
	InactiveTitleBrush: SlateBrush;
	FlashTitleBrush: SlateBrush;
	BackgroundColor: SlateColor;
	OutlineBrush: SlateBrush;
	OutlineColor: SlateColor;
	BorderBrush: SlateBrush;
	BorderColor: SlateColor;
	BackgroundBrush: SlateBrush;
	ChildBackgroundBrush: SlateBrush;
	WindowCornerRadius: number;
	BorderPadding: Margin;
	clone() : WindowStyle;
	static C(Other: UObject | any): WindowStyle;
}

declare type EJavascriptAutoCenter = 'None' | 'PrimaryWorkArea' | 'PreferredWorkArea' | 'EJavascriptAutoCenter_MAX';
declare var EJavascriptAutoCenter : { None:'None',PrimaryWorkArea:'PrimaryWorkArea',PreferredWorkArea:'PreferredWorkArea',EJavascriptAutoCenter_MAX:'EJavascriptAutoCenter_MAX', };
declare type EJavascriptWindowTransparency = 'None' | 'PerWindow' | 'EJavascriptWindowTransparency_MAX';
declare var EJavascriptWindowTransparency : { None:'None',PerWindow:'PerWindow',EJavascriptWindowTransparency_MAX:'EJavascriptWindowTransparency_MAX', };
declare type EJavascriptSizingRule = 'FixedSize' | 'Autosized' | 'UserSized' | 'EJavascriptSizingRule_MAX';
declare var EJavascriptSizingRule : { FixedSize:'FixedSize',Autosized:'Autosized',UserSized:'UserSized',EJavascriptSizingRule_MAX:'EJavascriptSizingRule_MAX', };
declare type EJavascriptWindowActivationPolicy = 'Never' | 'Always' | 'FirstShown' | 'EJavascriptWindowActivationPolicy_MAX';
declare var EJavascriptWindowActivationPolicy : { Never:'Never',Always:'Always',FirstShown:'FirstShown',EJavascriptWindowActivationPolicy_MAX:'EJavascriptWindowActivationPolicy_MAX', };
declare class JavascriptWindow extends ContentWidget { 
	Type: EJavascriptWindowType;
	Style: WindowStyle;
	Title: string;
	bDragAnywhere: boolean;
	AutoCenter: EJavascriptAutoCenter;
	ScreenPosition: Vector2D;
	ClientSize: Vector2D;
	SupportsTransparency: EJavascriptWindowTransparency;
	InitialOpacity: number;
	IsInitiallyMaximized: boolean;
	SizingRule: EJavascriptSizingRule;
	IsPopupWindow: boolean;
	FocusWhenFirstShown: boolean;
	ActivateWhenFirstShown: boolean;
	UseOSWindowBorder: boolean;
	HasCloseButton: boolean;
	SupportsMaximize: boolean;
	SupportsMinimize: boolean;
	CreateTitleBar: boolean;
	SaneWindowPlacement: boolean;
	LayoutBorder: Margin;
	UserResizeBorder: Margin;
	OnWindowClosed: UnrealEngineDelegate<() => void>;
	OnWindowDeactivated: UnrealEngineDelegate<() => void>;
	IsTopmostWindow: boolean;
	AdjustInitialSizeAndPositionForDPIScale: boolean;
	ActivationPolicy: EJavascriptWindowActivationPolicy;
	static Load(ResourceName: string): JavascriptWindow;
	static Find(Outer: UObject, ResourceName: string): JavascriptWindow;
	static GetDefaultObject(): JavascriptWindow;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptWindow;
	ShowWindow(): void;
	SetOpacity(InOpacity: number): void;
	Resize(NewSize: Vector2D): void;
	ReshapeWindow(NewPosition: Vector2D,NewSize: Vector2D): void;
	RequestDestroyWindow(): void;
	MoveWindowTo(NewPosition: Vector2D): void;
	HideWindow(): void;
	FlashWindow(): void;
	EnableWindow(bEnable: boolean): void;
	DestroyWindowImmediately(): void;
	BringToFront(): void;
	static C(Other: UObject | any): JavascriptWindow;
	OpenDirectoryDialog(DialogTitle: string,DefaultPath: string,OutFolderName?: string): {OutFolderName: string, $: boolean};
	OpenFileDialog(DialogTitle: string,DefaultPath: string,DefaultFile: string,FileTypes: string,Flags: number,OutFilenames?: string[]): {OutFilenames: string[], $: boolean};
	SaveFileDialog(DialogTitle: string,DefaultPath: string,DefaultFile: string,FileTypes: string,Flags: number,OutFilenames?: string[]): {OutFilenames: string[], $: boolean};
	static OpenDirectoryDialog(WindowHandle: JavascriptWindow,DialogTitle: string,DefaultPath: string,OutFolderName?: string): {OutFolderName: string, $: boolean};
	static OpenFileDialog(WindowHandle: JavascriptWindow,DialogTitle: string,DefaultPath: string,DefaultFile: string,FileTypes: string,Flags: number,OutFilenames?: string[]): {OutFilenames: string[], $: boolean};
	static SaveFileDialog(WindowHandle: JavascriptWindow,DialogTitle: string,DefaultPath: string,DefaultFile: string,FileTypes: string,Flags: number,OutFilenames?: string[]): {OutFilenames: string[], $: boolean};
}

declare class JavascriptHyperlinkSignature__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): JavascriptHyperlinkSignature__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): JavascriptHyperlinkSignature__PythonCallable;
	static GetDefaultObject(): JavascriptHyperlinkSignature__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptHyperlinkSignature__PythonCallable;
	static C(Other: UObject | any): JavascriptHyperlinkSignature__PythonCallable;
}

declare class OnInputActionEvent__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnInputActionEvent__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnInputActionEvent__PythonCallable;
	static GetDefaultObject(): OnInputActionEvent__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnInputActionEvent__PythonCallable;
	static C(Other: UObject | any): OnInputActionEvent__PythonCallable;
}

declare class OnInputAxisEvent__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnInputAxisEvent__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnInputAxisEvent__PythonCallable;
	static GetDefaultObject(): OnInputAxisEvent__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnInputAxisEvent__PythonCallable;
	static C(Other: UObject | any): OnInputAxisEvent__PythonCallable;
}

declare class OnWindowDeactivated__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnWindowDeactivated__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnWindowDeactivated__PythonCallable;
	static GetDefaultObject(): OnWindowDeactivated__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnWindowDeactivated__PythonCallable;
	static C(Other: UObject | any): OnWindowDeactivated__PythonCallable;
}

declare class OnWindowWidgetClosed__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnWindowWidgetClosed__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnWindowWidgetClosed__PythonCallable;
	static GetDefaultObject(): OnWindowWidgetClosed__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnWindowWidgetClosed__PythonCallable;
	static C(Other: UObject | any): OnWindowWidgetClosed__PythonCallable;
}

declare class BoolDelegate__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): BoolDelegate__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): BoolDelegate__PythonCallable;
	static GetDefaultObject(): BoolDelegate__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BoolDelegate__PythonCallable;
	static C(Other: UObject | any): BoolDelegate__PythonCallable;
}

declare class IconDelegate__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): IconDelegate__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): IconDelegate__PythonCallable;
	static GetDefaultObject(): IconDelegate__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): IconDelegate__PythonCallable;
	static C(Other: UObject | any): IconDelegate__PythonCallable;
}

declare class JavascriptCanExecuteActionWithEditingObject__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): JavascriptCanExecuteActionWithEditingObject__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): JavascriptCanExecuteActionWithEditingObject__PythonCallable;
	static GetDefaultObject(): JavascriptCanExecuteActionWithEditingObject__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptCanExecuteActionWithEditingObject__PythonCallable;
	static C(Other: UObject | any): JavascriptCanExecuteActionWithEditingObject__PythonCallable;
}

declare class JavascriptExecuteActionWithEditingObject__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): JavascriptExecuteActionWithEditingObject__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): JavascriptExecuteActionWithEditingObject__PythonCallable;
	static GetDefaultObject(): JavascriptExecuteActionWithEditingObject__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptExecuteActionWithEditingObject__PythonCallable;
	static C(Other: UObject | any): JavascriptExecuteActionWithEditingObject__PythonCallable;
}

declare class TextDelegate__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): TextDelegate__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): TextDelegate__PythonCallable;
	static GetDefaultObject(): TextDelegate__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TextDelegate__PythonCallable;
	static C(Other: UObject | any): TextDelegate__PythonCallable;
}

declare class OnVScrollBarUserScrolled__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnVScrollBarUserScrolled__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnVScrollBarUserScrolled__PythonCallable;
	static GetDefaultObject(): OnVScrollBarUserScrolled__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnVScrollBarUserScrolled__PythonCallable;
	static C(Other: UObject | any): OnVScrollBarUserScrolled__PythonCallable;
}

declare class SetText__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): SetText__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): SetText__PythonCallable;
	static GetDefaultObject(): SetText__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SetText__PythonCallable;
	static C(Other: UObject | any): SetText__PythonCallable;
}

declare class ActionCheckStateDelegate__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): ActionCheckStateDelegate__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): ActionCheckStateDelegate__PythonCallable;
	static GetDefaultObject(): ActionCheckStateDelegate__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActionCheckStateDelegate__PythonCallable;
	static C(Other: UObject | any): ActionCheckStateDelegate__PythonCallable;
}

declare class ExecuteAction__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): ExecuteAction__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): ExecuteAction__PythonCallable;
	static GetDefaultObject(): ExecuteAction__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ExecuteAction__PythonCallable;
	static C(Other: UObject | any): ExecuteAction__PythonCallable;
}

declare class OnContextMenuOpening__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnContextMenuOpening__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnContextMenuOpening__PythonCallable;
	static GetDefaultObject(): OnContextMenuOpening__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnContextMenuOpening__PythonCallable;
	static C(Other: UObject | any): OnContextMenuOpening__PythonCallable;
}

declare class OnExpansionChanged__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnExpansionChanged__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnExpansionChanged__PythonCallable;
	static GetDefaultObject(): OnExpansionChanged__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnExpansionChanged__PythonCallable;
	static C(Other: UObject | any): OnExpansionChanged__PythonCallable;
}

declare class OnGenerateRow__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnGenerateRow__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnGenerateRow__PythonCallable;
	static GetDefaultObject(): OnGenerateRow__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnGenerateRow__PythonCallable;
	static C(Other: UObject | any): OnGenerateRow__PythonCallable;
}

declare class OnGetChildrenUObject__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnGetChildrenUObject__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnGetChildrenUObject__PythonCallable;
	static GetDefaultObject(): OnGetChildrenUObject__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnGetChildrenUObject__PythonCallable;
	static C(Other: UObject | any): OnGetChildrenUObject__PythonCallable;
}

declare class OnGetDefaultValue__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnGetDefaultValue__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnGetDefaultValue__PythonCallable;
	static GetDefaultObject(): OnGetDefaultValue__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnGetDefaultValue__PythonCallable;
	static C(Other: UObject | any): OnGetDefaultValue__PythonCallable;
}

declare class OnIsReadOnly__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnIsReadOnly__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnIsReadOnly__PythonCallable;
	static GetDefaultObject(): OnIsReadOnly__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnIsReadOnly__PythonCallable;
	static C(Other: UObject | any): OnIsReadOnly__PythonCallable;
}

declare class OnIsValidText__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnIsValidText__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnIsValidText__PythonCallable;
	static GetDefaultObject(): OnIsValidText__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnIsValidText__PythonCallable;
	static C(Other: UObject | any): OnIsValidText__PythonCallable;
}

declare class JavascriptGetWidgetWithEditingObject__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): JavascriptGetWidgetWithEditingObject__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): JavascriptGetWidgetWithEditingObject__PythonCallable;
	static GetDefaultObject(): JavascriptGetWidgetWithEditingObject__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptGetWidgetWithEditingObject__PythonCallable;
	static C(Other: UObject | any): JavascriptGetWidgetWithEditingObject__PythonCallable;
}

declare class OnComboBoxOpened__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnComboBoxOpened__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnComboBoxOpened__PythonCallable;
	static GetDefaultObject(): OnComboBoxOpened__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnComboBoxOpened__PythonCallable;
	static C(Other: UObject | any): OnComboBoxOpened__PythonCallable;
}

declare class OnGetContent__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnGetContent__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnGetContent__PythonCallable;
	static GetDefaultObject(): OnGetContent__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnGetContent__PythonCallable;
	static C(Other: UObject | any): OnGetContent__PythonCallable;
}

declare class OnIsOpenChanged__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnIsOpenChanged__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnIsOpenChanged__PythonCallable;
	static GetDefaultObject(): OnIsOpenChanged__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnIsOpenChanged__PythonCallable;
	static C(Other: UObject | any): OnIsOpenChanged__PythonCallable;
}

declare type EJavascriptHttpRequestStatus = 'NotStarted' | 'Processing' | 'Failed' | 'Succeeded' | 'EJavascriptHttpRequestStatus_MAX';
declare var EJavascriptHttpRequestStatus : { NotStarted:'NotStarted',Processing:'Processing',Failed:'Failed',Succeeded:'Succeeded',EJavascriptHttpRequestStatus_MAX:'EJavascriptHttpRequestStatus_MAX', };
declare class JavascriptHttpRequest extends UObject { 
	OnComplete: UnrealEngineDelegate<(successful: boolean) => void>;
	OnProgress: UnrealEngineDelegate<(sent: number, recv: number) => void>;
	static Load(ResourceName: string): JavascriptHttpRequest;
	static Find(Outer: UObject, ResourceName: string): JavascriptHttpRequest;
	static GetDefaultObject(): JavascriptHttpRequest;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptHttpRequest;
	SetVerb(Verb: string): void;
	SetURL(URL: string): void;
	SetHeader(HeaderName: string,HeaderValue: string): void;
	SetContentWithFiles(FilePaths: string[],Boundary: string,Content: string): void;
	SetContentFromMemory(): void;
	SetContentAsString(ContentString: string): void;
	ProcessRequest(): boolean;
	GetVerb(): string;
	GetStatus(): EJavascriptHttpRequestStatus;
	GetResponseCode(): number;
	GetElapsedTime(): number;
	GetContentToMemory(): void;
	GetContentLength(): number;
	GetContentAsString(): string;
	CancelRequest(): void;
	static C(Other: UObject | any): JavascriptHttpRequest;
}

declare class JavascriptHttpRequestCompleteDelegate__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): JavascriptHttpRequestCompleteDelegate__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): JavascriptHttpRequestCompleteDelegate__PythonCallable;
	static GetDefaultObject(): JavascriptHttpRequestCompleteDelegate__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptHttpRequestCompleteDelegate__PythonCallable;
	static C(Other: UObject | any): JavascriptHttpRequestCompleteDelegate__PythonCallable;
}

declare class JavascriptHttpRequestProgressDelegate__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): JavascriptHttpRequestProgressDelegate__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): JavascriptHttpRequestProgressDelegate__PythonCallable;
	static GetDefaultObject(): JavascriptHttpRequestProgressDelegate__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptHttpRequestProgressDelegate__PythonCallable;
	static C(Other: UObject | any): JavascriptHttpRequestProgressDelegate__PythonCallable;
}

declare class JavascriptWebSocket extends UObject { 
	OnReceived: UnrealEngineMulticastDelegate<() => void>;
	OnConnected: UnrealEngineMulticastDelegate<() => void>;
	OnError: UnrealEngineMulticastDelegate<() => void>;
	static Load(ResourceName: string): JavascriptWebSocket;
	static Find(Outer: UObject, ResourceName: string): JavascriptWebSocket;
	static GetDefaultObject(): JavascriptWebSocket;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptWebSocket;
	Tick(): void;
	SendMemory(NumBytes: number): void;
	RemoteEndPoint(bAppendPort: boolean): string;
	LocalEndPoint(bAppendPort: boolean): string;
	GetReceivedBytes(): number;
	Flush(): void;
	Dispose(): void;
	CopyBuffer(): void;
	static Connect(Endpoint: string): JavascriptWebSocket;
	static C(Other: UObject | any): JavascriptWebSocket;
}

declare class JavascriptWebSocketServer extends UObject { 
	OnConnected: UnrealEngineMulticastDelegate<(WebSocket: JavascriptWebSocket) => void>;
	Connections: JavascriptWebSocket[];
	static Load(ResourceName: string): JavascriptWebSocketServer;
	static Find(Outer: UObject, ResourceName: string): JavascriptWebSocketServer;
	static GetDefaultObject(): JavascriptWebSocketServer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptWebSocketServer;
	Tick(): void;
	Info(): string;
	Dispose(): void;
	static Create(Port: number): JavascriptWebSocketServer;
	static C(Other: UObject | any): JavascriptWebSocketServer;
}

declare class OnWebSocketServerDelegate__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnWebSocketServerDelegate__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnWebSocketServerDelegate__PythonCallable;
	static GetDefaultObject(): OnWebSocketServerDelegate__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnWebSocketServerDelegate__PythonCallable;
	static C(Other: UObject | any): OnWebSocketServerDelegate__PythonCallable;
}

declare class OnWebSocketDelegate__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnWebSocketDelegate__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnWebSocketDelegate__PythonCallable;
	static GetDefaultObject(): OnWebSocketDelegate__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnWebSocketDelegate__PythonCallable;
	static C(Other: UObject | any): OnWebSocketDelegate__PythonCallable;
}

declare class ImgMediaPlaybackComponent extends ActorComponent { 
	Width: number;
	LODBias: number;
	static Load(ResourceName: string): ImgMediaPlaybackComponent;
	static Find(Outer: UObject, ResourceName: string): ImgMediaPlaybackComponent;
	static GetDefaultObject(): ImgMediaPlaybackComponent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ImgMediaPlaybackComponent;
	static C(Other: UObject | any): ImgMediaPlaybackComponent;
}

declare class TcpMessagingSettings extends UObject { 
	EnableTransport: boolean;
	ListenEndpoint: string;
	ConnectToEndpoints: string[];
	ConnectionRetryDelay: number;
	bStopServiceWhenAppDeactivates: boolean;
	static Load(ResourceName: string): TcpMessagingSettings;
	static Find(Outer: UObject, ResourceName: string): TcpMessagingSettings;
	static GetDefaultObject(): TcpMessagingSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TcpMessagingSettings;
	static C(Other: UObject | any): TcpMessagingSettings;
}

declare type EUdpMessageFormat = 'None' | 'Json' | 'TaggedProperty' | 'CborPlatformEndianness' | 'CborStandardEndianness' | 'EUdpMessageFormat_MAX';
declare var EUdpMessageFormat : { None:'None',Json:'Json',TaggedProperty:'TaggedProperty',CborPlatformEndianness:'CborPlatformEndianness',CborStandardEndianness:'CborStandardEndianness',EUdpMessageFormat_MAX:'EUdpMessageFormat_MAX', };
declare class UdpMessagingSettings extends UObject { 
	EnabledByDefault: boolean;
	EnableTransport: boolean;
	bAutoRepair: boolean;
	MaxSendRate: number;
	AutoRepairAttemptLimit: any;
	bStopServiceWhenAppDeactivates: boolean;
	UnicastEndpoint: string;
	MulticastEndpoint: string;
	MessageFormat: EUdpMessageFormat;
	MulticastTimeToLive: number;
	StaticEndpoints: string[];
	EnableTunnel: boolean;
	TunnelUnicastEndpoint: string;
	TunnelMulticastEndpoint: string;
	RemoteTunnelEndpoints: string[];
	static Load(ResourceName: string): UdpMessagingSettings;
	static Find(Outer: UObject, ResourceName: string): UdpMessagingSettings;
	static GetDefaultObject(): UdpMessagingSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): UdpMessagingSettings;
	static C(Other: UObject | any): UdpMessagingSettings;
}

declare type EActorSequenceObjectReferenceType = 'ContextActor' | 'ExternalActor' | 'Component' | 'EActorSequenceObjectReferenceType_MAX';
declare var EActorSequenceObjectReferenceType : { ContextActor:'ContextActor',ExternalActor:'ExternalActor',Component:'Component',EActorSequenceObjectReferenceType_MAX:'EActorSequenceObjectReferenceType_MAX', };
declare class ActorSequenceObjectReference { 
	Type: EActorSequenceObjectReferenceType;
	ActorId: Guid;
	PathToComponent: string;
	clone() : ActorSequenceObjectReference;
	static C(Other: UObject | any): ActorSequenceObjectReference;
}

declare class ActorSequenceObjectReferences { 
	Array: ActorSequenceObjectReference[];
	clone() : ActorSequenceObjectReferences;
	static C(Other: UObject | any): ActorSequenceObjectReferences;
}

declare class ActorSequenceObjectReferenceMap { 
	BindingIds: Guid[];
	References: ActorSequenceObjectReferences[];
	clone() : ActorSequenceObjectReferenceMap;
	static C(Other: UObject | any): ActorSequenceObjectReferenceMap;
}

declare class ActorSequence extends MovieSceneSequence { 
	MovieScene: MovieScene;
	ObjectReferences: ActorSequenceObjectReferenceMap;
	bHasBeenInitialized: boolean;
	static Load(ResourceName: string): ActorSequence;
	static Find(Outer: UObject, ResourceName: string): ActorSequence;
	static GetDefaultObject(): ActorSequence;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorSequence;
	static C(Other: UObject | any): ActorSequence;
}

declare class ActorSequencePlayer extends MovieSceneSequencePlayer { 
	static Load(ResourceName: string): ActorSequencePlayer;
	static Find(Outer: UObject, ResourceName: string): ActorSequencePlayer;
	static GetDefaultObject(): ActorSequencePlayer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorSequencePlayer;
	static C(Other: UObject | any): ActorSequencePlayer;
}

declare class ActorSequenceComponent extends ActorComponent { 
	PlaybackSettings: MovieSceneSequencePlaybackSettings;
	Sequence: ActorSequence;
	SequencePlayer: ActorSequencePlayer;
	static Load(ResourceName: string): ActorSequenceComponent;
	static Find(Outer: UObject, ResourceName: string): ActorSequenceComponent;
	static GetDefaultObject(): ActorSequenceComponent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorSequenceComponent;
	static C(Other: UObject | any): ActorSequenceComponent;
}

declare class AudioAnalyzerAssetBase extends UObject { 
	static Load(ResourceName: string): AudioAnalyzerAssetBase;
	static Find(Outer: UObject, ResourceName: string): AudioAnalyzerAssetBase;
	static GetDefaultObject(): AudioAnalyzerAssetBase;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AudioAnalyzerAssetBase;
	static C(Other: UObject | any): AudioAnalyzerAssetBase;
}

declare class AudioAnalyzerSettings extends AudioAnalyzerAssetBase { 
	static Load(ResourceName: string): AudioAnalyzerSettings;
	static Find(Outer: UObject, ResourceName: string): AudioAnalyzerSettings;
	static GetDefaultObject(): AudioAnalyzerSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AudioAnalyzerSettings;
	static C(Other: UObject | any): AudioAnalyzerSettings;
}

declare class AudioAnalyzerSubsystem extends EngineSubsystem { 
	AudioAnalyzers: AudioAnalyzer[];
	static Load(ResourceName: string): AudioAnalyzerSubsystem;
	static Find(Outer: UObject, ResourceName: string): AudioAnalyzerSubsystem;
	static GetDefaultObject(): AudioAnalyzerSubsystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AudioAnalyzerSubsystem;
	static C(Other: UObject | any): AudioAnalyzerSubsystem;
}

declare class AudioAnalyzer extends UObject { 
	AudioBus: AudioBus;
	AudioAnalyzerSubsystem: AudioAnalyzerSubsystem;
	static Load(ResourceName: string): AudioAnalyzer;
	static Find(Outer: UObject, ResourceName: string): AudioAnalyzer;
	static GetDefaultObject(): AudioAnalyzer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AudioAnalyzer;
	StopAnalyzing(WorldContextObject: UObject): void;
	StartAnalyzing(WorldContextObject: UObject,AudioBusToAnalyze: AudioBus): void;
	static C(Other: UObject | any): AudioAnalyzer;
}

declare class AudioAnalyzerNRTSettings extends AudioAnalyzerAssetBase { 
	static Load(ResourceName: string): AudioAnalyzerNRTSettings;
	static Find(Outer: UObject, ResourceName: string): AudioAnalyzerNRTSettings;
	static GetDefaultObject(): AudioAnalyzerNRTSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AudioAnalyzerNRTSettings;
	static C(Other: UObject | any): AudioAnalyzerNRTSettings;
}

declare class AudioAnalyzerNRT extends AudioAnalyzerAssetBase { 
	Sound: SoundWave;
	DurationInSeconds: number;
	static Load(ResourceName: string): AudioAnalyzerNRT;
	static Find(Outer: UObject, ResourceName: string): AudioAnalyzerNRT;
	static GetDefaultObject(): AudioAnalyzerNRT;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AudioAnalyzerNRT;
	AnalyzeAudio(): void;
	static C(Other: UObject | any): AudioAnalyzerNRT;
}

declare class AudioSynesthesiaSettings extends AudioAnalyzerSettings { 
	static Load(ResourceName: string): AudioSynesthesiaSettings;
	static Find(Outer: UObject, ResourceName: string): AudioSynesthesiaSettings;
	static GetDefaultObject(): AudioSynesthesiaSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AudioSynesthesiaSettings;
	static C(Other: UObject | any): AudioSynesthesiaSettings;
}

declare class AudioSynesthesiaNRTSettings extends AudioAnalyzerNRTSettings { 
	static Load(ResourceName: string): AudioSynesthesiaNRTSettings;
	static Find(Outer: UObject, ResourceName: string): AudioSynesthesiaNRTSettings;
	static GetDefaultObject(): AudioSynesthesiaNRTSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AudioSynesthesiaNRTSettings;
	static C(Other: UObject | any): AudioSynesthesiaNRTSettings;
}

declare class AudioSynesthesiaNRT extends AudioAnalyzerNRT { 
	static Load(ResourceName: string): AudioSynesthesiaNRT;
	static Find(Outer: UObject, ResourceName: string): AudioSynesthesiaNRT;
	static GetDefaultObject(): AudioSynesthesiaNRT;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AudioSynesthesiaNRT;
	static C(Other: UObject | any): AudioSynesthesiaNRT;
}

declare type EConstantQFFTSizeEnum = 'Min' | 'XXSmall' | 'XSmall' | 'Small' | 'Medium' | 'Large' | 'XLarge' | 'XXLarge' | 'Max' | 'EConstantQFFTSizeEnum_MAX';
declare var EConstantQFFTSizeEnum : { Min:'Min',XXSmall:'XXSmall',XSmall:'XSmall',Small:'Small',Medium:'Medium',Large:'Large',XLarge:'XLarge',XXLarge:'XXLarge',Max:'Max',EConstantQFFTSizeEnum_MAX:'EConstantQFFTSizeEnum_MAX', };
declare type EConstantQNormalizationEnum = 'EqualEuclideanNorm' | 'EqualEnergy' | 'EqualAmplitude' | 'EConstantQNormalizationEnum_MAX';
declare var EConstantQNormalizationEnum : { EqualEuclideanNorm:'EqualEuclideanNorm',EqualEnergy:'EqualEnergy',EqualAmplitude:'EqualAmplitude',EConstantQNormalizationEnum_MAX:'EConstantQNormalizationEnum_MAX', };
declare class ConstantQNRTSettings extends AudioSynesthesiaNRTSettings { 
	StartingFrequency: number;
	NumBands: number;
	NumBandsPerOctave: number;
	AnalysisPeriod: number;
	bDownmixToMono: boolean;
	FFTSize: EConstantQFFTSizeEnum;
	WindowType: EFFTWindowType;
	SpectrumType: EAudioSpectrumType;
	BandWidthStretch: number;
	CQTNormalization: EConstantQNormalizationEnum;
	NoiseFloorDb: number;
	static Load(ResourceName: string): ConstantQNRTSettings;
	static Find(Outer: UObject, ResourceName: string): ConstantQNRTSettings;
	static GetDefaultObject(): ConstantQNRTSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ConstantQNRTSettings;
	static C(Other: UObject | any): ConstantQNRTSettings;
}

declare class ConstantQNRT extends AudioSynesthesiaNRT { 
	Settings: ConstantQNRTSettings;
	static Load(ResourceName: string): ConstantQNRT;
	static Find(Outer: UObject, ResourceName: string): ConstantQNRT;
	static GetDefaultObject(): ConstantQNRT;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ConstantQNRT;
	GetNormalizedChannelConstantQAtTime(InSeconds: number,InChannel: number,OutConstantQ?: number[]): {OutConstantQ: number[]};
	GetChannelConstantQAtTime(InSeconds: number,InChannel: number,OutConstantQ?: number[]): {OutConstantQ: number[]};
	static C(Other: UObject | any): ConstantQNRT;
}

declare type ELoudnessCurveTypeEnum = 'A' | 'B' | 'C' | 'D' | 'None' | 'ELoudnessCurveTypeEnum_MAX';
declare var ELoudnessCurveTypeEnum : { A:'A',B:'B',C:'C',D:'D',None:'None',ELoudnessCurveTypeEnum_MAX:'ELoudnessCurveTypeEnum_MAX', };
declare class LoudnessSettings extends AudioSynesthesiaSettings { 
	AnalysisPeriod: number;
	MinimumFrequency: number;
	MaximumFrequency: number;
	CurveType: ELoudnessCurveTypeEnum;
	NoiseFloorDb: number;
	ExpectedMaxLoudness: number;
	static Load(ResourceName: string): LoudnessSettings;
	static Find(Outer: UObject, ResourceName: string): LoudnessSettings;
	static GetDefaultObject(): LoudnessSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LoudnessSettings;
	static C(Other: UObject | any): LoudnessSettings;
}

declare class LoudnessResults { 
	Loudness: number;
	NormalizedLoudness: number;
	PerceptualEnergy: number;
	TimeSeconds: number;
	clone() : LoudnessResults;
	static C(Other: UObject | any): LoudnessResults;
}

declare class LoudnessAnalyzer extends AudioAnalyzer { 
	Settings: LoudnessSettings;
	OnOverallLoudnessResults: UnrealEngineMulticastDelegate<(OverallLoudnessResults: LoudnessResults[]) => void>;
	OnPerChannelLoudnessResults: UnrealEngineMulticastDelegate<(ChannelIndex: number, LoudnessResults: LoudnessResults[]) => void>;
	OnLatestOverallLoudnessResults: UnrealEngineMulticastDelegate<(LatestOverallLoudnessResults: LoudnessResults) => void>;
	OnLatestPerChannelLoudnessResults: UnrealEngineMulticastDelegate<(ChannelIndex: number, LatestLoudnessResults: LoudnessResults) => void>;
	static Load(ResourceName: string): LoudnessAnalyzer;
	static Find(Outer: UObject, ResourceName: string): LoudnessAnalyzer;
	static GetDefaultObject(): LoudnessAnalyzer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LoudnessAnalyzer;
	static C(Other: UObject | any): LoudnessAnalyzer;
}

declare type ELoudnessNRTCurveTypeEnum = 'A' | 'B' | 'C' | 'D' | 'None' | 'ELoudnessNRTCurveTypeEnum_MAX';
declare var ELoudnessNRTCurveTypeEnum : { A:'A',B:'B',C:'C',D:'D',None:'None',ELoudnessNRTCurveTypeEnum_MAX:'ELoudnessNRTCurveTypeEnum_MAX', };
declare class LoudnessNRTSettings extends AudioSynesthesiaNRTSettings { 
	AnalysisPeriod: number;
	MinimumFrequency: number;
	MaximumFrequency: number;
	CurveType: ELoudnessNRTCurveTypeEnum;
	NoiseFloorDb: number;
	static Load(ResourceName: string): LoudnessNRTSettings;
	static Find(Outer: UObject, ResourceName: string): LoudnessNRTSettings;
	static GetDefaultObject(): LoudnessNRTSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LoudnessNRTSettings;
	static C(Other: UObject | any): LoudnessNRTSettings;
}

declare class LoudnessNRT extends AudioSynesthesiaNRT { 
	Settings: LoudnessNRTSettings;
	static Load(ResourceName: string): LoudnessNRT;
	static Find(Outer: UObject, ResourceName: string): LoudnessNRT;
	static GetDefaultObject(): LoudnessNRT;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LoudnessNRT;
	GetNormalizedLoudnessAtTime(InSeconds: number,OutLoudness?: number): {OutLoudness: number};
	GetNormalizedChannelLoudnessAtTime(InSeconds: number,InChannel: number,OutLoudness?: number): {OutLoudness: number};
	GetLoudnessAtTime(InSeconds: number,OutLoudness?: number): {OutLoudness: number};
	GetChannelLoudnessAtTime(InSeconds: number,InChannel: number,OutLoudness?: number): {OutLoudness: number};
	static C(Other: UObject | any): LoudnessNRT;
}

declare type EMeterPeakType = 'MeanSquared' | 'RootMeanSquared' | 'Peak' | 'Count' | 'EMeterPeakType_MAX';
declare var EMeterPeakType : { MeanSquared:'MeanSquared',RootMeanSquared:'RootMeanSquared',Peak:'Peak',Count:'Count',EMeterPeakType_MAX:'EMeterPeakType_MAX', };
declare class MeterSettings extends AudioSynesthesiaSettings { 
	AnalysisPeriod: number;
	PeakMode: EMeterPeakType;
	MeterAttackTime: number;
	MeterReleaseTime: number;
	PeakHoldTime: number;
	ClippingThreshold: number;
	static Load(ResourceName: string): MeterSettings;
	static Find(Outer: UObject, ResourceName: string): MeterSettings;
	static GetDefaultObject(): MeterSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeterSettings;
	static C(Other: UObject | any): MeterSettings;
}

declare class MeterResults { 
	TimeSeconds: number;
	MeterValue: number;
	PeakValue: number;
	NumSamplesClipping: number;
	ClippingValue: number;
	clone() : MeterResults;
	static C(Other: UObject | any): MeterResults;
}

declare class MeterAnalyzer extends AudioAnalyzer { 
	Settings: MeterSettings;
	OnOverallMeterResults: UnrealEngineMulticastDelegate<(MeterResults: MeterResults[]) => void>;
	OnPerChannelMeterResults: UnrealEngineMulticastDelegate<(ChannelIndex: number, MeterResults: MeterResults[]) => void>;
	OnLatestOverallMeterResults: UnrealEngineMulticastDelegate<(LatestOverallMeterResults: MeterResults) => void>;
	OnLatestPerChannelMeterResults: UnrealEngineMulticastDelegate<(ChannelIndex: number, LatestMeterResults: MeterResults) => void>;
	static Load(ResourceName: string): MeterAnalyzer;
	static Find(Outer: UObject, ResourceName: string): MeterAnalyzer;
	static GetDefaultObject(): MeterAnalyzer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeterAnalyzer;
	static C(Other: UObject | any): MeterAnalyzer;
}

declare class OnsetNRTSettings extends AudioSynesthesiaNRTSettings { 
	bDownmixToMono: boolean;
	GranularityInSeconds: number;
	Sensitivity: number;
	MinimumFrequency: number;
	MaximumFrequency: number;
	static Load(ResourceName: string): OnsetNRTSettings;
	static Find(Outer: UObject, ResourceName: string): OnsetNRTSettings;
	static GetDefaultObject(): OnsetNRTSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnsetNRTSettings;
	static C(Other: UObject | any): OnsetNRTSettings;
}

declare class OnsetNRT extends AudioSynesthesiaNRT { 
	Settings: OnsetNRTSettings;
	static Load(ResourceName: string): OnsetNRT;
	static Find(Outer: UObject, ResourceName: string): OnsetNRT;
	static GetDefaultObject(): OnsetNRT;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnsetNRT;
	GetNormalizedChannelOnsetsBetweenTimes(InStartSeconds: number,InEndSeconds: number,InChannel: number,OutOnsetTimestamps?: number[],OutOnsetStrengths?: number[]): {OutOnsetTimestamps: number[], OutOnsetStrengths: number[]};
	GetChannelOnsetsBetweenTimes(InStartSeconds: number,InEndSeconds: number,InChannel: number,OutOnsetTimestamps?: number[],OutOnsetStrengths?: number[]): {OutOnsetTimestamps: number[], OutOnsetStrengths: number[]};
	static C(Other: UObject | any): OnsetNRT;
}

declare class OnLatestOverallLoudnessResults__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnLatestOverallLoudnessResults__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnLatestOverallLoudnessResults__PythonCallable;
	static GetDefaultObject(): OnLatestOverallLoudnessResults__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnLatestOverallLoudnessResults__PythonCallable;
	static C(Other: UObject | any): OnLatestOverallLoudnessResults__PythonCallable;
}

declare class OnLatestOverallMeterResults__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnLatestOverallMeterResults__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnLatestOverallMeterResults__PythonCallable;
	static GetDefaultObject(): OnLatestOverallMeterResults__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnLatestOverallMeterResults__PythonCallable;
	static C(Other: UObject | any): OnLatestOverallMeterResults__PythonCallable;
}

declare class OnLatestPerChannelLoudnessResults__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnLatestPerChannelLoudnessResults__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnLatestPerChannelLoudnessResults__PythonCallable;
	static GetDefaultObject(): OnLatestPerChannelLoudnessResults__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnLatestPerChannelLoudnessResults__PythonCallable;
	static C(Other: UObject | any): OnLatestPerChannelLoudnessResults__PythonCallable;
}

declare class OnLatestPerChannelMeterResults__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnLatestPerChannelMeterResults__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnLatestPerChannelMeterResults__PythonCallable;
	static GetDefaultObject(): OnLatestPerChannelMeterResults__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnLatestPerChannelMeterResults__PythonCallable;
	static C(Other: UObject | any): OnLatestPerChannelMeterResults__PythonCallable;
}

declare class OnOverallLoudnessResults__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnOverallLoudnessResults__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnOverallLoudnessResults__PythonCallable;
	static GetDefaultObject(): OnOverallLoudnessResults__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnOverallLoudnessResults__PythonCallable;
	static C(Other: UObject | any): OnOverallLoudnessResults__PythonCallable;
}

declare class OnOverallMeterResults__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnOverallMeterResults__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnOverallMeterResults__PythonCallable;
	static GetDefaultObject(): OnOverallMeterResults__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnOverallMeterResults__PythonCallable;
	static C(Other: UObject | any): OnOverallMeterResults__PythonCallable;
}

declare class OnPerChannelLoudnessResults__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnPerChannelLoudnessResults__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnPerChannelLoudnessResults__PythonCallable;
	static GetDefaultObject(): OnPerChannelLoudnessResults__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnPerChannelLoudnessResults__PythonCallable;
	static C(Other: UObject | any): OnPerChannelLoudnessResults__PythonCallable;
}

declare class OnPerChannelMeterResults__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnPerChannelMeterResults__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnPerChannelMeterResults__PythonCallable;
	static GetDefaultObject(): OnPerChannelMeterResults__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnPerChannelMeterResults__PythonCallable;
	static C(Other: UObject | any): OnPerChannelMeterResults__PythonCallable;
}

declare type ELocationAccuracy = 'LA_ThreeKilometers' | 'LA_OneKilometer' | 'LA_HundredMeters' | 'LA_TenMeters' | 'LA_Best' | 'LA_Navigation' | 'LA_MAX';
declare var ELocationAccuracy : { LA_ThreeKilometers:'LA_ThreeKilometers',LA_OneKilometer:'LA_OneKilometer',LA_HundredMeters:'LA_HundredMeters',LA_TenMeters:'LA_TenMeters',LA_Best:'LA_Best',LA_Navigation:'LA_Navigation',LA_MAX:'LA_MAX', };
declare class LocationServicesData { 
	Timestamp: number;
	Longitude: number;
	Latitude: number;
	HorizontalAccuracy: number;
	VerticalAccuracy: number;
	Altitude: number;
	clone() : LocationServicesData;
	static C(Other: UObject | any): LocationServicesData;
	static GetLastKnownLocation(): LocationServicesData;
}

declare class LocationServicesImpl extends UObject { 
	OnLocationChanged: UnrealEngineMulticastDelegate<(LocationData: LocationServicesData) => void>;
	static Load(ResourceName: string): LocationServicesImpl;
	static Find(Outer: UObject, ResourceName: string): LocationServicesImpl;
	static GetDefaultObject(): LocationServicesImpl;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LocationServicesImpl;
	static C(Other: UObject | any): LocationServicesImpl;
}

declare class LocationServices extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): LocationServices;
	static Find(Outer: UObject, ResourceName: string): LocationServices;
	static GetDefaultObject(): LocationServices;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LocationServices;
	static StopLocationServices(): boolean;
	static StartLocationServices(): boolean;
	static IsLocationAccuracyAvailable(Accuracy: ELocationAccuracy): boolean;
	static InitLocationServices(Accuracy: ELocationAccuracy,UpdateFrequency: number,MinDistanceFilter: number): boolean;
	static GetLocationServicesImpl(): LocationServicesImpl;
	static GetLastKnownLocation(): LocationServicesData;
	static AreLocationServicesEnabled(): boolean;
	static C(Other: UObject | any): LocationServices;
}

declare class LocationServicesData_OnLocationChanged__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): LocationServicesData_OnLocationChanged__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): LocationServicesData_OnLocationChanged__PythonCallable;
	static GetDefaultObject(): LocationServicesData_OnLocationChanged__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LocationServicesData_OnLocationChanged__PythonCallable;
	static C(Other: UObject | any): LocationServicesData_OnLocationChanged__PythonCallable;
}

declare class AmbisonicsEncodingSettings extends SoundfieldEncodingSettingsBase { 
	AmbisonicsOrder: number;
	static Load(ResourceName: string): AmbisonicsEncodingSettings;
	static Find(Outer: UObject, ResourceName: string): AmbisonicsEncodingSettings;
	static GetDefaultObject(): AmbisonicsEncodingSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AmbisonicsEncodingSettings;
	static C(Other: UObject | any): AmbisonicsEncodingSettings;
}

declare class WebBrowserTexture extends Texture { 
	static Load(ResourceName: string): WebBrowserTexture;
	static Find(Outer: UObject, ResourceName: string): WebBrowserTexture;
	static GetDefaultObject(): WebBrowserTexture;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WebBrowserTexture;
	static C(Other: UObject | any): WebBrowserTexture;
}

declare class WebBrowser extends Widget { 
	OnUrlChanged: UnrealEngineMulticastDelegate<(text: string) => void>;
	OnBeforePopup: UnrealEngineMulticastDelegate<(URL: string, Frame: string) => void>;
	InitialURL: string;
	bSupportsTransparency: boolean;
	static Load(ResourceName: string): WebBrowser;
	static Find(Outer: UObject, ResourceName: string): WebBrowser;
	static GetDefaultObject(): WebBrowser;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WebBrowser;
	LoadURL(NewURL: string): void;
	LoadString(Contents: string,DummyURL: string): void;
	GetUrl(): string;
	GetTitleText(): string;
	ExecuteJavascript(ScriptText: string): void;
	static C(Other: UObject | any): WebBrowser;
}

declare class WebBrowserAssetManager extends UObject { 
	DefaultMaterial: Material;
	static Load(ResourceName: string): WebBrowserAssetManager;
	static Find(Outer: UObject, ResourceName: string): WebBrowserAssetManager;
	static GetDefaultObject(): WebBrowserAssetManager;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WebBrowserAssetManager;
	static C(Other: UObject | any): WebBrowserAssetManager;
}

declare class OnBeforePopup__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnBeforePopup__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnBeforePopup__PythonCallable;
	static GetDefaultObject(): OnBeforePopup__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnBeforePopup__PythonCallable;
	static C(Other: UObject | any): OnBeforePopup__PythonCallable;
}

declare class OnUrlChanged__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnUrlChanged__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnUrlChanged__PythonCallable;
	static GetDefaultObject(): OnUrlChanged__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnUrlChanged__PythonCallable;
	static C(Other: UObject | any): OnUrlChanged__PythonCallable;
}

declare class MeshPaintingSubsystem extends EngineSubsystem { 
	static Load(ResourceName: string): MeshPaintingSubsystem;
	static Find(Outer: UObject, ResourceName: string): MeshPaintingSubsystem;
	static GetDefaultObject(): MeshPaintingSubsystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshPaintingSubsystem;
	static C(Other: UObject | any): MeshPaintingSubsystem;
}

declare class MeshPaintSelectionInterface extends Interface { 
	static Load(ResourceName: string): MeshPaintSelectionInterface;
	static Find(Outer: UObject, ResourceName: string): MeshPaintSelectionInterface;
	static GetDefaultObject(): MeshPaintSelectionInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshPaintSelectionInterface;
	static C(Other: UObject | any): MeshPaintSelectionInterface;
}

declare class MeshPaintSelectionMechanic extends InteractionMechanic { 
	CachedClickedComponents: MeshComponent[];
	CachedClickedActors: Actor[];
	static Load(ResourceName: string): MeshPaintSelectionMechanic;
	static Find(Outer: UObject, ResourceName: string): MeshPaintSelectionMechanic;
	static GetDefaultObject(): MeshPaintSelectionMechanic;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshPaintSelectionMechanic;
	static C(Other: UObject | any): MeshPaintSelectionMechanic;
}

declare class VertexAdapterClickToolBuilder extends SingleClickToolBuilder { 
	static Load(ResourceName: string): VertexAdapterClickToolBuilder;
	static Find(Outer: UObject, ResourceName: string): VertexAdapterClickToolBuilder;
	static GetDefaultObject(): VertexAdapterClickToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VertexAdapterClickToolBuilder;
	static C(Other: UObject | any): VertexAdapterClickToolBuilder;
}

declare class TextureAdapterClickToolBuilder extends SingleClickToolBuilder { 
	static Load(ResourceName: string): TextureAdapterClickToolBuilder;
	static Find(Outer: UObject, ResourceName: string): TextureAdapterClickToolBuilder;
	static GetDefaultObject(): TextureAdapterClickToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TextureAdapterClickToolBuilder;
	static C(Other: UObject | any): TextureAdapterClickToolBuilder;
}

declare class MeshClickTool extends SingleClickTool { 
	SelectionMechanic: MeshPaintSelectionMechanic;
	static Load(ResourceName: string): MeshClickTool;
	static Find(Outer: UObject, ResourceName: string): MeshClickTool;
	static GetDefaultObject(): MeshClickTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshClickTool;
	static C(Other: UObject | any): MeshClickTool;
}

declare class VertexAdapterClickTool extends MeshClickTool { 
	static Load(ResourceName: string): VertexAdapterClickTool;
	static Find(Outer: UObject, ResourceName: string): VertexAdapterClickTool;
	static GetDefaultObject(): VertexAdapterClickTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VertexAdapterClickTool;
	static C(Other: UObject | any): VertexAdapterClickTool;
}

declare class TextureAdapterClickTool extends MeshClickTool { 
	static Load(ResourceName: string): TextureAdapterClickTool;
	static Find(Outer: UObject, ResourceName: string): TextureAdapterClickTool;
	static GetDefaultObject(): TextureAdapterClickTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TextureAdapterClickTool;
	static C(Other: UObject | any): TextureAdapterClickTool;
}

declare class MeshTexturePaintingToolBuilder extends InteractiveToolBuilder { 
	static Load(ResourceName: string): MeshTexturePaintingToolBuilder;
	static Find(Outer: UObject, ResourceName: string): MeshTexturePaintingToolBuilder;
	static GetDefaultObject(): MeshTexturePaintingToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshTexturePaintingToolBuilder;
	static C(Other: UObject | any): MeshTexturePaintingToolBuilder;
}

declare class MeshTexturePaintingToolProperties extends BrushBaseProperties { 
	PaintColor: LinearColor;
	EraseColor: LinearColor;
	bWriteRed: boolean;
	bWriteGreen: boolean;
	bWriteBlue: boolean;
	bWriteAlpha: boolean;
	UVChannel: number;
	bEnableSeamPainting: boolean;
	PaintTexture: Texture2D;
	bEnableFlow: boolean;
	bOnlyFrontFacingTriangles: boolean;
	static Load(ResourceName: string): MeshTexturePaintingToolProperties;
	static Find(Outer: UObject, ResourceName: string): MeshTexturePaintingToolProperties;
	static GetDefaultObject(): MeshTexturePaintingToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshTexturePaintingToolProperties;
	static C(Other: UObject | any): MeshTexturePaintingToolProperties;
}

declare class MeshTexturePaintingTool extends BaseBrushTool { 
	SelectionMechanic: MeshPaintSelectionMechanic;
	TextureProperties: MeshTexturePaintingToolProperties;
	Textures: Texture[];
	BrushRenderTargetTexture: TextureRenderTarget2D;
	BrushMaskRenderTargetTexture: TextureRenderTarget2D;
	SeamMaskRenderTargetTexture: TextureRenderTarget2D;
	PaintTargetData: any;
	TexturePaintingCurrentMeshComponent: MeshComponent;
	PaintingTexture2D: Texture2D;
	static Load(ResourceName: string): MeshTexturePaintingTool;
	static Find(Outer: UObject, ResourceName: string): MeshTexturePaintingTool;
	static GetDefaultObject(): MeshTexturePaintingTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshTexturePaintingTool;
	static C(Other: UObject | any): MeshTexturePaintingTool;
}

declare class MeshColorPaintingToolBuilder extends InteractiveToolBuilder { 
	static Load(ResourceName: string): MeshColorPaintingToolBuilder;
	static Find(Outer: UObject, ResourceName: string): MeshColorPaintingToolBuilder;
	static GetDefaultObject(): MeshColorPaintingToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshColorPaintingToolBuilder;
	static C(Other: UObject | any): MeshColorPaintingToolBuilder;
}

declare class MeshWeightPaintingToolBuilder extends InteractiveToolBuilder { 
	static Load(ResourceName: string): MeshWeightPaintingToolBuilder;
	static Find(Outer: UObject, ResourceName: string): MeshWeightPaintingToolBuilder;
	static GetDefaultObject(): MeshWeightPaintingToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshWeightPaintingToolBuilder;
	static C(Other: UObject | any): MeshWeightPaintingToolBuilder;
}

declare class MeshVertexPaintingToolProperties extends BrushBaseProperties { 
	PaintColor: LinearColor;
	EraseColor: LinearColor;
	bEnableFlow: boolean;
	bOnlyFrontFacingTriangles: boolean;
	VertexPreviewSize: number;
	static Load(ResourceName: string): MeshVertexPaintingToolProperties;
	static Find(Outer: UObject, ResourceName: string): MeshVertexPaintingToolProperties;
	static GetDefaultObject(): MeshVertexPaintingToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshVertexPaintingToolProperties;
	static C(Other: UObject | any): MeshVertexPaintingToolProperties;
}

declare class MeshColorPaintingToolProperties extends MeshVertexPaintingToolProperties { 
	bWriteRed: boolean;
	bWriteGreen: boolean;
	bWriteBlue: boolean;
	bWriteAlpha: boolean;
	bPaintOnSpecificLOD: boolean;
	LODIndex: number;
	static Load(ResourceName: string): MeshColorPaintingToolProperties;
	static Find(Outer: UObject, ResourceName: string): MeshColorPaintingToolProperties;
	static GetDefaultObject(): MeshColorPaintingToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshColorPaintingToolProperties;
	static C(Other: UObject | any): MeshColorPaintingToolProperties;
}

declare type EMeshPaintWeightTypes = 'AlphaLerp' | 'RGB' | 'ARGB' | 'OneMinusARGB' | 'EMeshPaintWeightTypes_MAX';
declare var EMeshPaintWeightTypes : { AlphaLerp:'AlphaLerp',RGB:'RGB',ARGB:'ARGB',OneMinusARGB:'OneMinusARGB',EMeshPaintWeightTypes_MAX:'EMeshPaintWeightTypes_MAX', };
declare type EMeshPaintTextureIndex = 'TextureOne' | 'TextureTwo' | 'TextureThree' | 'TextureFour' | 'TextureFive' | 'EMeshPaintTextureIndex_MAX';
declare var EMeshPaintTextureIndex : { TextureOne:'TextureOne',TextureTwo:'TextureTwo',TextureThree:'TextureThree',TextureFour:'TextureFour',TextureFive:'TextureFive',EMeshPaintTextureIndex_MAX:'EMeshPaintTextureIndex_MAX', };
declare class MeshWeightPaintingToolProperties extends MeshVertexPaintingToolProperties { 
	TextureWeightType: EMeshPaintWeightTypes;
	PaintTextureWeightIndex: EMeshPaintTextureIndex;
	EraseTextureWeightIndex: EMeshPaintTextureIndex;
	static Load(ResourceName: string): MeshWeightPaintingToolProperties;
	static Find(Outer: UObject, ResourceName: string): MeshWeightPaintingToolProperties;
	static GetDefaultObject(): MeshWeightPaintingToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshWeightPaintingToolProperties;
	static C(Other: UObject | any): MeshWeightPaintingToolProperties;
}

declare class MeshVertexPaintingTool extends BaseBrushTool { 
	SelectionMechanic: MeshPaintSelectionMechanic;
	VertexProperties: MeshVertexPaintingToolProperties;
	static Load(ResourceName: string): MeshVertexPaintingTool;
	static Find(Outer: UObject, ResourceName: string): MeshVertexPaintingTool;
	static GetDefaultObject(): MeshVertexPaintingTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshVertexPaintingTool;
	static C(Other: UObject | any): MeshVertexPaintingTool;
}

declare class MeshColorPaintingTool extends MeshVertexPaintingTool { 
	ColorProperties: MeshColorPaintingToolProperties;
	static Load(ResourceName: string): MeshColorPaintingTool;
	static Find(Outer: UObject, ResourceName: string): MeshColorPaintingTool;
	static GetDefaultObject(): MeshColorPaintingTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshColorPaintingTool;
	static C(Other: UObject | any): MeshColorPaintingTool;
}

declare class MeshWeightPaintingTool extends MeshVertexPaintingTool { 
	WeightProperties: MeshWeightPaintingToolProperties;
	static Load(ResourceName: string): MeshWeightPaintingTool;
	static Find(Outer: UObject, ResourceName: string): MeshWeightPaintingTool;
	static GetDefaultObject(): MeshWeightPaintingTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshWeightPaintingTool;
	static C(Other: UObject | any): MeshWeightPaintingTool;
}

declare class TexturePaintToolset extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): TexturePaintToolset;
	static Find(Outer: UObject, ResourceName: string): TexturePaintToolset;
	static GetDefaultObject(): TexturePaintToolset;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TexturePaintToolset;
	static C(Other: UObject | any): TexturePaintToolset;
}

declare class ImportVertexColorOptions extends UObject { 
	UVIndex: number;
	LODIndex: number;
	bRed: boolean;
	bBlue: boolean;
	bGreen: boolean;
	bAlpha: boolean;
	bImportToInstance: boolean;
	bCanImportToInstance: boolean;
	static Load(ResourceName: string): ImportVertexColorOptions;
	static Find(Outer: UObject, ResourceName: string): ImportVertexColorOptions;
	static GetDefaultObject(): ImportVertexColorOptions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ImportVertexColorOptions;
	static C(Other: UObject | any): ImportVertexColorOptions;
}

declare type EMeshPaintDataColorViewMode = 'Normal' | 'RGB' | 'Alpha' | 'Red' | 'Green' | 'Blue' | 'EMeshPaintDataColorViewMode_MAX';
declare var EMeshPaintDataColorViewMode : { Normal:'Normal',RGB:'RGB',Alpha:'Alpha',Red:'Red',Green:'Green',Blue:'Blue',EMeshPaintDataColorViewMode_MAX:'EMeshPaintDataColorViewMode_MAX', };
declare class MeshPaintModeSettings extends UObject { 
	ColorViewMode: EMeshPaintDataColorViewMode;
	static Load(ResourceName: string): MeshPaintModeSettings;
	static Find(Outer: UObject, ResourceName: string): MeshPaintModeSettings;
	static GetDefaultObject(): MeshPaintModeSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshPaintModeSettings;
	static C(Other: UObject | any): MeshPaintModeSettings;
}

declare class MeshPaintMode extends EdMode { 
	ModeSettings: MeshPaintModeSettings;
	static Load(ResourceName: string): MeshPaintMode;
	static Find(Outer: UObject, ResourceName: string): MeshPaintMode;
	static GetDefaultObject(): MeshPaintMode;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshPaintMode;
	static C(Other: UObject | any): MeshPaintMode;
}

declare type EMeshPaintColorViewMode = 'Normal' | 'RGB' | 'Alpha' | 'Red' | 'Green' | 'Blue' | 'EMeshPaintColorViewMode_MAX';
declare var EMeshPaintColorViewMode : { Normal:'Normal',RGB:'RGB',Alpha:'Alpha',Red:'Red',Green:'Green',Blue:'Blue',EMeshPaintColorViewMode_MAX:'EMeshPaintColorViewMode_MAX', };
declare class PaintBrushSettings extends UObject { 
	BrushRadius: number;
	BrushStrength: number;
	BrushFalloffAmount: number;
	bEnableFlow: boolean;
	bOnlyFrontFacingTriangles: boolean;
	ColorViewMode: EMeshPaintColorViewMode;
	static Load(ResourceName: string): PaintBrushSettings;
	static Find(Outer: UObject, ResourceName: string): PaintBrushSettings;
	static GetDefaultObject(): PaintBrushSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PaintBrushSettings;
	static C(Other: UObject | any): PaintBrushSettings;
}

declare class MeshPaintSettings extends UObject { 
	VertexPreviewSize: number;
	static Load(ResourceName: string): MeshPaintSettings;
	static Find(Outer: UObject, ResourceName: string): MeshPaintSettings;
	static GetDefaultObject(): MeshPaintSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshPaintSettings;
	static C(Other: UObject | any): MeshPaintSettings;
}

declare class VertexColorImportOptions extends UObject { 
	UVIndex: number;
	LODIndex: number;
	bRed: boolean;
	bBlue: boolean;
	bGreen: boolean;
	bAlpha: boolean;
	bImportToInstance: boolean;
	bCanImportToInstance: boolean;
	static Load(ResourceName: string): VertexColorImportOptions;
	static Find(Outer: UObject, ResourceName: string): VertexColorImportOptions;
	static GetDefaultObject(): VertexColorImportOptions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VertexColorImportOptions;
	static C(Other: UObject | any): VertexColorImportOptions;
}

declare type ETutorialContent = 'None' | 'Text' | 'UDNExcerpt' | 'RichText' | 'ETutorialContent_MAX';
declare var ETutorialContent : { None:'None',Text:'Text',UDNExcerpt:'UDNExcerpt',RichText:'RichText',ETutorialContent_MAX:'ETutorialContent_MAX', };
declare class TutorialContent { 
	Type: ETutorialContent;
	Content: string;
	ExcerptName: string;
	text: string;
	clone() : TutorialContent;
	static C(Other: UObject | any): TutorialContent;
}

declare type ETutorialAnchorIdentifier = 'None' | 'NamedWidget' | 'Asset' | 'ETutorialAnchorIdentifier_MAX';
declare var ETutorialAnchorIdentifier : { None:'None',NamedWidget:'NamedWidget',Asset:'Asset',ETutorialAnchorIdentifier_MAX:'ETutorialAnchorIdentifier_MAX', };
declare class TutorialContentAnchor { 
	Type: ETutorialAnchorIdentifier;
	WrapperIdentifier: string;
	Asset: SoftObjectPath;
	bDrawHighlight: boolean;
	TabToFocusOrOpen: string;
	FriendlyName: string;
	GuidString: string;
	OuterName: string;
	clone() : TutorialContentAnchor;
	static C(Other: UObject | any): TutorialContentAnchor;
}

declare class TutorialWidgetContent { 
	Content: TutorialContent;
	WidgetAnchor: TutorialContentAnchor;
	HorizontalAlignment: EHorizontalAlignment;
	VerticalAlignment: EVerticalAlignment;
	Offset: Vector2D;
	ContentWidth: number;
	bAutoFocus: boolean;
	clone() : TutorialWidgetContent;
	static C(Other: UObject | any): TutorialWidgetContent;
}

declare class TutorialStage { 
	Name: string;
	Content: TutorialContent;
	WidgetContent: TutorialWidgetContent[];
	NextButtonText: string;
	BackButtonText: string;
	PlatformsToTest: string[];
	bInvertPlatformTest: boolean;
	clone() : TutorialStage;
	static C(Other: UObject | any): TutorialStage;
}

declare class EditorTutorial extends UObject { 
	Title: string;
	SortOrder: number;
	Icon: string;
	Texture: Texture2D;
	Category: string;
	SummaryContent: TutorialContent;
	Stages: TutorialStage[];
	PreviousTutorial: SoftClassPath;
	NextTutorial: SoftClassPath;
	bIsStandalone: boolean;
	AssetToUse: SoftObjectPath;
	ImportPath: string;
	bHideInBrowser: boolean;
	SearchTags: string;
	static Load(ResourceName: string): EditorTutorial;
	static Find(Outer: UObject, ResourceName: string): EditorTutorial;
	static GetDefaultObject(): EditorTutorial;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorTutorial;
	static SetEngineFolderVisibilty(bNewVisibility: boolean): void;
	static OpenAsset(Asset: UObject): void;
	OnTutorialStageStarted(StageName: string): void;
	OnTutorialStageEnded(StageName: string): void;
	OnTutorialLaunched(): void;
	OnTutorialClosed(): void;
	static GoToPreviousTutorialStage(): void;
	static GoToNextTutorialStage(): void;
	static GetEngineFolderVisibilty(): boolean;
	GetActorReference(PathToActor: string): Actor;
	static BeginTutorial(TutorialToStart: EditorTutorial,bRestart: boolean): void;
	static C(Other: UObject | any): EditorTutorial;
}

declare class EditorTutorialFactory extends Factory { 
	static Load(ResourceName: string): EditorTutorialFactory;
	static Find(Outer: UObject, ResourceName: string): EditorTutorialFactory;
	static GetDefaultObject(): EditorTutorialFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorTutorialFactory;
	static C(Other: UObject | any): EditorTutorialFactory;
}

declare class EditorTutorialImportFactory extends Factory { 
	static Load(ResourceName: string): EditorTutorialImportFactory;
	static Find(Outer: UObject, ResourceName: string): EditorTutorialImportFactory;
	static GetDefaultObject(): EditorTutorialImportFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorTutorialImportFactory;
	static C(Other: UObject | any): EditorTutorialImportFactory;
}

declare class TutorialCategory { 
	Identifier: string;
	Title: string;
	SortOrder: number;
	Description: string;
	Icon: string;
	Texture: SoftObjectPath;
	clone() : TutorialCategory;
	static C(Other: UObject | any): TutorialCategory;
}

declare class TutorialContext { 
	Context: string;
	BrowserFilter: string;
	AttractTutorial: SoftClassPath;
	LaunchTutorial: SoftClassPath;
	clone() : TutorialContext;
	static C(Other: UObject | any): TutorialContext;
}

declare class EditorTutorialSettings extends UObject { 
	bDisableAllTutorialAlerts: boolean;
	Categories: TutorialCategory[];
	StartupTutorial: SoftClassPath;
	TutorialContexts: TutorialContext[];
	static Load(ResourceName: string): EditorTutorialSettings;
	static Find(Outer: UObject, ResourceName: string): EditorTutorialSettings;
	static GetDefaultObject(): EditorTutorialSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorTutorialSettings;
	static C(Other: UObject | any): EditorTutorialSettings;
}

declare class TutorialSettings extends UObject { 
	Categories: TutorialCategory[];
	StartupTutorial: SoftClassPath;
	static Load(ResourceName: string): TutorialSettings;
	static Find(Outer: UObject, ResourceName: string): TutorialSettings;
	static GetDefaultObject(): TutorialSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TutorialSettings;
	static C(Other: UObject | any): TutorialSettings;
}

declare class TutorialProgress { 
	Tutorial: SoftClassPath;
	CurrentStage: number;
	bUserDismissed: boolean;
	clone() : TutorialProgress;
	static C(Other: UObject | any): TutorialProgress;
}

declare class TutorialStateSettings extends UObject { 
	TutorialsProgress: TutorialProgress[];
	bDismissedAllTutorials: boolean;
	static Load(ResourceName: string): TutorialStateSettings;
	static Find(Outer: UObject, ResourceName: string): TutorialStateSettings;
	static GetDefaultObject(): TutorialStateSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TutorialStateSettings;
	static C(Other: UObject | any): TutorialStateSettings;
}

declare class FlipbookEditorSettings extends UObject { 
	BackgroundColor: Color;
	bShowGridByDefault: boolean;
	static Load(ResourceName: string): FlipbookEditorSettings;
	static Find(Outer: UObject, ResourceName: string): FlipbookEditorSettings;
	static GetDefaultObject(): FlipbookEditorSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FlipbookEditorSettings;
	static C(Other: UObject | any): FlipbookEditorSettings;
}

declare type ESpriteExtractMode = 'Auto' | 'Grid' | 'ESpriteExtractMode_MAX';
declare var ESpriteExtractMode : { Auto:'Auto',Grid:'Grid',ESpriteExtractMode_MAX:'ESpriteExtractMode_MAX', };
declare class PaperExtractSpritesSettings extends UObject { 
	SpriteExtractMode: ESpriteExtractMode;
	OutlineColor: LinearColor;
	ViewportTextureTint: LinearColor;
	BackgroundColor: LinearColor;
	NamingTemplate: string;
	NamingStartIndex: number;
	static Load(ResourceName: string): PaperExtractSpritesSettings;
	static Find(Outer: UObject, ResourceName: string): PaperExtractSpritesSettings;
	static GetDefaultObject(): PaperExtractSpritesSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PaperExtractSpritesSettings;
	static C(Other: UObject | any): PaperExtractSpritesSettings;
}

declare class PaperExtractSpriteGridSettings extends UObject { 
	CellWidth: number;
	CellHeight: number;
	NumCellsX: number;
	NumCellsY: number;
	MarginX: number;
	MarginY: number;
	SpacingX: number;
	SpacingY: number;
	static Load(ResourceName: string): PaperExtractSpriteGridSettings;
	static Find(Outer: UObject, ResourceName: string): PaperExtractSpriteGridSettings;
	static GetDefaultObject(): PaperExtractSpriteGridSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PaperExtractSpriteGridSettings;
	static C(Other: UObject | any): PaperExtractSpriteGridSettings;
}

declare class PaperFlipbookActorFactory extends ActorFactory { 
	static Load(ResourceName: string): PaperFlipbookActorFactory;
	static Find(Outer: UObject, ResourceName: string): PaperFlipbookActorFactory;
	static GetDefaultObject(): PaperFlipbookActorFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PaperFlipbookActorFactory;
	static C(Other: UObject | any): PaperFlipbookActorFactory;
}

declare class PaperFlipbookFactory extends Factory { 
	static Load(ResourceName: string): PaperFlipbookFactory;
	static Find(Outer: UObject, ResourceName: string): PaperFlipbookFactory;
	static GetDefaultObject(): PaperFlipbookFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PaperFlipbookFactory;
	static C(Other: UObject | any): PaperFlipbookFactory;
}

declare class PaperSpriteThumbnailRenderer extends DefaultSizedThumbnailRenderer { 
	static Load(ResourceName: string): PaperSpriteThumbnailRenderer;
	static Find(Outer: UObject, ResourceName: string): PaperSpriteThumbnailRenderer;
	static GetDefaultObject(): PaperSpriteThumbnailRenderer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PaperSpriteThumbnailRenderer;
	static C(Other: UObject | any): PaperSpriteThumbnailRenderer;
}

declare class PaperFlipbookThumbnailRenderer extends PaperSpriteThumbnailRenderer { 
	static Load(ResourceName: string): PaperFlipbookThumbnailRenderer;
	static Find(Outer: UObject, ResourceName: string): PaperFlipbookThumbnailRenderer;
	static GetDefaultObject(): PaperFlipbookThumbnailRenderer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PaperFlipbookThumbnailRenderer;
	static C(Other: UObject | any): PaperFlipbookThumbnailRenderer;
}

declare class PaperImporterSettings extends UObject { 
	bPickBestMaterialWhenCreatingSprites: boolean;
	bPickBestMaterialWhenCreatingTileMaps: boolean;
	bAnalysisCanUseOpaque: boolean;
	DefaultPixelsPerUnrealUnit: number;
	NormalMapTextureSuffixes: string[];
	BaseMapTextureSuffixes: string[];
	DefaultSpriteTextureGroup: TextureGroup;
	bOverrideTextureCompression: boolean;
	DefaultSpriteTextureCompression: TextureCompressionSettings;
	UnlitDefaultMaskedMaterialName: SoftObjectPath;
	UnlitDefaultTranslucentMaterialName: SoftObjectPath;
	UnlitDefaultOpaqueMaterialName: SoftObjectPath;
	LitDefaultMaskedMaterialName: SoftObjectPath;
	LitDefaultTranslucentMaterialName: SoftObjectPath;
	LitDefaultOpaqueMaterialName: SoftObjectPath;
	static Load(ResourceName: string): PaperImporterSettings;
	static Find(Outer: UObject, ResourceName: string): PaperImporterSettings;
	static GetDefaultObject(): PaperImporterSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PaperImporterSettings;
	static C(Other: UObject | any): PaperImporterSettings;
}

declare class PaperSpriteActorFactory extends ActorFactory { 
	static Load(ResourceName: string): PaperSpriteActorFactory;
	static Find(Outer: UObject, ResourceName: string): PaperSpriteActorFactory;
	static GetDefaultObject(): PaperSpriteActorFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PaperSpriteActorFactory;
	static C(Other: UObject | any): PaperSpriteActorFactory;
}

declare class PaperSpriteAtlasFactory extends Factory { 
	static Load(ResourceName: string): PaperSpriteAtlasFactory;
	static Find(Outer: UObject, ResourceName: string): PaperSpriteAtlasFactory;
	static GetDefaultObject(): PaperSpriteAtlasFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PaperSpriteAtlasFactory;
	static C(Other: UObject | any): PaperSpriteAtlasFactory;
}

declare class PaperSpriteFactory extends Factory { 
	static Load(ResourceName: string): PaperSpriteFactory;
	static Find(Outer: UObject, ResourceName: string): PaperSpriteFactory;
	static GetDefaultObject(): PaperSpriteFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PaperSpriteFactory;
	static C(Other: UObject | any): PaperSpriteFactory;
}

declare class PaperTileMapFactory extends Factory { 
	static Load(ResourceName: string): PaperTileMapFactory;
	static Find(Outer: UObject, ResourceName: string): PaperTileMapFactory;
	static GetDefaultObject(): PaperTileMapFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PaperTileMapFactory;
	static C(Other: UObject | any): PaperTileMapFactory;
}

declare class PaperTileMapPromotionFactory extends Factory { 
	AssetToRename: PaperTileMap;
	static Load(ResourceName: string): PaperTileMapPromotionFactory;
	static Find(Outer: UObject, ResourceName: string): PaperTileMapPromotionFactory;
	static GetDefaultObject(): PaperTileMapPromotionFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PaperTileMapPromotionFactory;
	static C(Other: UObject | any): PaperTileMapPromotionFactory;
}

declare class PaperTileSetFactory extends Factory { 
	static Load(ResourceName: string): PaperTileSetFactory;
	static Find(Outer: UObject, ResourceName: string): PaperTileSetFactory;
	static GetDefaultObject(): PaperTileSetFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PaperTileSetFactory;
	static C(Other: UObject | any): PaperTileSetFactory;
}

declare class PaperTileSetThumbnailRenderer extends DefaultSizedThumbnailRenderer { 
	static Load(ResourceName: string): PaperTileSetThumbnailRenderer;
	static Find(Outer: UObject, ResourceName: string): PaperTileSetThumbnailRenderer;
	static GetDefaultObject(): PaperTileSetThumbnailRenderer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PaperTileSetThumbnailRenderer;
	static C(Other: UObject | any): PaperTileSetThumbnailRenderer;
}

declare class SpriteEditorSettings extends UObject { 
	BackgroundColor: Color;
	bShowGridByDefault: boolean;
	static Load(ResourceName: string): SpriteEditorSettings;
	static Find(Outer: UObject, ResourceName: string): SpriteEditorSettings;
	static GetDefaultObject(): SpriteEditorSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SpriteEditorSettings;
	static C(Other: UObject | any): SpriteEditorSettings;
}

declare class TerrainSplineActorFactory extends ActorFactory { 
	static Load(ResourceName: string): TerrainSplineActorFactory;
	static Find(Outer: UObject, ResourceName: string): TerrainSplineActorFactory;
	static GetDefaultObject(): TerrainSplineActorFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TerrainSplineActorFactory;
	static C(Other: UObject | any): TerrainSplineActorFactory;
}

declare class TileMapActorFactory extends ActorFactory { 
	static Load(ResourceName: string): TileMapActorFactory;
	static Find(Outer: UObject, ResourceName: string): TileMapActorFactory;
	static GetDefaultObject(): TileMapActorFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TileMapActorFactory;
	static C(Other: UObject | any): TileMapActorFactory;
}

declare class TileSetImportMapping { 
	SourceName: string;
	ImportedTileSet: any;
	ImportedTexture: any;
	clone() : TileSetImportMapping;
	static C(Other: UObject | any): TileSetImportMapping;
}

declare class TileMapAssetImportData extends AssetImportData { 
	TileSetMap: TileSetImportMapping[];
	static Load(ResourceName: string): TileMapAssetImportData;
	static Find(Outer: UObject, ResourceName: string): TileMapAssetImportData;
	static GetDefaultObject(): TileMapAssetImportData;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TileMapAssetImportData;
	static C(Other: UObject | any): TileMapAssetImportData;
}

declare class TileMapEditorSettings extends UObject { 
	DefaultBackgroundColor: Color;
	bShowGridByDefault: boolean;
	DefaultTileGridColor: Color;
	DefaultMultiTileGridColor: Color;
	DefaultMultiTileGridWidth: number;
	DefaultMultiTileGridHeight: number;
	DefaultMultiTileGridOffsetX: number;
	DefaultMultiTileGridOffsetY: number;
	DefaultLayerGridColor: Color;
	static Load(ResourceName: string): TileMapEditorSettings;
	static Find(Outer: UObject, ResourceName: string): TileMapEditorSettings;
	static GetDefaultObject(): TileMapEditorSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TileMapEditorSettings;
	static C(Other: UObject | any): TileMapEditorSettings;
}

declare class TileSetEditorSettings extends UObject { 
	DefaultBackgroundColor: Color;
	bShowGridByDefault: boolean;
	ExtrusionAmount: number;
	bPadToPowerOf2: boolean;
	bFillWithTransparentBlack: boolean;
	static Load(ResourceName: string): TileSetEditorSettings;
	static Find(Outer: UObject, ResourceName: string): TileSetEditorSettings;
	static GetDefaultObject(): TileSetEditorSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TileSetEditorSettings;
	static C(Other: UObject | any): TileSetEditorSettings;
}

declare class TileSheetPaddingFactory extends Factory { 
	SourceTileSet: PaperTileSet;
	ExtrusionAmount: number;
	bPadToPowerOf2: boolean;
	bFillWithTransparentBlack: boolean;
	static Load(ResourceName: string): TileSheetPaddingFactory;
	static Find(Outer: UObject, ResourceName: string): TileSheetPaddingFactory;
	static GetDefaultObject(): TileSheetPaddingFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TileSheetPaddingFactory;
	static C(Other: UObject | any): TileSheetPaddingFactory;
}

declare class PaperSpriteSheet extends UObject { 
	SpriteNames: string[];
	Sprites: PaperSprite[];
	TextureName: string;
	Texture: Texture2D;
	NormalMapTextureName: string;
	NormalMapTexture: Texture2D;
	AssetImportData: AssetImportData;
	static Load(ResourceName: string): PaperSpriteSheet;
	static Find(Outer: UObject, ResourceName: string): PaperSpriteSheet;
	static GetDefaultObject(): PaperSpriteSheet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PaperSpriteSheet;
	static C(Other: UObject | any): PaperSpriteSheet;
}

declare class PaperSpriteSheetImportFactory extends Factory { 
	static Load(ResourceName: string): PaperSpriteSheetImportFactory;
	static Find(Outer: UObject, ResourceName: string): PaperSpriteSheetImportFactory;
	static GetDefaultObject(): PaperSpriteSheetImportFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PaperSpriteSheetImportFactory;
	static C(Other: UObject | any): PaperSpriteSheetImportFactory;
}

declare class PaperSpriteSheetReimportFactory extends PaperSpriteSheetImportFactory { 
	static Load(ResourceName: string): PaperSpriteSheetReimportFactory;
	static Find(Outer: UObject, ResourceName: string): PaperSpriteSheetReimportFactory;
	static GetDefaultObject(): PaperSpriteSheetReimportFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PaperSpriteSheetReimportFactory;
	static C(Other: UObject | any): PaperSpriteSheetReimportFactory;
}

declare class PaperTiledImporterFactory extends Factory { 
	static Load(ResourceName: string): PaperTiledImporterFactory;
	static Find(Outer: UObject, ResourceName: string): PaperTiledImporterFactory;
	static GetDefaultObject(): PaperTiledImporterFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PaperTiledImporterFactory;
	static C(Other: UObject | any): PaperTiledImporterFactory;
}

declare type EMotionExtractor_MotionType = 'Translation' | 'Rotation' | 'Scale' | 'TranslationSpeed' | 'RotationSpeed' | 'EMotionExtractor_MAX';
declare var EMotionExtractor_MotionType : { Translation:'Translation',Rotation:'Rotation',Scale:'Scale',TranslationSpeed:'TranslationSpeed',RotationSpeed:'RotationSpeed',EMotionExtractor_MAX:'EMotionExtractor_MAX', };
declare type EMotionExtractor_Axis = 'X' | 'Y' | 'Z' | 'XY' | 'XZ' | 'YZ' | 'XYZ' | 'EMotionExtractor_MAX';
declare var EMotionExtractor_Axis : { X:'X',Y:'Y',Z:'Z',XY:'XY',XZ:'XZ',YZ:'YZ',XYZ:'XYZ',EMotionExtractor_MAX:'EMotionExtractor_MAX', };
declare type EMotionExtractor_MathOperation = 'None' | 'Addition' | 'Subtraction' | 'Division' | 'Multiplication' | 'EMotionExtractor_MAX';
declare var EMotionExtractor_MathOperation : { None:'None',Addition:'Addition',Subtraction:'Subtraction',Division:'Division',Multiplication:'Multiplication',EMotionExtractor_MAX:'EMotionExtractor_MAX', };
declare class MotionExtractorModifier extends AnimationModifier { 
	BoneName: string;
	MotionType: EMotionExtractor_MotionType;
	Axis: EMotionExtractor_Axis;
	bComponentSpace: boolean;
	bAbsoluteValue: boolean;
	MathOperation: EMotionExtractor_MathOperation;
	Modifier: number;
	SampleRate: number;
	bUseCustomCurveName: boolean;
	CustomCurveName: string;
	static Load(ResourceName: string): MotionExtractorModifier;
	static Find(Outer: UObject, ResourceName: string): MotionExtractorModifier;
	static GetDefaultObject(): MotionExtractorModifier;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MotionExtractorModifier;
	static C(Other: UObject | any): MotionExtractorModifier;
}

declare class CachedMotionAnalysisProperties extends CachedAnalysisProperties { 
	static Load(ResourceName: string): CachedMotionAnalysisProperties;
	static Find(Outer: UObject, ResourceName: string): CachedMotionAnalysisProperties;
	static GetDefaultObject(): CachedMotionAnalysisProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CachedMotionAnalysisProperties;
	static C(Other: UObject | any): CachedMotionAnalysisProperties;
}

declare type EAnalysisLocomotionAxis = 'Speed' | 'Direction' | 'ForwardSpeed' | 'RightwardSpeed' | 'UpwardSpeed' | 'ForwardSlope' | 'RightwardSlope' | 'EAnalysisLocomotionAxis_MAX';
declare var EAnalysisLocomotionAxis : { Speed:'Speed',Direction:'Direction',ForwardSpeed:'ForwardSpeed',RightwardSpeed:'RightwardSpeed',UpwardSpeed:'UpwardSpeed',ForwardSlope:'ForwardSlope',RightwardSlope:'RightwardSlope',EAnalysisLocomotionAxis_MAX:'EAnalysisLocomotionAxis_MAX', };
declare class LocomotionAnalysisProperties extends AnalysisProperties { 
	FunctionAxis: EAnalysisLocomotionAxis;
	PrimaryBoneSocket: BoneSocketTarget;
	SecondaryBoneSocket: BoneSocketTarget;
	CharacterFacingAxis: EAnalysisLinearAxis;
	CharacterUpAxis: EAnalysisLinearAxis;
	static Load(ResourceName: string): LocomotionAnalysisProperties;
	static Find(Outer: UObject, ResourceName: string): LocomotionAnalysisProperties;
	static GetDefaultObject(): LocomotionAnalysisProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LocomotionAnalysisProperties;
	static C(Other: UObject | any): LocomotionAnalysisProperties;
}

declare type EAnalysisRootMotionAxis = 'Speed' | 'Direction' | 'ForwardSpeed' | 'RightwardSpeed' | 'UpwardSpeed' | 'ForwardSlope' | 'RightwardSlope' | 'EAnalysisRootMotionAxis_MAX';
declare var EAnalysisRootMotionAxis : { Speed:'Speed',Direction:'Direction',ForwardSpeed:'ForwardSpeed',RightwardSpeed:'RightwardSpeed',UpwardSpeed:'UpwardSpeed',ForwardSlope:'ForwardSlope',RightwardSlope:'RightwardSlope',EAnalysisRootMotionAxis_MAX:'EAnalysisRootMotionAxis_MAX', };
declare class RootMotionAnalysisProperties extends AnalysisProperties { 
	FunctionAxis: EAnalysisRootMotionAxis;
	BoneSocket: BoneSocketTarget;
	Space: EAnalysisSpace;
	SpaceBoneSocket: BoneSocketTarget;
	CharacterFacingAxis: EAnalysisLinearAxis;
	CharacterUpAxis: EAnalysisLinearAxis;
	StartTimeFraction: number;
	EndTimeFraction: number;
	static Load(ResourceName: string): RootMotionAnalysisProperties;
	static Find(Outer: UObject, ResourceName: string): RootMotionAnalysisProperties;
	static GetDefaultObject(): RootMotionAnalysisProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RootMotionAnalysisProperties;
	static C(Other: UObject | any): RootMotionAnalysisProperties;
}

declare class OodleNetworkTrainerCommandlet extends Commandlet { 
	bCompressionTest: boolean;
	bWriteV5Dictionaries: boolean;
	HashTableSize: number;
	DictionarySize: number;
	DictionaryTrials: number;
	TrialRandomness: number;
	TrialGenerations: number;
	bNoTrials: boolean;
	static Load(ResourceName: string): OodleNetworkTrainerCommandlet;
	static Find(Outer: UObject, ResourceName: string): OodleNetworkTrainerCommandlet;
	static GetDefaultObject(): OodleNetworkTrainerCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OodleNetworkTrainerCommandlet;
	static C(Other: UObject | any): OodleNetworkTrainerCommandlet;
}

declare class AnimationSharingSetupFactory extends Factory { 
	static Load(ResourceName: string): AnimationSharingSetupFactory;
	static Find(Outer: UObject, ResourceName: string): AnimationSharingSetupFactory;
	static GetDefaultObject(): AnimationSharingSetupFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimationSharingSetupFactory;
	static C(Other: UObject | any): AnimationSharingSetupFactory;
}

declare class MyPluginStruct { 
	TestString: string;
	clone() : MyPluginStruct;
	static C(Other: UObject | any): MyPluginStruct;
}

declare class MyPluginObject extends UObject { 
	MyStruct: MyPluginStruct;
	static Load(ResourceName: string): MyPluginObject;
	static Find(Outer: UObject, ResourceName: string): MyPluginObject;
	static GetDefaultObject(): MyPluginObject;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MyPluginObject;
	static C(Other: UObject | any): MyPluginObject;
}

declare class CryptoKeysCommandlet extends Commandlet { 
	static Load(ResourceName: string): CryptoKeysCommandlet;
	static Find(Outer: UObject, ResourceName: string): CryptoKeysCommandlet;
	static GetDefaultObject(): CryptoKeysCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CryptoKeysCommandlet;
	static C(Other: UObject | any): CryptoKeysCommandlet;
}

declare class CryptoEncryptionKey { 
	Guid: Guid;
	Name: string;
	Key: string;
	clone() : CryptoEncryptionKey;
	static C(Other: UObject | any): CryptoEncryptionKey;
}

declare class CryptoKeysSettings extends UObject { 
	EncryptionKey: string;
	SecondaryEncryptionKeys: CryptoEncryptionKey[];
	bEncryptPakIniFiles: boolean;
	bEncryptPakIndex: boolean;
	bEncryptUAssetFiles: boolean;
	bEncryptAllAssetFiles: boolean;
	SigningPublicExponent: string;
	SigningModulus: string;
	SigningPrivateExponent: string;
	bEnablePakSigning: boolean;
	static Load(ResourceName: string): CryptoKeysSettings;
	static Find(Outer: UObject, ResourceName: string): CryptoKeysSettings;
	static GetDefaultObject(): CryptoKeysSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CryptoKeysSettings;
	static C(Other: UObject | any): CryptoKeysSettings;
}

declare type ECurveEditorFFTFilterType = 'Lowpass' | 'Highpass' | 'ECurveEditorFFTFilterType_MAX';
declare var ECurveEditorFFTFilterType : { Lowpass:'Lowpass',Highpass:'Highpass',ECurveEditorFFTFilterType_MAX:'ECurveEditorFFTFilterType_MAX', };
declare type ECurveEditorFFTFilterClass = 'Butterworth' | 'Chebyshev' | 'ECurveEditorFFTFilterClass_MAX';
declare var ECurveEditorFFTFilterClass : { Butterworth:'Butterworth',Chebyshev:'Chebyshev',ECurveEditorFFTFilterClass_MAX:'ECurveEditorFFTFilterClass_MAX', };
declare class CurveEditorFFTFilter extends CurveEditorFilterBase { 
	CutoffFrequency: number;
	Type: ECurveEditorFFTFilterType;
	Response: ECurveEditorFFTFilterClass;
	Order: number;
	static Load(ResourceName: string): CurveEditorFFTFilter;
	static Find(Outer: UObject, ResourceName: string): CurveEditorFFTFilter;
	static GetDefaultObject(): CurveEditorFFTFilter;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CurveEditorFFTFilter;
	static C(Other: UObject | any): CurveEditorFFTFilter;
}

declare class CurveEditorRetimeAnchor { 
	ValueInSeconds: any;
	bIsSelected: boolean;
	clone() : CurveEditorRetimeAnchor;
	static C(Other: UObject | any): CurveEditorRetimeAnchor;
}

declare class CurveEditorRetimeToolData extends UObject { 
	RetimingAnchors: CurveEditorRetimeAnchor[];
	static Load(ResourceName: string): CurveEditorRetimeToolData;
	static Find(Outer: UObject, ResourceName: string): CurveEditorRetimeToolData;
	static GetDefaultObject(): CurveEditorRetimeToolData;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CurveEditorRetimeToolData;
	static C(Other: UObject | any): CurveEditorRetimeToolData;
}

declare class SkeletalMeshEditorSubsystem extends EditorSubsystem { 
	static Load(ResourceName: string): SkeletalMeshEditorSubsystem;
	static Find(Outer: UObject, ResourceName: string): SkeletalMeshEditorSubsystem;
	static GetDefaultObject(): SkeletalMeshEditorSubsystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SkeletalMeshEditorSubsystem;
	static SetLodBuildSettings(SkeletalMesh: SkeletalMesh,LODIndex: number,BuildOptions: SkeletalMeshBuildSettings): void;
	static RenameSocket(SkeletalMesh: SkeletalMesh,OldName: string,NewName: string): boolean;
	static ReimportAllCustomLODs(SkeletalMesh: SkeletalMesh): boolean;
	static RegenerateLOD(SkeletalMesh: SkeletalMesh,NewLODCount: number,bRegenerateEvenIfImported: boolean,bGenerateBaseLOD: boolean): boolean;
	static ImportLOD(BaseMesh: SkeletalMesh,LODIndex: number,SourceFilename: string): number;
	GetNumVerts(SkeletalMesh: SkeletalMesh,LODIndex: number): number;
	GetNumSections(SkeletalMesh: SkeletalMesh,LODIndex: number): number;
	GetLODMaterialSlot(SkeletalMesh: SkeletalMesh,LODIndex: number,SectionIndex: number): number;
	static GetLODCount(SkeletalMesh: SkeletalMesh): number;
	static GetLodBuildSettings(SkeletalMesh: SkeletalMesh,LODIndex: number,OutBuildOptions?: SkeletalMeshBuildSettings): {OutBuildOptions: SkeletalMeshBuildSettings};
	static CreatePhysicsAsset(SkeletalMesh: SkeletalMesh): PhysicsAsset;
	static C(Other: UObject | any): SkeletalMeshEditorSubsystem;
}

declare class StaticMeshEditorUISubsystem extends AssetEditorUISubsystem { 
	static Load(ResourceName: string): StaticMeshEditorUISubsystem;
	static Find(Outer: UObject, ResourceName: string): StaticMeshEditorUISubsystem;
	static GetDefaultObject(): StaticMeshEditorUISubsystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): StaticMeshEditorUISubsystem;
	static C(Other: UObject | any): StaticMeshEditorUISubsystem;
}

declare class JoinStaticMeshActorsOptions { 
	bDestroySourceActors: boolean;
	NewActorLabel: string;
	bRenameComponentsFromSource: boolean;
	clone() : JoinStaticMeshActorsOptions;
	static C(Other: UObject | any): JoinStaticMeshActorsOptions;
}

declare class MergeStaticMeshActorsOptions extends JoinStaticMeshActorsOptions { 
	bSpawnMergedActor: boolean;
	BasePackageName: string;
	MeshMergingSettings: MeshMergingSettings;
	clone() : MergeStaticMeshActorsOptions;
	static C(Other: UObject | any): MergeStaticMeshActorsOptions;
}

declare class CreateProxyMeshActorOptions extends JoinStaticMeshActorsOptions { 
	bSpawnMergedActor: boolean;
	BasePackageName: string;
	MeshProxySettings: MeshProxySettings;
	clone() : CreateProxyMeshActorOptions;
	static C(Other: UObject | any): CreateProxyMeshActorOptions;
}

declare class StaticMeshEditorSubsystem extends EditorSubsystem { 
	static Load(ResourceName: string): StaticMeshEditorSubsystem;
	static Find(Outer: UObject, ResourceName: string): StaticMeshEditorSubsystem;
	static GetDefaultObject(): StaticMeshEditorSubsystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): StaticMeshEditorSubsystem;
	SetNaniteSettings(StaticMesh: StaticMesh,NaniteSettings: MeshNaniteSettings,bApplyChanges: boolean): void;
	SetLodsWithNotification(StaticMesh: StaticMesh,ReductionOptions: StaticMeshReductionOptions,bApplyChanges: boolean): number;
	SetLods(StaticMesh: StaticMesh,ReductionOptions: StaticMeshReductionOptions): number;
	SetLodReductionSettings(StaticMesh: StaticMesh,LODIndex: number,ReductionOptions: MeshReductionSettings): void;
	SetLODMaterialSlot(StaticMesh: StaticMesh,MaterialSlotIndex: number,LODIndex: number,SectionIndex: number): void;
	SetLODGroup(StaticMesh: StaticMesh,LODGroup: string,bRebuildImmediately: boolean): boolean;
	SetLodFromStaticMesh(DestinationStaticMesh: StaticMesh,DestinationLodIndex: number,SourceStaticMesh: StaticMesh,SourceLodIndex: number,bReuseExistingMaterialSlots: boolean): number;
	SetLodBuildSettings(StaticMesh: StaticMesh,LODIndex: number,BuildOptions: MeshBuildSettings): void;
	SetGenerateLightmapUVs(StaticMesh: StaticMesh,bGenerateLightmapUVs: boolean): boolean;
	SetConvexDecompositionCollisionsWithNotification(StaticMesh: StaticMesh,HullCount: number,MaxHullVerts: number,HullPrecision: number,bApplyChanges: boolean): boolean;
	SetConvexDecompositionCollisions(StaticMesh: StaticMesh,HullCount: number,MaxHullVerts: number,HullPrecision: number): boolean;
	SetAllowCPUAccess(StaticMesh: StaticMesh,bAllowCPUAccess: boolean): void;
	ReplaceMeshComponentsMeshesOnActors(Actors: Actor[],MeshToBeReplaced: StaticMesh,NewMesh: StaticMesh): void;
	ReplaceMeshComponentsMeshes(MeshComponents: StaticMeshComponent[],MeshToBeReplaced: StaticMesh,NewMesh: StaticMesh): void;
	ReplaceMeshComponentsMaterialsOnActors(Actors: Actor[],MaterialToBeReplaced: MaterialInterface,NewMaterial: MaterialInterface): void;
	ReplaceMeshComponentsMaterials(MeshComponents: MeshComponent[],MaterialToBeReplaced: MaterialInterface,NewMaterial: MaterialInterface): void;
	RemoveUVChannel(StaticMesh: StaticMesh,LODIndex: number,UVChannelIndex: number): boolean;
	RemoveLods(StaticMesh: StaticMesh): boolean;
	RemoveCollisionsWithNotification(StaticMesh: StaticMesh,bApplyChanges: boolean): boolean;
	RemoveCollisions(StaticMesh: StaticMesh): boolean;
	ReimportAllCustomLODs(StaticMesh: StaticMesh): boolean;
	MergeStaticMeshActors(ActorsToMerge: StaticMeshActor[],MergeOptions: MergeStaticMeshActorsOptions,OutMergedActor?: StaticMeshActor): {OutMergedActor: StaticMeshActor, $: boolean};
	JoinStaticMeshActors(ActorsToJoin: StaticMeshActor[],JoinOptions: JoinStaticMeshActorsOptions): Actor;
	IsSectionCollisionEnabled(StaticMesh: StaticMesh,LODIndex: number,SectionIndex: number): boolean;
	InsertUVChannel(StaticMesh: StaticMesh,LODIndex: number,UVChannelIndex: number): boolean;
	ImportLOD(BaseStaticMesh: StaticMesh,LODIndex: number,SourceFilename: string): number;
	HasVertexColors(StaticMesh: StaticMesh): boolean;
	HasInstanceVertexColors(StaticMeshComponent: StaticMeshComponent): boolean;
	GetSimpleCollisionCount(StaticMesh: StaticMesh): number;
	GetNumUVChannels(StaticMesh: StaticMesh,LODIndex: number): number;
	GetNumberVerts(StaticMesh: StaticMesh,LODIndex: number): number;
	GetNumberMaterials(StaticMesh: StaticMesh): number;
	GetNaniteSettings(StaticMesh: StaticMesh): MeshNaniteSettings;
	GetLodScreenSizes(StaticMesh: StaticMesh): number[];
	GetLodReductionSettings(StaticMesh: StaticMesh,LODIndex: number,OutReductionOptions?: MeshReductionSettings): {OutReductionOptions: MeshReductionSettings};
	GetLODMaterialSlot(StaticMesh: StaticMesh,LODIndex: number,SectionIndex: number): number;
	GetLODGroup(StaticMesh: StaticMesh): string;
	GetLodCount(StaticMesh: StaticMesh): number;
	GetLodBuildSettings(StaticMesh: StaticMesh,LODIndex: number,OutBuildOptions?: MeshBuildSettings): {OutBuildOptions: MeshBuildSettings};
	GetConvexCollisionCount(StaticMesh: StaticMesh): number;
	GetCollisionComplexity(StaticMesh: StaticMesh): ECollisionTraceFlag;
	GeneratePlanarUVChannel(StaticMesh: StaticMesh,LODIndex: number,UVChannelIndex: number,position: Vector,Orientation: Rotator,Tiling: Vector2D): boolean;
	GenerateCylindricalUVChannel(StaticMesh: StaticMesh,LODIndex: number,UVChannelIndex: number,position: Vector,Orientation: Rotator,Tiling: Vector2D): boolean;
	GenerateBoxUVChannel(StaticMesh: StaticMesh,LODIndex: number,UVChannelIndex: number,position: Vector,Orientation: Rotator,Size: Vector): boolean;
	EnableSectionCollision(StaticMesh: StaticMesh,bCollisionEnabled: boolean,LODIndex: number,SectionIndex: number): void;
	EnableSectionCastShadow(StaticMesh: StaticMesh,bCastShadow: boolean,LODIndex: number,SectionIndex: number): void;
	CreateProxyMeshActor(ActorsToMerge: StaticMeshActor[],MergeOptions: CreateProxyMeshActorOptions,OutMergedActor?: StaticMeshActor): {OutMergedActor: StaticMeshActor, $: boolean};
	BulkSetConvexDecompositionCollisionsWithNotification(StaticMeshes: StaticMesh[],HullCount: number,MaxHullVerts: number,HullPrecision: number,bApplyChanges: boolean): boolean;
	BulkSetConvexDecompositionCollisions(StaticMeshes: StaticMesh[],HullCount: number,MaxHullVerts: number,HullPrecision: number): boolean;
	AddUVChannel(StaticMesh: StaticMesh,LODIndex: number): boolean;
	AddSimpleCollisionsWithNotification(StaticMesh: StaticMesh,ShapeType: EScriptCollisionShapeType,bApplyChanges: boolean): number;
	AddSimpleCollisions(StaticMesh: StaticMesh,ShapeType: EScriptCollisionShapeType): number;
	static C(Other: UObject | any): StaticMeshEditorSubsystem;
}

declare class EditorAssetLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): EditorAssetLibrary;
	static Find(Outer: UObject, ResourceName: string): EditorAssetLibrary;
	static GetDefaultObject(): EditorAssetLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorAssetLibrary;
	static SyncBrowserToObjects(AssetPaths: string[]): void;
	static SetMetadataTag(UObject: UObject,Tag: string,Value: string): void;
	static SaveLoadedAssets(AssetsToSave: UObject[],bOnlyIfIsDirty: boolean): boolean;
	static SaveLoadedAsset(AssetToSave: UObject,bOnlyIfIsDirty: boolean): boolean;
	static SaveDirectory(DirectoryPath: string,bOnlyIfIsDirty: boolean,bRecursive: boolean): boolean;
	static SaveAsset(AssetToSave: string,bOnlyIfIsDirty: boolean): boolean;
	static RenameLoadedAsset(SourceAsset: UObject,DestinationAssetPath: string): boolean;
	static RenameDirectory(SourceDirectoryPath: string,DestinationDirectoryPath: string): boolean;
	static RenameAsset(SourceAssetPath: string,DestinationAssetPath: string): boolean;
	static RemoveMetadataTag(UObject: UObject,Tag: string): void;
	static MakeDirectory(DirectoryPath: string): boolean;
	static LoadBlueprintClass(AssetPath: string): UnrealEngineClass;
	static LoadAsset(AssetPath: string): UObject;
	static ListAssets(DirectoryPath: string,bRecursive: boolean,bIncludeFolder: boolean): string[];
	static ListAssetByTagValue(TagName: string,TagValue: string): string[];
	static GetTagValues(AssetPath: string): any;
	static GetPathNameForLoadedAsset(LoadedAsset: UObject): string;
	static GetMetadataTagValues(UObject: UObject): any;
	static GetMetadataTag(UObject: UObject,Tag: string): string;
	static FindPackageReferencersForAsset(AssetPath: string,bLoadAssetsToConfirm: boolean): string[];
	static FindAssetData(AssetPath: string): AssetData;
	static DuplicateLoadedAsset(SourceAsset: UObject,DestinationAssetPath: string): UObject;
	static DuplicateDirectory(SourceDirectoryPath: string,DestinationDirectoryPath: string): boolean;
	static DuplicateAsset(SourceAssetPath: string,DestinationAssetPath: string): UObject;
	static DoesDirectoryHaveAssets(DirectoryPath: string,bRecursive: boolean): boolean;
	static DoesDirectoryExist(DirectoryPath: string): boolean;
	static DoesAssetExist(AssetPath: string): boolean;
	static DoAssetsExist(AssetPaths: string[]): boolean;
	static DeleteLoadedAssets(AssetsToDelete: UObject[]): boolean;
	static DeleteLoadedAsset(AssetToDelete: UObject): boolean;
	static DeleteDirectory(DirectoryPath: string): boolean;
	static DeleteAsset(AssetPathToDelete: string): boolean;
	static ConsolidateAssets(AssetToConsolidateTo: UObject,AssetsToConsolidate: UObject[]): boolean;
	static CheckoutLoadedAssets(AssetsToCheckout: UObject[]): boolean;
	static CheckoutLoadedAsset(AssetToCheckout: UObject): boolean;
	static CheckoutDirectory(DirectoryPath: string,bRecursive: boolean): boolean;
	static CheckoutAsset(AssetToCheckout: string): boolean;
	static C(Other: UObject | any): EditorAssetLibrary;
}

declare class EditorDialogLibraryObjectDetailsViewOptions { 
	bShowObjectName: boolean;
	bAllowSearch: boolean;
	clone() : EditorDialogLibraryObjectDetailsViewOptions;
	static C(Other: UObject | any): EditorDialogLibraryObjectDetailsViewOptions;
}

declare type EAppMsgType = 'Ok' | 'YesNo' | 'OkCancel' | 'YesNoCancel' | 'CancelRetryContinue' | 'YesNoYesAllNoAll' | 'YesNoYesAllNoAllCancel' | 'YesNoYesAll' | 'EAppMsgType_MAX';
declare var EAppMsgType : { Ok:'Ok',YesNo:'YesNo',OkCancel:'OkCancel',YesNoCancel:'YesNoCancel',CancelRetryContinue:'CancelRetryContinue',YesNoYesAllNoAll:'YesNoYesAllNoAll',YesNoYesAllNoAllCancel:'YesNoYesAllNoAllCancel',YesNoYesAll:'YesNoYesAll',EAppMsgType_MAX:'EAppMsgType_MAX', };
declare type EAppReturnType = 'No' | 'Yes' | 'YesAll' | 'NoAll' | 'Cancel' | 'Ok' | 'Retry' | 'Continue' | 'EAppReturnType_MAX';
declare var EAppReturnType : { No:'No',Yes:'Yes',YesAll:'YesAll',NoAll:'NoAll',Cancel:'Cancel',Ok:'Ok',Retry:'Retry',Continue:'Continue',EAppReturnType_MAX:'EAppReturnType_MAX', };
declare class EditorDialogLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): EditorDialogLibrary;
	static Find(Outer: UObject, ResourceName: string): EditorDialogLibrary;
	static GetDefaultObject(): EditorDialogLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorDialogLibrary;
	static ShowSuppressableWarningDialog(Title: string,Message: string,InIniSettingName: string,InIniSettingFileNameOverride: string,bDefaultValue: boolean): boolean;
	static ShowObjectsDetailsView(Title: string,InOutObjects: UObject[],Options: EditorDialogLibraryObjectDetailsViewOptions): boolean;
	static ShowObjectDetailsView(Title: string,InOutObject: UObject,Options: EditorDialogLibraryObjectDetailsViewOptions): boolean;
	static ShowMessage(Title: string,Message: string,MessageType: EAppMsgType,DefaultValue: EAppReturnType): EAppReturnType;
	static C(Other: UObject | any): EditorDialogLibrary;
}

declare type EEditorScriptingFilterType = 'Include' | 'Exclude' | 'EEditorScriptingFilterType_MAX';
declare var EEditorScriptingFilterType : { Include:'Include',Exclude:'Exclude',EEditorScriptingFilterType_MAX:'EEditorScriptingFilterType_MAX', };
declare type EEditorScriptingStringMatchType = 'Contains' | 'MatchesWildcard' | 'ExactMatch' | 'EEditorScriptingStringMatchType_MAX';
declare var EEditorScriptingStringMatchType : { Contains:'Contains',MatchesWildcard:'MatchesWildcard',ExactMatch:'ExactMatch',EEditorScriptingStringMatchType_MAX:'EEditorScriptingStringMatchType_MAX', };
declare class EditorFilterLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): EditorFilterLibrary;
	static Find(Outer: UObject, ResourceName: string): EditorFilterLibrary;
	static GetDefaultObject(): EditorFilterLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorFilterLibrary;
	static BySelection(TargetArray: Actor[],FilterType: EEditorScriptingFilterType): Actor[];
	static ByLevelName(TargetArray: Actor[],LevelName: string,FilterType: EEditorScriptingFilterType): Actor[];
	static ByLayer(TargetArray: Actor[],LayerName: string,FilterType: EEditorScriptingFilterType): Actor[];
	static ByIDName(TargetArray: UObject[],NameSubString: string,StringMatch: EEditorScriptingStringMatchType,FilterType: EEditorScriptingFilterType): UObject[];
	static ByClass(TargetArray: UObject[],ObjectClass: UnrealEngineClass,FilterType: EEditorScriptingFilterType): UObject[];
	static ByActorTag(TargetArray: Actor[],Tag: string,FilterType: EEditorScriptingFilterType): Actor[];
	static ByActorLabel(TargetArray: Actor[],NameSubString: string,StringMatch: EEditorScriptingStringMatchType,FilterType: EEditorScriptingFilterType,bIgnoreCase: boolean): Actor[];
	static C(Other: UObject | any): EditorFilterLibrary;
}

declare class EditorLevelLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): EditorLevelLibrary;
	static Find(Outer: UObject, ResourceName: string): EditorLevelLibrary;
	static GetDefaultObject(): EditorLevelLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorLevelLibrary;
	static SpawnActorFromObject(ObjectToUse: UObject,Location: Vector,Rotation: Rotator,bTransient: boolean): Actor;
	static SpawnActorFromClass(ActorClass: UnrealEngineClass,Location: Vector,Rotation: Rotator,bTransient: boolean): Actor;
	static SetSelectedLevelActors(ActorsToSelect: Actor[]): void;
	static SetLevelViewportCameraInfo(CameraLocation: Vector,CameraRotation: Rotator): void;
	static SetCurrentLevelByName(LevelName: string): boolean;
	static SetActorSelectionState(Actor: Actor,bShouldBeSelected: boolean): void;
	static SelectNothing(): void;
	static SaveCurrentLevel(): boolean;
	static SaveAllDirtyLevels(): boolean;
	static ReplaceSelectedActors(InAssetPath: string): void;
	static ReplaceMeshComponentsMeshesOnActors(Actors: Actor[],MeshToBeReplaced: StaticMesh,NewMesh: StaticMesh): void;
	static ReplaceMeshComponentsMeshes(MeshComponents: StaticMeshComponent[],MeshToBeReplaced: StaticMesh,NewMesh: StaticMesh): void;
	static ReplaceMeshComponentsMaterialsOnActors(Actors: Actor[],MaterialToBeReplaced: MaterialInterface,NewMaterial: MaterialInterface): void;
	static ReplaceMeshComponentsMaterials(MeshComponents: MeshComponent[],MaterialToBeReplaced: MaterialInterface,NewMaterial: MaterialInterface): void;
	static PilotLevelActor(ActorToPilot: Actor): void;
	static NewLevelFromTemplate(AssetPath: string,TemplateAssetPath: string): boolean;
	static NewLevel(AssetPath: string): boolean;
	static MergeStaticMeshActors(ActorsToMerge: StaticMeshActor[],MergeOptions: MergeStaticMeshActorsOptions,OutMergedActor?: StaticMeshActor): {OutMergedActor: StaticMeshActor, $: boolean};
	static LoadLevel(AssetPath: string): boolean;
	static JoinStaticMeshActors(ActorsToJoin: StaticMeshActor[],JoinOptions: JoinStaticMeshActorsOptions): Actor;
	static GetSelectedLevelActors(): Actor[];
	static GetPIEWorlds(bIncludeDedicatedServer: boolean): World[];
	static GetLevelViewportCameraInfo(CameraLocation?: Vector,CameraRotation?: Rotator): {CameraLocation: Vector, CameraRotation: Rotator, $: boolean};
	static GetGameWorld(): World;
	static GetEditorWorld(): World;
	static GetAllLevelActorsComponents(): ActorComponent[];
	static GetAllLevelActors(): Actor[];
	static GetActorReference(PathToActor: string): Actor;
	static EjectPilotLevelActor(): void;
	static EditorSetGameView(bGameView: boolean): void;
	static EditorPlaySimulate(): void;
	static EditorInvalidateViewports(): void;
	static EditorEndPlay(): void;
	static DestroyActor(ActorToDestroy: Actor): boolean;
	static CreateProxyMeshActor(ActorsToMerge: StaticMeshActor[],MergeOptions: CreateProxyMeshActorOptions,OutMergedActor?: StaticMeshActor): {OutMergedActor: StaticMeshActor, $: boolean};
	static ConvertActors(Actors: Actor[],ActorClass: UnrealEngineClass,StaticMeshPackagePath: string): Actor[];
	static ClearActorSelectionSet(): void;
	static C(Other: UObject | any): EditorLevelLibrary;
}

declare class EditorSkeletalMeshLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): EditorSkeletalMeshLibrary;
	static Find(Outer: UObject, ResourceName: string): EditorSkeletalMeshLibrary;
	static GetDefaultObject(): EditorSkeletalMeshLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorSkeletalMeshLibrary;
	static StripLODGeometry(SkeletalMesh: SkeletalMesh,LODIndex: number,TextureMask: Texture2D,Threshold: number): boolean;
	static SetLodBuildSettings(SkeletalMesh: SkeletalMesh,LODIndex: number,BuildOptions: SkeletalMeshBuildSettings): void;
	static RenameSocket(SkeletalMesh: SkeletalMesh,OldName: string,NewName: string): boolean;
	static RemoveLODs(SkeletalMesh: SkeletalMesh,ToRemoveLODs: number[]): boolean;
	static ReimportAllCustomLODs(SkeletalMesh: SkeletalMesh): boolean;
	static RegenerateLOD(SkeletalMesh: SkeletalMesh,NewLODCount: number,bRegenerateEvenIfImported: boolean,bGenerateBaseLOD: boolean): boolean;
	static ImportLOD(BaseMesh: SkeletalMesh,LODIndex: number,SourceFilename: string): number;
	static GetNumVerts(SkeletalMesh: SkeletalMesh,LODIndex: number): number;
	static GetLODCount(SkeletalMesh: SkeletalMesh): number;
	static GetLodBuildSettings(SkeletalMesh: SkeletalMesh,LODIndex: number,OutBuildOptions?: SkeletalMeshBuildSettings): {OutBuildOptions: SkeletalMeshBuildSettings};
	static CreatePhysicsAsset(SkeletalMesh: SkeletalMesh): PhysicsAsset;
	static C(Other: UObject | any): EditorSkeletalMeshLibrary;
}

declare class EditorStaticMeshLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): EditorStaticMeshLibrary;
	static Find(Outer: UObject, ResourceName: string): EditorStaticMeshLibrary;
	static GetDefaultObject(): EditorStaticMeshLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorStaticMeshLibrary;
	static SetLodsWithNotification(StaticMesh: StaticMesh,ReductionOptions: StaticMeshReductionOptions,bApplyChanges: boolean): number;
	static SetLods(StaticMesh: StaticMesh,ReductionOptions: StaticMeshReductionOptions): number;
	static SetLodReductionSettings(StaticMesh: StaticMesh,LODIndex: number,ReductionOptions: MeshReductionSettings): void;
	static SetLodFromStaticMesh(DestinationStaticMesh: StaticMesh,DestinationLodIndex: number,SourceStaticMesh: StaticMesh,SourceLodIndex: number,bReuseExistingMaterialSlots: boolean): number;
	static SetLodBuildSettings(StaticMesh: StaticMesh,LODIndex: number,BuildOptions: MeshBuildSettings): void;
	static SetGenerateLightmapUVs(StaticMesh: StaticMesh,bGenerateLightmapUVs: boolean): boolean;
	static SetConvexDecompositionCollisionsWithNotification(StaticMesh: StaticMesh,HullCount: number,MaxHullVerts: number,HullPrecision: number,bApplyChanges: boolean): boolean;
	static SetConvexDecompositionCollisions(StaticMesh: StaticMesh,HullCount: number,MaxHullVerts: number,HullPrecision: number): boolean;
	static SetAllowCPUAccess(StaticMesh: StaticMesh,bAllowCPUAccess: boolean): void;
	static RemoveUVChannel(StaticMesh: StaticMesh,LODIndex: number,UVChannelIndex: number): boolean;
	static RemoveLods(StaticMesh: StaticMesh): boolean;
	static RemoveCollisionsWithNotification(StaticMesh: StaticMesh,bApplyChanges: boolean): boolean;
	static RemoveCollisions(StaticMesh: StaticMesh): boolean;
	static ReimportAllCustomLODs(StaticMesh: StaticMesh): boolean;
	static IsSectionCollisionEnabled(StaticMesh: StaticMesh,LODIndex: number,SectionIndex: number): boolean;
	static InsertUVChannel(StaticMesh: StaticMesh,LODIndex: number,UVChannelIndex: number): boolean;
	static ImportLOD(BaseStaticMesh: StaticMesh,LODIndex: number,SourceFilename: string): number;
	static HasVertexColors(StaticMesh: StaticMesh): boolean;
	static HasInstanceVertexColors(StaticMeshComponent: StaticMeshComponent): boolean;
	static GetSimpleCollisionCount(StaticMesh: StaticMesh): number;
	static GetNumUVChannels(StaticMesh: StaticMesh,LODIndex: number): number;
	static GetNumberVerts(StaticMesh: StaticMesh,LODIndex: number): number;
	static GetNumberMaterials(StaticMesh: StaticMesh): number;
	static GetLodScreenSizes(StaticMesh: StaticMesh): number[];
	static GetLodReductionSettings(StaticMesh: StaticMesh,LODIndex: number,OutReductionOptions?: MeshReductionSettings): {OutReductionOptions: MeshReductionSettings};
	static GetLodCount(StaticMesh: StaticMesh): number;
	static GetLodBuildSettings(StaticMesh: StaticMesh,LODIndex: number,OutBuildOptions?: MeshBuildSettings): {OutBuildOptions: MeshBuildSettings};
	static GetConvexCollisionCount(StaticMesh: StaticMesh): number;
	static GetCollisionComplexity(StaticMesh: StaticMesh): ECollisionTraceFlag;
	static GeneratePlanarUVChannel(StaticMesh: StaticMesh,LODIndex: number,UVChannelIndex: number,position: Vector,Orientation: Rotator,Tiling: Vector2D): boolean;
	static GenerateCylindricalUVChannel(StaticMesh: StaticMesh,LODIndex: number,UVChannelIndex: number,position: Vector,Orientation: Rotator,Tiling: Vector2D): boolean;
	static GenerateBoxUVChannel(StaticMesh: StaticMesh,LODIndex: number,UVChannelIndex: number,position: Vector,Orientation: Rotator,Size: Vector): boolean;
	static EnableSectionCollision(StaticMesh: StaticMesh,bCollisionEnabled: boolean,LODIndex: number,SectionIndex: number): void;
	static EnableSectionCastShadow(StaticMesh: StaticMesh,bCastShadow: boolean,LODIndex: number,SectionIndex: number): void;
	static BulkSetConvexDecompositionCollisionsWithNotification(StaticMeshes: StaticMesh[],HullCount: number,MaxHullVerts: number,HullPrecision: number,bApplyChanges: boolean): boolean;
	static BulkSetConvexDecompositionCollisions(StaticMeshes: StaticMesh[],HullCount: number,MaxHullVerts: number,HullPrecision: number): boolean;
	static AddUVChannel(StaticMesh: StaticMesh,LODIndex: number): boolean;
	static AddSimpleCollisionsWithNotification(StaticMesh: StaticMesh,ShapeType: EScriptCollisionShapeType,bApplyChanges: boolean): number;
	static AddSimpleCollisions(StaticMesh: StaticMesh,ShapeType: EScriptCollisionShapeType): number;
	static C(Other: UObject | any): EditorStaticMeshLibrary;
}

declare class LevelVariantSetsActorFactory extends ActorFactory { 
	static Load(ResourceName: string): LevelVariantSetsActorFactory;
	static Find(Outer: UObject, ResourceName: string): LevelVariantSetsActorFactory;
	static GetDefaultObject(): LevelVariantSetsActorFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LevelVariantSetsActorFactory;
	static C(Other: UObject | any): LevelVariantSetsActorFactory;
}

declare class SwitchActorFactory extends ActorFactory { 
	static Load(ResourceName: string): SwitchActorFactory;
	static Find(Outer: UObject, ResourceName: string): SwitchActorFactory;
	static GetDefaultObject(): SwitchActorFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SwitchActorFactory;
	static C(Other: UObject | any): SwitchActorFactory;
}

declare class VariantManagerFactoryNew extends Factory { 
	static Load(ResourceName: string): VariantManagerFactoryNew;
	static Find(Outer: UObject, ResourceName: string): VariantManagerFactoryNew;
	static GetDefaultObject(): VariantManagerFactoryNew;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VariantManagerFactoryNew;
	static C(Other: UObject | any): VariantManagerFactoryNew;
}

declare type EVariantManagerTestEnum = 'None' | 'FirstOption' | 'SecondOption' | 'ThirdOption' | 'EVariantManagerTestEnum_MAX';
declare var EVariantManagerTestEnum : { None:'None',FirstOption:'FirstOption',SecondOption:'SecondOption',ThirdOption:'ThirdOption',EVariantManagerTestEnum_MAX:'EVariantManagerTestEnum_MAX', };
declare class VariantManagerTestActor extends Actor { 
	EnumWithNoDefault: EVariantManagerTestEnum;
	EnumWithSecondDefault: EVariantManagerTestEnum;
	CapturedByteProperty: number;
	CapturedIntProperty: number;
	CapturedFloatProperty: number;
	bCapturedBoolProperty: boolean;
	CapturedObjectProperty: UObject;
	CapturedInterfaceProperty: any;
	CapturedNameProperty: string;
	CapturedStrProperty: string;
	CapturedTextProperty: string;
	CapturedRotatorProperty: Rotator;
	CapturedColorProperty: Color;
	CapturedLinearColorProperty: LinearColor;
	CapturedVectorProperty: Vector;
	CapturedQuatProperty: Quat;
	CapturedVector4Property: Vector4;
	CapturedVector2DProperty: Vector2D;
	CapturedIntPointProperty: IntPoint;
	CapturedUObjectArrayProperty: UObject[];
	CapturedVectorArrayProperty: Vector[];
	static GetDefaultObject(): VariantManagerTestActor;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VariantManagerTestActor;
	static C(Other: UObject | any): VariantManagerTestActor;
}

declare class DynamicMeshGenerator extends UObject { 
	static Load(ResourceName: string): DynamicMeshGenerator;
	static Find(Outer: UObject, ResourceName: string): DynamicMeshGenerator;
	static GetDefaultObject(): DynamicMeshGenerator;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DynamicMeshGenerator;
	static C(Other: UObject | any): DynamicMeshGenerator;
}

declare class DynamicMesh extends UObject { 
	MeshModifiedBPEvent: UnrealEngineMulticastDelegate<(Mesh: DynamicMesh) => void>;
	MeshGenerator: DynamicMeshGenerator;
	bEnableMeshGenerator: boolean;
	static Load(ResourceName: string): DynamicMesh;
	static Find(Outer: UObject, ResourceName: string): DynamicMesh;
	static GetDefaultObject(): DynamicMesh;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DynamicMesh;
	ResetToCube(): DynamicMesh;
	Reset(): DynamicMesh;
	IsEmpty(): boolean;
	GetTriangleCount(): number;
	static C(Other: UObject | any): DynamicMesh;
}

declare class BaseDynamicMeshComponent extends MeshComponent { 
	bExplicitShowWireframe: boolean;
	bEnableViewModeOverrides: boolean;
	OverrideRenderMaterial: MaterialInterface;
	SecondaryRenderMaterial: MaterialInterface;
	bEnableRayTracing: boolean;
	BaseMaterials: MaterialInterface[];
	static Load(ResourceName: string): BaseDynamicMeshComponent;
	static Find(Outer: UObject, ResourceName: string): BaseDynamicMeshComponent;
	static GetDefaultObject(): BaseDynamicMeshComponent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BaseDynamicMeshComponent;
	SetViewModeOverridesEnabled(bEnabled: boolean): void;
	SetShadowsEnabled(bEnabled: boolean): void;
	SetSecondaryRenderMaterial(Material: MaterialInterface): void;
	SetSecondaryBuffersVisibility(bSetVisible: boolean): void;
	SetOverrideRenderMaterial(Material: MaterialInterface): void;
	SetEnableWireframeRenderPass(bEnable: boolean): void;
	SetEnableRaytracing(bSetEnabled: boolean): void;
	HasOverrideRenderMaterial(K: number): boolean;
	GetViewModeOverridesEnabled(): boolean;
	GetShadowsEnabled(): boolean;
	GetSecondaryRenderMaterial(): MaterialInterface;
	GetSecondaryBuffersVisibility(): boolean;
	GetOverrideRenderMaterial(MaterialIndex: number): MaterialInterface;
	GetEnableWireframeRenderPass(): boolean;
	GetEnableRaytracing(): boolean;
	GetDynamicMesh(): DynamicMesh;
	ClearSecondaryRenderMaterial(): void;
	ClearOverrideRenderMaterial(): void;
	static C(Other: UObject | any): BaseDynamicMeshComponent;
}

declare type EDynamicMeshComponentTangentsMode = 'NoTangents' | 'AutoCalculated' | 'ExternallyProvided' | 'EDynamicMeshComponentTangentsMode_MAX';
declare var EDynamicMeshComponentTangentsMode : { NoTangents:'NoTangents',AutoCalculated:'AutoCalculated',ExternallyProvided:'ExternallyProvided',EDynamicMeshComponentTangentsMode_MAX:'EDynamicMeshComponentTangentsMode_MAX', };
declare class DynamicMeshComponent extends BaseDynamicMeshComponent { 
	MeshObject: DynamicMesh;
	TangentsType: EDynamicMeshComponentTangentsMode;
	CollisionType: ECollisionTraceFlag;
	bEnableComplexCollision: boolean;
	bDeferCollisionUpdates: boolean;
	MeshBodySetup: BodySetup;
	static Load(ResourceName: string): DynamicMeshComponent;
	static Find(Outer: UObject, ResourceName: string): DynamicMeshComponent;
	static GetDefaultObject(): DynamicMeshComponent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DynamicMeshComponent;
	ValidateMaterialSlots(bCreateIfMissing: boolean,bDeleteExtraSlots: boolean): boolean;
	UpdateCollision(bOnlyIfPending: boolean): void;
	SetTangentsType(NewTangentsType: EDynamicMeshComponentTangentsMode): void;
	SetDynamicMesh(NewMesh: DynamicMesh): void;
	SetDeferredCollisionUpdatesEnabled(bEnabled: boolean,bImmediateUpdate: boolean): void;
	SetComplexAsSimpleCollisionEnabled(bEnabled: boolean,bImmediateUpdate: boolean): void;
	GetTangentsType(): EDynamicMeshComponentTangentsMode;
	EnableComplexAsSimpleCollision(): void;
	ConfigureMaterialSet(NewMaterialSet: MaterialInterface[]): void;
	static C(Other: UObject | any): DynamicMeshComponent;
}

declare class DynamicMeshPool extends UObject { 
	CachedMeshes: DynamicMesh[];
	AllCreatedMeshes: DynamicMesh[];
	static Load(ResourceName: string): DynamicMeshPool;
	static Find(Outer: UObject, ResourceName: string): DynamicMeshPool;
	static GetDefaultObject(): DynamicMeshPool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DynamicMeshPool;
	ReturnMesh(Mesh: DynamicMesh): void;
	ReturnAllMeshes(): void;
	RequestMesh(): DynamicMesh;
	FreeAllMeshes(): void;
	static C(Other: UObject | any): DynamicMeshPool;
}

declare class DynamicMeshActor extends Actor { 
	DynamicMeshComponent: DynamicMeshComponent;
	bEnableComputeMeshPool: boolean;
	DynamicMeshPool: DynamicMeshPool;
	static GetDefaultObject(): DynamicMeshActor;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DynamicMeshActor;
	ReleaseComputeMesh(Mesh: DynamicMesh): boolean;
	ReleaseAllComputeMeshes(): void;
	GetDynamicMeshComponent(): DynamicMeshComponent;
	GetComputeMeshPool(): DynamicMeshPool;
	FreeAllComputeMeshes(): void;
	AllocateComputeMesh(): DynamicMesh;
	static C(Other: UObject | any): DynamicMeshActor;
}

declare class MeshCommandChangeTarget extends Interface { 
	static Load(ResourceName: string): MeshCommandChangeTarget;
	static Find(Outer: UObject, ResourceName: string): MeshCommandChangeTarget;
	static GetDefaultObject(): MeshCommandChangeTarget;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshCommandChangeTarget;
	static C(Other: UObject | any): MeshCommandChangeTarget;
}

declare class MeshReplacementCommandChangeTarget extends Interface { 
	static Load(ResourceName: string): MeshReplacementCommandChangeTarget;
	static Find(Outer: UObject, ResourceName: string): MeshReplacementCommandChangeTarget;
	static GetDefaultObject(): MeshReplacementCommandChangeTarget;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshReplacementCommandChangeTarget;
	static C(Other: UObject | any): MeshReplacementCommandChangeTarget;
}

declare class MeshVertexCommandChangeTarget extends Interface { 
	static Load(ResourceName: string): MeshVertexCommandChangeTarget;
	static Find(Outer: UObject, ResourceName: string): MeshVertexCommandChangeTarget;
	static GetDefaultObject(): MeshVertexCommandChangeTarget;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshVertexCommandChangeTarget;
	static C(Other: UObject | any): MeshVertexCommandChangeTarget;
}

declare class MultiSelectionMeshEditingToolBuilder extends InteractiveToolWithToolTargetsBuilder { 
	static Load(ResourceName: string): MultiSelectionMeshEditingToolBuilder;
	static Find(Outer: UObject, ResourceName: string): MultiSelectionMeshEditingToolBuilder;
	static GetDefaultObject(): MultiSelectionMeshEditingToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MultiSelectionMeshEditingToolBuilder;
	static C(Other: UObject | any): MultiSelectionMeshEditingToolBuilder;
}

declare class BaseCreateFromSelectedToolBuilder extends MultiSelectionMeshEditingToolBuilder { 
	static Load(ResourceName: string): BaseCreateFromSelectedToolBuilder;
	static Find(Outer: UObject, ResourceName: string): BaseCreateFromSelectedToolBuilder;
	static GetDefaultObject(): BaseCreateFromSelectedToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BaseCreateFromSelectedToolBuilder;
	static C(Other: UObject | any): BaseCreateFromSelectedToolBuilder;
}

declare class OnAcceptHandleSourcesPropertiesBase extends InteractiveToolPropertySet { 
	static Load(ResourceName: string): OnAcceptHandleSourcesPropertiesBase;
	static Find(Outer: UObject, ResourceName: string): OnAcceptHandleSourcesPropertiesBase;
	static GetDefaultObject(): OnAcceptHandleSourcesPropertiesBase;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnAcceptHandleSourcesPropertiesBase;
	static C(Other: UObject | any): OnAcceptHandleSourcesPropertiesBase;
}

declare type EHandleSourcesMethod = 'DeleteSources' | 'HideSources' | 'KeepSources' | 'KeepFirstSource' | 'KeepLastSource' | 'EHandleSourcesMethod_MAX';
declare var EHandleSourcesMethod : { DeleteSources:'DeleteSources',HideSources:'HideSources',KeepSources:'KeepSources',KeepFirstSource:'KeepFirstSource',KeepLastSource:'KeepLastSource',EHandleSourcesMethod_MAX:'EHandleSourcesMethod_MAX', };
declare class OnAcceptHandleSourcesProperties extends OnAcceptHandleSourcesPropertiesBase { 
	HandleInputs: EHandleSourcesMethod;
	static Load(ResourceName: string): OnAcceptHandleSourcesProperties;
	static Find(Outer: UObject, ResourceName: string): OnAcceptHandleSourcesProperties;
	static GetDefaultObject(): OnAcceptHandleSourcesProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnAcceptHandleSourcesProperties;
	static C(Other: UObject | any): OnAcceptHandleSourcesProperties;
}

declare type EBaseCreateFromSelectedTargetType = 'NewObject' | 'FirstInputObject' | 'LastInputObject' | 'EBaseCreateFromSelectedTargetType_MAX';
declare var EBaseCreateFromSelectedTargetType : { NewObject:'NewObject',FirstInputObject:'FirstInputObject',LastInputObject:'LastInputObject',EBaseCreateFromSelectedTargetType_MAX:'EBaseCreateFromSelectedTargetType_MAX', };
declare class BaseCreateFromSelectedHandleSourceProperties extends OnAcceptHandleSourcesProperties { 
	OutputWriteTo: EBaseCreateFromSelectedTargetType;
	OutputNewName: string;
	OutputExistingName: string;
	static Load(ResourceName: string): BaseCreateFromSelectedHandleSourceProperties;
	static Find(Outer: UObject, ResourceName: string): BaseCreateFromSelectedHandleSourceProperties;
	static GetDefaultObject(): BaseCreateFromSelectedHandleSourceProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BaseCreateFromSelectedHandleSourceProperties;
	static C(Other: UObject | any): BaseCreateFromSelectedHandleSourceProperties;
}

declare class TransformInputsToolProperties extends InteractiveToolPropertySet { 
	bShowTransformGizmo: boolean;
	static Load(ResourceName: string): TransformInputsToolProperties;
	static Find(Outer: UObject, ResourceName: string): TransformInputsToolProperties;
	static GetDefaultObject(): TransformInputsToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TransformInputsToolProperties;
	static C(Other: UObject | any): TransformInputsToolProperties;
}

declare class MultiSelectionMeshEditingTool extends MultiSelectionTool { 
	TargetWorld: any;
	static Load(ResourceName: string): MultiSelectionMeshEditingTool;
	static Find(Outer: UObject, ResourceName: string): MultiSelectionMeshEditingTool;
	static GetDefaultObject(): MultiSelectionMeshEditingTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MultiSelectionMeshEditingTool;
	static C(Other: UObject | any): MultiSelectionMeshEditingTool;
}

declare type ECreateObjectTypeHint = 'Undefined' | 'StaticMesh' | 'Volume' | 'DynamicMeshActor' | 'ECreateObjectTypeHint_MAX';
declare var ECreateObjectTypeHint : { Undefined:'Undefined',StaticMesh:'StaticMesh',Volume:'Volume',DynamicMeshActor:'DynamicMeshActor',ECreateObjectTypeHint_MAX:'ECreateObjectTypeHint_MAX', };
declare class CreateMeshObjectTypeProperties extends InteractiveToolPropertySet { 
	OutputType: string;
	VolumeType: UnrealEngineClass;
	OutputTypeNamesList: string[];
	bShowVolumeList: boolean;
	static Load(ResourceName: string): CreateMeshObjectTypeProperties;
	static Find(Outer: UObject, ResourceName: string): CreateMeshObjectTypeProperties;
	static GetDefaultObject(): CreateMeshObjectTypeProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CreateMeshObjectTypeProperties;
	ShouldShowPropertySet(): boolean;
	GetOutputTypeNamesFunc(): string[];
	GetCurrentCreateMeshType(): ECreateObjectTypeHint;
	static C(Other: UObject | any): CreateMeshObjectTypeProperties;
}

declare class PreviewMesh extends UObject { 
	bBuildSpatialDataStructure: boolean;
	DynamicMeshComponent: DynamicMeshComponent;
	static Load(ResourceName: string): PreviewMesh;
	static Find(Outer: UObject, ResourceName: string): PreviewMesh;
	static GetDefaultObject(): PreviewMesh;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PreviewMesh;
	static C(Other: UObject | any): PreviewMesh;
}

declare class MeshOpPreviewWithBackgroundCompute extends UObject { 
	PreviewMesh: PreviewMesh;
	StandardMaterials: MaterialInterface[];
	OverrideMaterial: MaterialInterface;
	WorkingMaterial: MaterialInterface;
	SecondaryMaterial: MaterialInterface;
	PreviewWorld: any;
	static Load(ResourceName: string): MeshOpPreviewWithBackgroundCompute;
	static Find(Outer: UObject, ResourceName: string): MeshOpPreviewWithBackgroundCompute;
	static GetDefaultObject(): MeshOpPreviewWithBackgroundCompute;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshOpPreviewWithBackgroundCompute;
	static C(Other: UObject | any): MeshOpPreviewWithBackgroundCompute;
}

declare class BaseCreateFromSelectedTool extends MultiSelectionMeshEditingTool { 
	TransformProperties: TransformInputsToolProperties;
	OutputTypeProperties: CreateMeshObjectTypeProperties;
	HandleSourcesProperties: BaseCreateFromSelectedHandleSourceProperties;
	Preview: MeshOpPreviewWithBackgroundCompute;
	TransformProxies: TransformProxy[];
	TransformGizmos: CombinedTransformGizmo[];
	static Load(ResourceName: string): BaseCreateFromSelectedTool;
	static Find(Outer: UObject, ResourceName: string): BaseCreateFromSelectedTool;
	static GetDefaultObject(): BaseCreateFromSelectedTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BaseCreateFromSelectedTool;
	static C(Other: UObject | any): BaseCreateFromSelectedTool;
}

declare class BaseMeshProcessingToolBuilder extends InteractiveToolWithToolTargetsBuilder { 
	static Load(ResourceName: string): BaseMeshProcessingToolBuilder;
	static Find(Outer: UObject, ResourceName: string): BaseMeshProcessingToolBuilder;
	static GetDefaultObject(): BaseMeshProcessingToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BaseMeshProcessingToolBuilder;
	static C(Other: UObject | any): BaseMeshProcessingToolBuilder;
}

declare class BaseMeshProcessingTool extends SingleSelectionTool { 
	Preview: MeshOpPreviewWithBackgroundCompute;
	static Load(ResourceName: string): BaseMeshProcessingTool;
	static Find(Outer: UObject, ResourceName: string): BaseMeshProcessingTool;
	static GetDefaultObject(): BaseMeshProcessingTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BaseMeshProcessingTool;
	static C(Other: UObject | any): BaseMeshProcessingTool;
}

declare class VoxelProperties extends InteractiveToolPropertySet { 
	VoxelCount: number;
	bAutoSimplify: boolean;
	bRemoveInternalSurfaces: boolean;
	SimplifyMaxErrorFactor: any;
	CubeRootMinComponentVolume: any;
	static Load(ResourceName: string): VoxelProperties;
	static Find(Outer: UObject, ResourceName: string): VoxelProperties;
	static GetDefaultObject(): VoxelProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VoxelProperties;
	static C(Other: UObject | any): VoxelProperties;
}

declare class BaseVoxelTool extends BaseCreateFromSelectedTool { 
	VoxProperties: VoxelProperties;
	static Load(ResourceName: string): BaseVoxelTool;
	static Find(Outer: UObject, ResourceName: string): BaseVoxelTool;
	static GetDefaultObject(): BaseVoxelTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BaseVoxelTool;
	static C(Other: UObject | any): BaseVoxelTool;
}

declare class CollectSurfacePathMechanic extends InteractionMechanic { 
	static Load(ResourceName: string): CollectSurfacePathMechanic;
	static Find(Outer: UObject, ResourceName: string): CollectSurfacePathMechanic;
	static GetDefaultObject(): CollectSurfacePathMechanic;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CollectSurfacePathMechanic;
	static C(Other: UObject | any): CollectSurfacePathMechanic;
}

declare class ConstructionPlaneMechanic extends InteractionMechanic { 
	PlaneTransformGizmo: CombinedTransformGizmo;
	PlaneTransformProxy: TransformProxy;
	ClickToSetPlaneBehavior: SingleClickInputBehavior;
	static Load(ResourceName: string): ConstructionPlaneMechanic;
	static Find(Outer: UObject, ResourceName: string): ConstructionPlaneMechanic;
	static GetDefaultObject(): ConstructionPlaneMechanic;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ConstructionPlaneMechanic;
	static C(Other: UObject | any): ConstructionPlaneMechanic;
}

declare class PreviewGeometryActor extends InternalToolFrameworkActor { 
	static GetDefaultObject(): PreviewGeometryActor;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PreviewGeometryActor;
	static C(Other: UObject | any): PreviewGeometryActor;
}

declare class PointSetComponent extends MeshComponent { 
	PointMaterial: MaterialInterface;
	Bounds: BoxSphereBounds;
	bBoundsDirty: boolean;
	static Load(ResourceName: string): PointSetComponent;
	static Find(Outer: UObject, ResourceName: string): PointSetComponent;
	static GetDefaultObject(): PointSetComponent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PointSetComponent;
	static C(Other: UObject | any): PointSetComponent;
}

declare class LineSetComponent extends MeshComponent { 
	LineMaterial: MaterialInterface;
	Bounds: BoxSphereBounds;
	bBoundsDirty: boolean;
	static Load(ResourceName: string): LineSetComponent;
	static Find(Outer: UObject, ResourceName: string): LineSetComponent;
	static GetDefaultObject(): LineSetComponent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LineSetComponent;
	static C(Other: UObject | any): LineSetComponent;
}

declare class CurveControlPointsMechanic extends InteractionMechanic { 
	ClickBehavior: SingleClickInputBehavior;
	HoverBehavior: MouseHoverBehavior;
	PreviewGeometryActor: PreviewGeometryActor;
	DrawnControlPoints: PointSetComponent;
	DrawnControlSegments: LineSetComponent;
	PreviewPoint: PointSetComponent;
	PreviewSegment: LineSetComponent;
	PointTransformProxy: TransformProxy;
	PointTransformGizmo: CombinedTransformGizmo;
	static Load(ResourceName: string): CurveControlPointsMechanic;
	static Find(Outer: UObject, ResourceName: string): CurveControlPointsMechanic;
	static GetDefaultObject(): CurveControlPointsMechanic;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CurveControlPointsMechanic;
	static C(Other: UObject | any): CurveControlPointsMechanic;
}

declare class DragAlignmentMechanic extends InteractionMechanic { 
	static Load(ResourceName: string): DragAlignmentMechanic;
	static Find(Outer: UObject, ResourceName: string): DragAlignmentMechanic;
	static GetDefaultObject(): DragAlignmentMechanic;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DragAlignmentMechanic;
	static C(Other: UObject | any): DragAlignmentMechanic;
}

declare class DynamicMeshReplacementChangeTarget extends UObject { 
	static Load(ResourceName: string): DynamicMeshReplacementChangeTarget;
	static Find(Outer: UObject, ResourceName: string): DynamicMeshReplacementChangeTarget;
	static GetDefaultObject(): DynamicMeshReplacementChangeTarget;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DynamicMeshReplacementChangeTarget;
	static C(Other: UObject | any): DynamicMeshReplacementChangeTarget;
}

declare class DynamicMeshCommitter extends Interface { 
	static Load(ResourceName: string): DynamicMeshCommitter;
	static Find(Outer: UObject, ResourceName: string): DynamicMeshCommitter;
	static GetDefaultObject(): DynamicMeshCommitter;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DynamicMeshCommitter;
	static C(Other: UObject | any): DynamicMeshCommitter;
}

declare class DynamicMeshProvider extends Interface { 
	static Load(ResourceName: string): DynamicMeshProvider;
	static Find(Outer: UObject, ResourceName: string): DynamicMeshProvider;
	static GetDefaultObject(): DynamicMeshProvider;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DynamicMeshProvider;
	static C(Other: UObject | any): DynamicMeshProvider;
}

declare class PersistentDynamicMeshSource extends Interface { 
	static Load(ResourceName: string): PersistentDynamicMeshSource;
	static Find(Outer: UObject, ResourceName: string): PersistentDynamicMeshSource;
	static GetDefaultObject(): PersistentDynamicMeshSource;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PersistentDynamicMeshSource;
	static C(Other: UObject | any): PersistentDynamicMeshSource;
}

declare class InteractiveToolActivity extends InteractionMechanic { 
	static Load(ResourceName: string): InteractiveToolActivity;
	static Find(Outer: UObject, ResourceName: string): InteractiveToolActivity;
	static GetDefaultObject(): InteractiveToolActivity;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InteractiveToolActivity;
	static C(Other: UObject | any): InteractiveToolActivity;
}

declare class ToolActivityHost extends Interface { 
	static Load(ResourceName: string): ToolActivityHost;
	static Find(Outer: UObject, ResourceName: string): ToolActivityHost;
	static GetDefaultObject(): ToolActivityHost;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ToolActivityHost;
	static C(Other: UObject | any): ToolActivityHost;
}

declare class RectangleMarqueeMechanic extends InteractionMechanic { 
	bUseExternalClickDragBehavior: boolean;
	OnDragRectangleChangedDeferredThreshold: any;
	ClickDragBehavior: ClickDragInputBehavior;
	static Load(ResourceName: string): RectangleMarqueeMechanic;
	static Find(Outer: UObject, ResourceName: string): RectangleMarqueeMechanic;
	static GetDefaultObject(): RectangleMarqueeMechanic;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RectangleMarqueeMechanic;
	static C(Other: UObject | any): RectangleMarqueeMechanic;
}

declare class LatticeControlPointsMechanic extends InteractionMechanic { 
	PreviewGeometryActor: PreviewGeometryActor;
	DrawnControlPoints: PointSetComponent;
	DrawnLatticeEdges: LineSetComponent;
	PointTransformProxy: TransformProxy;
	PointTransformGizmo: CombinedTransformGizmo;
	MarqueeMechanic: RectangleMarqueeMechanic;
	static Load(ResourceName: string): LatticeControlPointsMechanic;
	static Find(Outer: UObject, ResourceName: string): LatticeControlPointsMechanic;
	static GetDefaultObject(): LatticeControlPointsMechanic;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LatticeControlPointsMechanic;
	static C(Other: UObject | any): LatticeControlPointsMechanic;
}

declare class MeshElementsVisualizerProperties extends InteractiveToolPropertySet { 
	bVisible: boolean;
	bShowWireframe: boolean;
	bShowBorders: boolean;
	bShowUVSeams: boolean;
	bShowNormalSeams: boolean;
	bShowColorSeams: boolean;
	ThicknessScale: number;
	WireframeColor: Color;
	BoundaryEdgeColor: Color;
	UVSeamColor: Color;
	NormalSeamColor: Color;
	ColorSeamColor: Color;
	DepthBias: number;
	bAdjustDepthBiasUsingMeshSize: boolean;
	static Load(ResourceName: string): MeshElementsVisualizerProperties;
	static Find(Outer: UObject, ResourceName: string): MeshElementsVisualizerProperties;
	static GetDefaultObject(): MeshElementsVisualizerProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshElementsVisualizerProperties;
	static C(Other: UObject | any): MeshElementsVisualizerProperties;
}

declare class PreviewGeometry extends UObject { 
	ParentActor: PreviewGeometryActor;
	LineSets: any;
	PointSets: any;
	static Load(ResourceName: string): PreviewGeometry;
	static Find(Outer: UObject, ResourceName: string): PreviewGeometry;
	static GetDefaultObject(): PreviewGeometry;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PreviewGeometry;
	SetPointSetVisibility(PointSetIdentifier: string,bVisible: boolean): boolean;
	SetPointSetMaterial(PointSetIdentifier: string,NewMaterial: MaterialInterface): boolean;
	SetLineSetVisibility(LineSetIdentifier: string,bVisible: boolean): boolean;
	SetLineSetMaterial(LineSetIdentifier: string,NewMaterial: MaterialInterface): boolean;
	SetAllPointSetsMaterial(Material: MaterialInterface): void;
	SetAllLineSetsMaterial(Material: MaterialInterface): void;
	RemovePointSet(PointSetIdentifier: string,bDestroy: boolean): boolean;
	RemoveLineSet(LineSetIdentifier: string,bDestroy: boolean): boolean;
	RemoveAllPointSets(bDestroy: boolean): void;
	RemoveAllLineSets(bDestroy: boolean): void;
	GetActor(): PreviewGeometryActor;
	FindPointSet(PointSetIdentifier: string): PointSetComponent;
	FindLineSet(LineSetIdentifier: string): LineSetComponent;
	Disconnect(): void;
	CreateInWorld(World: World,WithTransform: Transform): void;
	AddPointSet(PointSetIdentifier: string): PointSetComponent;
	AddLineSet(LineSetIdentifier: string): LineSetComponent;
	static C(Other: UObject | any): PreviewGeometry;
}

declare class MeshWireframeComponent extends MeshComponent { 
	LineDepthBias: number;
	LineDepthBiasSizeScale: number;
	ThicknessScale: number;
	bEnableWireframe: boolean;
	WireframeColor: Color;
	WireframeThickness: number;
	bEnableBoundaryEdges: boolean;
	BoundaryEdgeColor: Color;
	BoundaryEdgeThickness: number;
	bEnableUVSeams: boolean;
	UVSeamColor: Color;
	UVSeamThickness: number;
	bEnableNormalSeams: boolean;
	NormalSeamColor: Color;
	NormalSeamThickness: number;
	bEnableColorSeams: boolean;
	ColorSeamColor: Color;
	ColorSeamThickness: number;
	LineMaterial: MaterialInterface;
	LocalBounds: BoxSphereBounds;
	static Load(ResourceName: string): MeshWireframeComponent;
	static Find(Outer: UObject, ResourceName: string): MeshWireframeComponent;
	static GetDefaultObject(): MeshWireframeComponent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshWireframeComponent;
	static C(Other: UObject | any): MeshWireframeComponent;
}

declare class MeshElementsVisualizer extends PreviewGeometry { 
	Settings: MeshElementsVisualizerProperties;
	WireframeComponent: MeshWireframeComponent;
	static Load(ResourceName: string): MeshElementsVisualizer;
	static Find(Outer: UObject, ResourceName: string): MeshElementsVisualizer;
	static GetDefaultObject(): MeshElementsVisualizer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshElementsVisualizer;
	static C(Other: UObject | any): MeshElementsVisualizer;
}

declare class MeshSurfacePointMeshEditingToolBuilder extends MeshSurfacePointToolBuilder { 
	static Load(ResourceName: string): MeshSurfacePointMeshEditingToolBuilder;
	static Find(Outer: UObject, ResourceName: string): MeshSurfacePointMeshEditingToolBuilder;
	static GetDefaultObject(): MeshSurfacePointMeshEditingToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshSurfacePointMeshEditingToolBuilder;
	static C(Other: UObject | any): MeshSurfacePointMeshEditingToolBuilder;
}

declare class ModelingComponentsSettings extends DeveloperSettings { 
	bEnableRayTracingWhileEditing: boolean;
	bEnableRayTracing: boolean;
	bEnableCollision: boolean;
	CollisionMode: ECollisionTraceFlag;
	static Load(ResourceName: string): ModelingComponentsSettings;
	static Find(Outer: UObject, ResourceName: string): ModelingComponentsSettings;
	static GetDefaultObject(): ModelingComponentsSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ModelingComponentsSettings;
	static C(Other: UObject | any): ModelingComponentsSettings;
}

declare class CreateTextureObjectParams { 
	TypeHintExtended: number;
	TargetWorld: World;
	StoreRelativeToObject: UObject;
	BaseName: string;
	GeneratedTransientTexture: Texture2D;
	clone() : CreateTextureObjectParams;
	static C(Other: UObject | any): CreateTextureObjectParams;
}

declare type ECreateModelingObjectResult = 'Ok' | 'Cancelled' | 'Failed_Unknown' | 'Failed_NoAPIFound' | 'Failed_InvalidWorld' | 'Failed_InvalidMesh' | 'Failed_InvalidTexture' | 'Failed_AssetCreationFailed' | 'ECreateModelingObjectResult_MAX';
declare var ECreateModelingObjectResult : { Ok:'Ok',Cancelled:'Cancelled',Failed_Unknown:'Failed_Unknown',Failed_NoAPIFound:'Failed_NoAPIFound',Failed_InvalidWorld:'Failed_InvalidWorld',Failed_InvalidMesh:'Failed_InvalidMesh',Failed_InvalidTexture:'Failed_InvalidTexture',Failed_AssetCreationFailed:'Failed_AssetCreationFailed',ECreateModelingObjectResult_MAX:'ECreateModelingObjectResult_MAX', };
declare class CreateTextureObjectResult { 
	ResultCode: ECreateModelingObjectResult;
	NewAsset: UObject;
	clone() : CreateTextureObjectResult;
	static C(Other: UObject | any): CreateTextureObjectResult;
}

declare class CreateMeshObjectParams { 
	SourceComponent: PrimitiveComponent;
	TypeHint: ECreateObjectTypeHint;
	TypeHintClass: UnrealEngineClass;
	TypeHintExtended: number;
	TargetWorld: World;
	Transform: Transform;
	BaseName: string;
	Materials: MaterialInterface[];
	AssetMaterials: MaterialInterface[];
	bEnableCollision: boolean;
	CollisionMode: ECollisionTraceFlag;
	bEnableRaytracingSupport: boolean;
	bEnableRecomputeNormals: boolean;
	bEnableRecomputeTangents: boolean;
	bEnableNanite: boolean;
	NaniteProxyTrianglePercent: number;
	clone() : CreateMeshObjectParams;
	static C(Other: UObject | any): CreateMeshObjectParams;
}

declare class CreateMeshObjectResult { 
	ResultCode: ECreateModelingObjectResult;
	NewActor: Actor;
	NewComponent: PrimitiveComponent;
	NewAsset: UObject;
	clone() : CreateMeshObjectResult;
	static C(Other: UObject | any): CreateMeshObjectResult;
}

declare class ModelingObjectsCreationAPI extends UObject { 
	static Load(ResourceName: string): ModelingObjectsCreationAPI;
	static Find(Outer: UObject, ResourceName: string): ModelingObjectsCreationAPI;
	static GetDefaultObject(): ModelingObjectsCreationAPI;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ModelingObjectsCreationAPI;
	CreateTextureObject(CreateTexParams: CreateTextureObjectParams): CreateTextureObjectResult;
	CreateMeshObject(CreateMeshParams: CreateMeshObjectParams): CreateMeshObjectResult;
	static C(Other: UObject | any): ModelingObjectsCreationAPI;
}

declare class ModelingSceneSnappingManager extends SceneSnappingManager { 
	ParentContext: InteractiveToolsContext;
	static Load(ResourceName: string): ModelingSceneSnappingManager;
	static Find(Outer: UObject, ResourceName: string): ModelingSceneSnappingManager;
	static GetDefaultObject(): ModelingSceneSnappingManager;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ModelingSceneSnappingManager;
	static C(Other: UObject | any): ModelingSceneSnappingManager;
}

declare class MultiTransformer extends UObject { 
	GizmoManager: InteractiveGizmoManager;
	TransformGizmo: CombinedTransformGizmo;
	TransformProxy: TransformProxy;
	DragAlignmentMechanic: DragAlignmentMechanic;
	static Load(ResourceName: string): MultiTransformer;
	static Find(Outer: UObject, ResourceName: string): MultiTransformer;
	static GetDefaultObject(): MultiTransformer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MultiTransformer;
	static C(Other: UObject | any): MultiTransformer;
}

declare class OctreeDynamicMeshComponent extends BaseDynamicMeshComponent { 
	MeshObject: DynamicMesh;
	static Load(ResourceName: string): OctreeDynamicMeshComponent;
	static Find(Outer: UObject, ResourceName: string): OctreeDynamicMeshComponent;
	static GetDefaultObject(): OctreeDynamicMeshComponent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OctreeDynamicMeshComponent;
	SetDynamicMesh(NewMesh: DynamicMesh): void;
	static C(Other: UObject | any): OctreeDynamicMeshComponent;
}

declare class OnAcceptHandleSourcesPropertiesSingle extends OnAcceptHandleSourcesPropertiesBase { 
	HandleInputs: EHandleSourcesMethod;
	static Load(ResourceName: string): OnAcceptHandleSourcesPropertiesSingle;
	static Find(Outer: UObject, ResourceName: string): OnAcceptHandleSourcesPropertiesSingle;
	static GetDefaultObject(): OnAcceptHandleSourcesPropertiesSingle;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnAcceptHandleSourcesPropertiesSingle;
	static C(Other: UObject | any): OnAcceptHandleSourcesPropertiesSingle;
}

declare class PersistentMeshSelection extends UObject { 
	static Load(ResourceName: string): PersistentMeshSelection;
	static Find(Outer: UObject, ResourceName: string): PersistentMeshSelection;
	static GetDefaultObject(): PersistentMeshSelection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PersistentMeshSelection;
	static C(Other: UObject | any): PersistentMeshSelection;
}

declare class PersistentMeshSelectionManager extends UObject { 
	ParentContext: InteractiveToolsContext;
	ActiveSelection: PersistentMeshSelection;
	SelectionDisplay: PreviewGeometry;
	static Load(ResourceName: string): PersistentMeshSelectionManager;
	static Find(Outer: UObject, ResourceName: string): PersistentMeshSelectionManager;
	static GetDefaultObject(): PersistentMeshSelectionManager;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PersistentMeshSelectionManager;
	static C(Other: UObject | any): PersistentMeshSelectionManager;
}

declare class PlaneDistanceFromHitMechanic extends InteractionMechanic { 
	static Load(ResourceName: string): PlaneDistanceFromHitMechanic;
	static Find(Outer: UObject, ResourceName: string): PlaneDistanceFromHitMechanic;
	static GetDefaultObject(): PlaneDistanceFromHitMechanic;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PlaneDistanceFromHitMechanic;
	static C(Other: UObject | any): PlaneDistanceFromHitMechanic;
}

declare class PolyEditPreviewMesh extends PreviewMesh { 
	static Load(ResourceName: string): PolyEditPreviewMesh;
	static Find(Outer: UObject, ResourceName: string): PolyEditPreviewMesh;
	static GetDefaultObject(): PolyEditPreviewMesh;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PolyEditPreviewMesh;
	static C(Other: UObject | any): PolyEditPreviewMesh;
}

declare class PolygonSelectionMechanicProperties extends InteractiveToolPropertySet { 
	bSelectVertices: boolean;
	bSelectEdges: boolean;
	bSelectFaces: boolean;
	bSelectEdgeLoops: boolean;
	bSelectEdgeRings: boolean;
	bHitBackFaces: boolean;
	bEnableMarquee: boolean;
	bMarqueeIgnoreOcclusion: boolean;
	bPreferProjectedElement: boolean;
	bSelectDownRay: boolean;
	bIgnoreOcclusion: boolean;
	static Load(ResourceName: string): PolygonSelectionMechanicProperties;
	static Find(Outer: UObject, ResourceName: string): PolygonSelectionMechanicProperties;
	static GetDefaultObject(): PolygonSelectionMechanicProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PolygonSelectionMechanicProperties;
	static C(Other: UObject | any): PolygonSelectionMechanicProperties;
}

declare class TriangleSetComponent extends MeshComponent { 
	Bounds: BoxSphereBounds;
	bBoundsDirty: boolean;
	static Load(ResourceName: string): TriangleSetComponent;
	static Find(Outer: UObject, ResourceName: string): TriangleSetComponent;
	static GetDefaultObject(): TriangleSetComponent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TriangleSetComponent;
	static C(Other: UObject | any): TriangleSetComponent;
}

declare class PolygonSelectionMechanic extends InteractionMechanic { 
	Properties: PolygonSelectionMechanicProperties;
	HoverBehavior: MouseHoverBehavior;
	ClickOrDragBehavior: SingleClickOrDragInputBehavior;
	MarqueeMechanic: RectangleMarqueeMechanic;
	PreviewGeometryActor: PreviewGeometryActor;
	DrawnTriangleSetComponent: TriangleSetComponent;
	HighlightedFaceMaterial: MaterialInterface;
	static Load(ResourceName: string): PolygonSelectionMechanic;
	static Find(Outer: UObject, ResourceName: string): PolygonSelectionMechanic;
	static GetDefaultObject(): PolygonSelectionMechanic;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PolygonSelectionMechanic;
	static C(Other: UObject | any): PolygonSelectionMechanic;
}

declare class PolygroupLayersProperties extends InteractiveToolPropertySet { 
	ActiveGroupLayer: string;
	GroupLayersList: string[];
	static Load(ResourceName: string): PolygroupLayersProperties;
	static Find(Outer: UObject, ResourceName: string): PolygroupLayersProperties;
	static GetDefaultObject(): PolygroupLayersProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PolygroupLayersProperties;
	GetGroupLayersFunc(): string[];
	static C(Other: UObject | any): PolygroupLayersProperties;
}

declare class PolyLassoMarqueeMechanic extends InteractionMechanic { 
	SpacingTolerance: number;
	LineThickness: number;
	LineColor: LinearColor;
	ClosedColor: LinearColor;
	bEnableFreehandPolygons: boolean;
	bEnableMultiClickPolygons: boolean;
	ClickDragBehavior: ClickDragInputBehavior;
	HoverBehavior: MouseHoverBehavior;
	static Load(ResourceName: string): PolyLassoMarqueeMechanic;
	static Find(Outer: UObject, ResourceName: string): PolyLassoMarqueeMechanic;
	static GetDefaultObject(): PolyLassoMarqueeMechanic;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PolyLassoMarqueeMechanic;
	static C(Other: UObject | any): PolyLassoMarqueeMechanic;
}

declare class PreviewMeshActor extends InternalToolFrameworkActor { 
	static GetDefaultObject(): PreviewMeshActor;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PreviewMeshActor;
	static C(Other: UObject | any): PreviewMeshActor;
}

declare class SingleSelectionMeshEditingToolBuilder extends InteractiveToolWithToolTargetsBuilder { 
	static Load(ResourceName: string): SingleSelectionMeshEditingToolBuilder;
	static Find(Outer: UObject, ResourceName: string): SingleSelectionMeshEditingToolBuilder;
	static GetDefaultObject(): SingleSelectionMeshEditingToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SingleSelectionMeshEditingToolBuilder;
	static C(Other: UObject | any): SingleSelectionMeshEditingToolBuilder;
}

declare class SingleSelectionMeshEditingTool extends SingleSelectionTool { 
	TargetWorld: any;
	InputSelection: PersistentMeshSelection;
	static Load(ResourceName: string): SingleSelectionMeshEditingTool;
	static Find(Outer: UObject, ResourceName: string): SingleSelectionMeshEditingTool;
	static GetDefaultObject(): SingleSelectionMeshEditingTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SingleSelectionMeshEditingTool;
	static C(Other: UObject | any): SingleSelectionMeshEditingTool;
}

declare type ESpaceCurveControlPointTransformMode = 'Shared' | 'PerVertex' | 'ESpaceCurveControlPointTransformMode_MAX';
declare var ESpaceCurveControlPointTransformMode : { Shared:'Shared',PerVertex:'PerVertex',ESpaceCurveControlPointTransformMode_MAX:'ESpaceCurveControlPointTransformMode_MAX', };
declare type ESpaceCurveControlPointOriginMode = 'Shared' | 'First' | 'Last' | 'ESpaceCurveControlPointOriginMode_MAX';
declare var ESpaceCurveControlPointOriginMode : { Shared:'Shared',First:'First',Last:'Last',ESpaceCurveControlPointOriginMode_MAX:'ESpaceCurveControlPointOriginMode_MAX', };
declare type ESpaceCurveControlPointFalloffType = 'Linear' | 'Smooth' | 'ESpaceCurveControlPointFalloffType_MAX';
declare var ESpaceCurveControlPointFalloffType : { Linear:'Linear',Smooth:'Smooth',ESpaceCurveControlPointFalloffType_MAX:'ESpaceCurveControlPointFalloffType_MAX', };
declare class SpaceCurveDeformationMechanicPropertySet extends InteractiveToolPropertySet { 
	TransformMode: ESpaceCurveControlPointTransformMode;
	TransformOrigin: ESpaceCurveControlPointOriginMode;
	Softness: number;
	SoftFalloff: ESpaceCurveControlPointFalloffType;
	static Load(ResourceName: string): SpaceCurveDeformationMechanicPropertySet;
	static Find(Outer: UObject, ResourceName: string): SpaceCurveDeformationMechanicPropertySet;
	static GetDefaultObject(): SpaceCurveDeformationMechanicPropertySet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SpaceCurveDeformationMechanicPropertySet;
	static C(Other: UObject | any): SpaceCurveDeformationMechanicPropertySet;
}

declare class SpaceCurveDeformationMechanic extends InteractionMechanic { 
	ClickBehavior: SingleClickInputBehavior;
	HoverBehavior: MouseHoverBehavior;
	TransformProperties: SpaceCurveDeformationMechanicPropertySet;
	PreviewGeometryActor: PreviewGeometryActor;
	RenderPoints: PointSetComponent;
	RenderSegments: LineSetComponent;
	PointTransformProxy: TransformProxy;
	PointTransformGizmo: CombinedTransformGizmo;
	static Load(ResourceName: string): SpaceCurveDeformationMechanic;
	static Find(Outer: UObject, ResourceName: string): SpaceCurveDeformationMechanic;
	static GetDefaultObject(): SpaceCurveDeformationMechanic;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SpaceCurveDeformationMechanic;
	static C(Other: UObject | any): SpaceCurveDeformationMechanic;
}

declare class SpatialCurveDistanceMechanic extends InteractionMechanic { 
	static Load(ResourceName: string): SpatialCurveDistanceMechanic;
	static Find(Outer: UObject, ResourceName: string): SpatialCurveDistanceMechanic;
	static GetDefaultObject(): SpatialCurveDistanceMechanic;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SpatialCurveDistanceMechanic;
	static C(Other: UObject | any): SpatialCurveDistanceMechanic;
}

declare type EUVLayoutPreviewSide = 'Left' | 'Right' | 'EUVLayoutPreviewSide_MAX';
declare var EUVLayoutPreviewSide : { Left:'Left',Right:'Right',EUVLayoutPreviewSide_MAX:'EUVLayoutPreviewSide_MAX', };
declare class UVLayoutPreviewProperties extends InteractiveToolPropertySet { 
	bEnabled: boolean;
	Side: EUVLayoutPreviewSide;
	Scale: number;
	Offset: Vector2D;
	bShowWireframe: boolean;
	static Load(ResourceName: string): UVLayoutPreviewProperties;
	static Find(Outer: UObject, ResourceName: string): UVLayoutPreviewProperties;
	static GetDefaultObject(): UVLayoutPreviewProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): UVLayoutPreviewProperties;
	static C(Other: UObject | any): UVLayoutPreviewProperties;
}

declare class UVLayoutPreview extends UObject { 
	Settings: UVLayoutPreviewProperties;
	PreviewMesh: PreviewMesh;
	TriangleComponent: TriangleSetComponent;
	bShowBackingRectangle: boolean;
	BackingRectangleMaterial: MaterialInterface;
	static Load(ResourceName: string): UVLayoutPreview;
	static Find(Outer: UObject, ResourceName: string): UVLayoutPreview;
	static GetDefaultObject(): UVLayoutPreview;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): UVLayoutPreview;
	static C(Other: UObject | any): UVLayoutPreview;
}

declare class WeightMapSetProperties extends InteractiveToolPropertySet { 
	WeightMap: string;
	WeightMapsList: string[];
	bInvertWeightMap: boolean;
	static Load(ResourceName: string): WeightMapSetProperties;
	static Find(Outer: UObject, ResourceName: string): WeightMapSetProperties;
	static GetDefaultObject(): WeightMapSetProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WeightMapSetProperties;
	GetWeightMapsFunc(): string[];
	static C(Other: UObject | any): WeightMapSetProperties;
}

declare class DynamicMeshComponentToolTarget extends PrimitiveComponentToolTarget { 
	static Load(ResourceName: string): DynamicMeshComponentToolTarget;
	static Find(Outer: UObject, ResourceName: string): DynamicMeshComponentToolTarget;
	static GetDefaultObject(): DynamicMeshComponentToolTarget;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DynamicMeshComponentToolTarget;
	static C(Other: UObject | any): DynamicMeshComponentToolTarget;
}

declare class DynamicMeshComponentToolTargetFactory extends ToolTargetFactory { 
	static Load(ResourceName: string): DynamicMeshComponentToolTargetFactory;
	static Find(Outer: UObject, ResourceName: string): DynamicMeshComponentToolTargetFactory;
	static GetDefaultObject(): DynamicMeshComponentToolTargetFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DynamicMeshComponentToolTargetFactory;
	static C(Other: UObject | any): DynamicMeshComponentToolTargetFactory;
}

declare class EditorModelingObjectsCreationAPI extends ModelingObjectsCreationAPI { 
	static Load(ResourceName: string): EditorModelingObjectsCreationAPI;
	static Find(Outer: UObject, ResourceName: string): EditorModelingObjectsCreationAPI;
	static GetDefaultObject(): EditorModelingObjectsCreationAPI;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditorModelingObjectsCreationAPI;
	static C(Other: UObject | any): EditorModelingObjectsCreationAPI;
}

declare class SkeletalMeshComponentReadOnlyToolTarget extends PrimitiveComponentToolTarget { 
	static Load(ResourceName: string): SkeletalMeshComponentReadOnlyToolTarget;
	static Find(Outer: UObject, ResourceName: string): SkeletalMeshComponentReadOnlyToolTarget;
	static GetDefaultObject(): SkeletalMeshComponentReadOnlyToolTarget;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SkeletalMeshComponentReadOnlyToolTarget;
	static C(Other: UObject | any): SkeletalMeshComponentReadOnlyToolTarget;
}

declare class SkeletalMeshComponentToolTarget extends SkeletalMeshComponentReadOnlyToolTarget { 
	static Load(ResourceName: string): SkeletalMeshComponentToolTarget;
	static Find(Outer: UObject, ResourceName: string): SkeletalMeshComponentToolTarget;
	static GetDefaultObject(): SkeletalMeshComponentToolTarget;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SkeletalMeshComponentToolTarget;
	static C(Other: UObject | any): SkeletalMeshComponentToolTarget;
}

declare class SkeletalMeshComponentReadOnlyToolTargetFactory extends ToolTargetFactory { 
	static Load(ResourceName: string): SkeletalMeshComponentReadOnlyToolTargetFactory;
	static Find(Outer: UObject, ResourceName: string): SkeletalMeshComponentReadOnlyToolTargetFactory;
	static GetDefaultObject(): SkeletalMeshComponentReadOnlyToolTargetFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SkeletalMeshComponentReadOnlyToolTargetFactory;
	static C(Other: UObject | any): SkeletalMeshComponentReadOnlyToolTargetFactory;
}

declare class SkeletalMeshComponentToolTargetFactory extends ToolTargetFactory { 
	static Load(ResourceName: string): SkeletalMeshComponentToolTargetFactory;
	static Find(Outer: UObject, ResourceName: string): SkeletalMeshComponentToolTargetFactory;
	static GetDefaultObject(): SkeletalMeshComponentToolTargetFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SkeletalMeshComponentToolTargetFactory;
	static C(Other: UObject | any): SkeletalMeshComponentToolTargetFactory;
}

declare class SkeletalMeshReadOnlyToolTarget extends ToolTarget { 
	static Load(ResourceName: string): SkeletalMeshReadOnlyToolTarget;
	static Find(Outer: UObject, ResourceName: string): SkeletalMeshReadOnlyToolTarget;
	static GetDefaultObject(): SkeletalMeshReadOnlyToolTarget;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SkeletalMeshReadOnlyToolTarget;
	static C(Other: UObject | any): SkeletalMeshReadOnlyToolTarget;
}

declare class SkeletalMeshToolTarget extends SkeletalMeshReadOnlyToolTarget { 
	static Load(ResourceName: string): SkeletalMeshToolTarget;
	static Find(Outer: UObject, ResourceName: string): SkeletalMeshToolTarget;
	static GetDefaultObject(): SkeletalMeshToolTarget;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SkeletalMeshToolTarget;
	static C(Other: UObject | any): SkeletalMeshToolTarget;
}

declare class SkeletalMeshReadOnlyToolTargetFactory extends ToolTargetFactory { 
	static Load(ResourceName: string): SkeletalMeshReadOnlyToolTargetFactory;
	static Find(Outer: UObject, ResourceName: string): SkeletalMeshReadOnlyToolTargetFactory;
	static GetDefaultObject(): SkeletalMeshReadOnlyToolTargetFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SkeletalMeshReadOnlyToolTargetFactory;
	static C(Other: UObject | any): SkeletalMeshReadOnlyToolTargetFactory;
}

declare class SkeletalMeshToolTargetFactory extends ToolTargetFactory { 
	static Load(ResourceName: string): SkeletalMeshToolTargetFactory;
	static Find(Outer: UObject, ResourceName: string): SkeletalMeshToolTargetFactory;
	static GetDefaultObject(): SkeletalMeshToolTargetFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SkeletalMeshToolTargetFactory;
	static C(Other: UObject | any): SkeletalMeshToolTargetFactory;
}

declare class StaticMeshComponentToolTarget extends PrimitiveComponentToolTarget { 
	static Load(ResourceName: string): StaticMeshComponentToolTarget;
	static Find(Outer: UObject, ResourceName: string): StaticMeshComponentToolTarget;
	static GetDefaultObject(): StaticMeshComponentToolTarget;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): StaticMeshComponentToolTarget;
	static C(Other: UObject | any): StaticMeshComponentToolTarget;
}

declare class StaticMeshComponentToolTargetFactory extends ToolTargetFactory { 
	static Load(ResourceName: string): StaticMeshComponentToolTargetFactory;
	static Find(Outer: UObject, ResourceName: string): StaticMeshComponentToolTargetFactory;
	static GetDefaultObject(): StaticMeshComponentToolTargetFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): StaticMeshComponentToolTargetFactory;
	static C(Other: UObject | any): StaticMeshComponentToolTargetFactory;
}

declare class StaticMeshToolTarget extends ToolTarget { 
	static Load(ResourceName: string): StaticMeshToolTarget;
	static Find(Outer: UObject, ResourceName: string): StaticMeshToolTarget;
	static GetDefaultObject(): StaticMeshToolTarget;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): StaticMeshToolTarget;
	static C(Other: UObject | any): StaticMeshToolTarget;
}

declare class StaticMeshToolTargetFactory extends ToolTargetFactory { 
	static Load(ResourceName: string): StaticMeshToolTargetFactory;
	static Find(Outer: UObject, ResourceName: string): StaticMeshToolTargetFactory;
	static GetDefaultObject(): StaticMeshToolTargetFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): StaticMeshToolTargetFactory;
	static C(Other: UObject | any): StaticMeshToolTargetFactory;
}

declare class VolumeComponentToolTarget extends PrimitiveComponentToolTarget { 
	static Load(ResourceName: string): VolumeComponentToolTarget;
	static Find(Outer: UObject, ResourceName: string): VolumeComponentToolTarget;
	static GetDefaultObject(): VolumeComponentToolTarget;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VolumeComponentToolTarget;
	static C(Other: UObject | any): VolumeComponentToolTarget;
}

declare class VolumeComponentToolTargetFactory extends ToolTargetFactory { 
	static Load(ResourceName: string): VolumeComponentToolTargetFactory;
	static Find(Outer: UObject, ResourceName: string): VolumeComponentToolTargetFactory;
	static GetDefaultObject(): VolumeComponentToolTargetFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VolumeComponentToolTargetFactory;
	static C(Other: UObject | any): VolumeComponentToolTargetFactory;
}

declare type ERecomputeUVsPropertiesIslandMode = 'PolyGroups' | 'ExistingUVs' | 'ERecomputeUVsPropertiesIslandMode_MAX';
declare var ERecomputeUVsPropertiesIslandMode : { PolyGroups:'PolyGroups',ExistingUVs:'ExistingUVs',ERecomputeUVsPropertiesIslandMode_MAX:'ERecomputeUVsPropertiesIslandMode_MAX', };
declare type ERecomputeUVsPropertiesUnwrapType = 'ExpMap' | 'Conformal' | 'IslandMerging' | 'ERecomputeUVsPropertiesUnwrapType_MAX';
declare var ERecomputeUVsPropertiesUnwrapType : { ExpMap:'ExpMap',Conformal:'Conformal',IslandMerging:'IslandMerging',ERecomputeUVsPropertiesUnwrapType_MAX:'ERecomputeUVsPropertiesUnwrapType_MAX', };
declare type ERecomputeUVsToolOrientationMode = 'None' | 'MinBounds' | 'ERecomputeUVsToolOrientationMode_MAX';
declare var ERecomputeUVsToolOrientationMode : { None:'None',MinBounds:'MinBounds',ERecomputeUVsToolOrientationMode_MAX:'ERecomputeUVsToolOrientationMode_MAX', };
declare type ERecomputeUVsPropertiesLayoutType = 'None' | 'Repack' | 'NormalizeToBounds' | 'NormalizeToWorld' | 'ERecomputeUVsPropertiesLayoutType_MAX';
declare var ERecomputeUVsPropertiesLayoutType : { None:'None',Repack:'Repack',NormalizeToBounds:'NormalizeToBounds',NormalizeToWorld:'NormalizeToWorld',ERecomputeUVsPropertiesLayoutType_MAX:'ERecomputeUVsPropertiesLayoutType_MAX', };
declare class RecomputeUVsToolProperties extends InteractiveToolPropertySet { 
	bEnablePolygroupSupport: boolean;
	IslandGeneration: ERecomputeUVsPropertiesIslandMode;
	UnwrapType: ERecomputeUVsPropertiesUnwrapType;
	AutoRotation: ERecomputeUVsToolOrientationMode;
	SmoothingSteps: number;
	SmoothingAlpha: number;
	MergingDistortionThreshold: number;
	MergingAngleThreshold: number;
	LayoutType: ERecomputeUVsPropertiesLayoutType;
	TextureResolution: number;
	NormalizeScale: number;
	static Load(ResourceName: string): RecomputeUVsToolProperties;
	static Find(Outer: UObject, ResourceName: string): RecomputeUVsToolProperties;
	static GetDefaultObject(): RecomputeUVsToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RecomputeUVsToolProperties;
	static C(Other: UObject | any): RecomputeUVsToolProperties;
}

declare class RecomputeUVsOpFactory extends UObject { 
	Settings: RecomputeUVsToolProperties;
	static Load(ResourceName: string): RecomputeUVsOpFactory;
	static Find(Outer: UObject, ResourceName: string): RecomputeUVsOpFactory;
	static GetDefaultObject(): RecomputeUVsOpFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RecomputeUVsOpFactory;
	static C(Other: UObject | any): RecomputeUVsOpFactory;
}

declare type EUVLayoutType = 'Transform' | 'Stack' | 'Repack' | 'EUVLayoutType_MAX';
declare var EUVLayoutType : { Transform:'Transform',Stack:'Stack',Repack:'Repack',EUVLayoutType_MAX:'EUVLayoutType_MAX', };
declare class UVLayoutProperties extends InteractiveToolPropertySet { 
	LayoutType: EUVLayoutType;
	TextureResolution: number;
	Scale: number;
	Translation: Vector2D;
	bAllowFlips: boolean;
	static Load(ResourceName: string): UVLayoutProperties;
	static Find(Outer: UObject, ResourceName: string): UVLayoutProperties;
	static GetDefaultObject(): UVLayoutProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): UVLayoutProperties;
	static C(Other: UObject | any): UVLayoutProperties;
}

declare class UVLayoutOperatorFactory extends UObject { 
	Settings: UVLayoutProperties;
	static Load(ResourceName: string): UVLayoutOperatorFactory;
	static Find(Outer: UObject, ResourceName: string): UVLayoutOperatorFactory;
	static GetDefaultObject(): UVLayoutOperatorFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): UVLayoutOperatorFactory;
	static C(Other: UObject | any): UVLayoutOperatorFactory;
}

declare class AddPrimitiveToolBuilder extends InteractiveToolBuilder { 
	static Load(ResourceName: string): AddPrimitiveToolBuilder;
	static Find(Outer: UObject, ResourceName: string): AddPrimitiveToolBuilder;
	static GetDefaultObject(): AddPrimitiveToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AddPrimitiveToolBuilder;
	static C(Other: UObject | any): AddPrimitiveToolBuilder;
}

declare type EMakeMeshPolygroupMode = 'PerShape' | 'PerFace' | 'PerQuad' | 'EMakeMeshPolygroupMode_MAX';
declare var EMakeMeshPolygroupMode : { PerShape:'PerShape',PerFace:'PerFace',PerQuad:'PerQuad',EMakeMeshPolygroupMode_MAX:'EMakeMeshPolygroupMode_MAX', };
declare type EMakeMeshPlacementType = 'GroundPlane' | 'OnScene' | 'EMakeMeshPlacementType_MAX';
declare var EMakeMeshPlacementType : { GroundPlane:'GroundPlane',OnScene:'OnScene',EMakeMeshPlacementType_MAX:'EMakeMeshPlacementType_MAX', };
declare type EMakeMeshPivotLocation = 'Base' | 'Centered' | 'Top' | 'EMakeMeshPivotLocation_MAX';
declare var EMakeMeshPivotLocation : { Base:'Base',Centered:'Centered',Top:'Top',EMakeMeshPivotLocation_MAX:'EMakeMeshPivotLocation_MAX', };
declare class ProceduralShapeToolProperties extends InteractiveToolPropertySet { 
	bInstanceIfPossible: boolean;
	PolygroupMode: EMakeMeshPolygroupMode;
	TargetSurface: EMakeMeshPlacementType;
	bSnapToGrid: boolean;
	PivotLocation: EMakeMeshPivotLocation;
	Rotation: number;
	bAlignToNormal: boolean;
	static Load(ResourceName: string): ProceduralShapeToolProperties;
	static Find(Outer: UObject, ResourceName: string): ProceduralShapeToolProperties;
	static GetDefaultObject(): ProceduralShapeToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ProceduralShapeToolProperties;
	static C(Other: UObject | any): ProceduralShapeToolProperties;
}

declare class ProceduralBoxToolProperties extends ProceduralShapeToolProperties { 
	Width: number;
	Depth: number;
	Height: number;
	WidthSubdivisions: number;
	DepthSubdivisions: number;
	HeightSubdivisions: number;
	static Load(ResourceName: string): ProceduralBoxToolProperties;
	static Find(Outer: UObject, ResourceName: string): ProceduralBoxToolProperties;
	static GetDefaultObject(): ProceduralBoxToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ProceduralBoxToolProperties;
	static C(Other: UObject | any): ProceduralBoxToolProperties;
}

declare type EProceduralRectType = 'Rectangle' | 'RoundedRectangle' | 'EProceduralRectType_MAX';
declare var EProceduralRectType : { Rectangle:'Rectangle',RoundedRectangle:'RoundedRectangle',EProceduralRectType_MAX:'EProceduralRectType_MAX', };
declare class ProceduralRectangleToolProperties extends ProceduralShapeToolProperties { 
	RectangleType: EProceduralRectType;
	Width: number;
	Depth: number;
	WidthSubdivisions: number;
	DepthSubdivisions: number;
	CornerRadius: number;
	CornerSlices: number;
	static Load(ResourceName: string): ProceduralRectangleToolProperties;
	static Find(Outer: UObject, ResourceName: string): ProceduralRectangleToolProperties;
	static GetDefaultObject(): ProceduralRectangleToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ProceduralRectangleToolProperties;
	static C(Other: UObject | any): ProceduralRectangleToolProperties;
}

declare type EProceduralDiscType = 'Disc' | 'PuncturedDisc' | 'EProceduralDiscType_MAX';
declare var EProceduralDiscType : { Disc:'Disc',PuncturedDisc:'PuncturedDisc',EProceduralDiscType_MAX:'EProceduralDiscType_MAX', };
declare class ProceduralDiscToolProperties extends ProceduralShapeToolProperties { 
	DiscType: EProceduralDiscType;
	Radius: number;
	RadialSlices: number;
	RadialSubdivisions: number;
	HoleRadius: number;
	static Load(ResourceName: string): ProceduralDiscToolProperties;
	static Find(Outer: UObject, ResourceName: string): ProceduralDiscToolProperties;
	static GetDefaultObject(): ProceduralDiscToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ProceduralDiscToolProperties;
	static C(Other: UObject | any): ProceduralDiscToolProperties;
}

declare class ProceduralTorusToolProperties extends ProceduralShapeToolProperties { 
	MajorRadius: number;
	MinorRadius: number;
	MajorSlices: number;
	MinorSlices: number;
	static Load(ResourceName: string): ProceduralTorusToolProperties;
	static Find(Outer: UObject, ResourceName: string): ProceduralTorusToolProperties;
	static GetDefaultObject(): ProceduralTorusToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ProceduralTorusToolProperties;
	static C(Other: UObject | any): ProceduralTorusToolProperties;
}

declare class ProceduralCylinderToolProperties extends ProceduralShapeToolProperties { 
	Radius: number;
	Height: number;
	RadialSlices: number;
	HeightSubdivisions: number;
	static Load(ResourceName: string): ProceduralCylinderToolProperties;
	static Find(Outer: UObject, ResourceName: string): ProceduralCylinderToolProperties;
	static GetDefaultObject(): ProceduralCylinderToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ProceduralCylinderToolProperties;
	static C(Other: UObject | any): ProceduralCylinderToolProperties;
}

declare class ProceduralConeToolProperties extends ProceduralShapeToolProperties { 
	Radius: number;
	Height: number;
	RadialSlices: number;
	HeightSubdivisions: number;
	static Load(ResourceName: string): ProceduralConeToolProperties;
	static Find(Outer: UObject, ResourceName: string): ProceduralConeToolProperties;
	static GetDefaultObject(): ProceduralConeToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ProceduralConeToolProperties;
	static C(Other: UObject | any): ProceduralConeToolProperties;
}

declare class ProceduralArrowToolProperties extends ProceduralShapeToolProperties { 
	ShaftRadius: number;
	ShaftHeight: number;
	HeadRadius: number;
	HeadHeight: number;
	RadialSlices: number;
	HeightSubdivisions: number;
	static Load(ResourceName: string): ProceduralArrowToolProperties;
	static Find(Outer: UObject, ResourceName: string): ProceduralArrowToolProperties;
	static GetDefaultObject(): ProceduralArrowToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ProceduralArrowToolProperties;
	static C(Other: UObject | any): ProceduralArrowToolProperties;
}

declare type EProceduralSphereType = 'LatLong' | 'Box' | 'EProceduralSphereType_MAX';
declare var EProceduralSphereType : { LatLong:'LatLong',Box:'Box',EProceduralSphereType_MAX:'EProceduralSphereType_MAX', };
declare class ProceduralSphereToolProperties extends ProceduralShapeToolProperties { 
	Radius: number;
	SubdivisionType: EProceduralSphereType;
	Subdivisions: number;
	HorizontalSlices: number;
	VerticalSlices: number;
	static Load(ResourceName: string): ProceduralSphereToolProperties;
	static Find(Outer: UObject, ResourceName: string): ProceduralSphereToolProperties;
	static GetDefaultObject(): ProceduralSphereToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ProceduralSphereToolProperties;
	static C(Other: UObject | any): ProceduralSphereToolProperties;
}

declare type EProceduralStairsType = 'Linear' | 'Floating' | 'Curved' | 'Spiral' | 'EProceduralStairsType_MAX';
declare var EProceduralStairsType : { Linear:'Linear',Floating:'Floating',Curved:'Curved',Spiral:'Spiral',EProceduralStairsType_MAX:'EProceduralStairsType_MAX', };
declare class ProceduralStairsToolProperties extends ProceduralShapeToolProperties { 
	StairsType: EProceduralStairsType;
	NumSteps: number;
	StepWidth: number;
	StepHeight: number;
	StepDepth: number;
	CurveAngle: number;
	SpiralAngle: number;
	InnerRadius: number;
	static Load(ResourceName: string): ProceduralStairsToolProperties;
	static Find(Outer: UObject, ResourceName: string): ProceduralStairsToolProperties;
	static GetDefaultObject(): ProceduralStairsToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ProceduralStairsToolProperties;
	static C(Other: UObject | any): ProceduralStairsToolProperties;
}

declare class NewMeshMaterialProperties extends InteractiveToolPropertySet { 
	Material: any;
	UVScale: number;
	bWorldSpaceUVScale: boolean;
	bShowWireframe: boolean;
	bShowExtendedOptions: boolean;
	static Load(ResourceName: string): NewMeshMaterialProperties;
	static Find(Outer: UObject, ResourceName: string): NewMeshMaterialProperties;
	static GetDefaultObject(): NewMeshMaterialProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NewMeshMaterialProperties;
	static C(Other: UObject | any): NewMeshMaterialProperties;
}

declare class LastActorInfo extends UObject { 
	Actor: Actor;
	StaticMesh: StaticMesh;
	ShapeSettings: ProceduralShapeToolProperties;
	MaterialProperties: NewMeshMaterialProperties;
	static Load(ResourceName: string): LastActorInfo;
	static Find(Outer: UObject, ResourceName: string): LastActorInfo;
	static GetDefaultObject(): LastActorInfo;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LastActorInfo;
	static C(Other: UObject | any): LastActorInfo;
}

declare class AddPrimitiveTool extends SingleClickTool { 
	OutputTypeProperties: CreateMeshObjectTypeProperties;
	ShapeSettings: ProceduralShapeToolProperties;
	MaterialProperties: NewMeshMaterialProperties;
	PreviewMesh: PreviewMesh;
	LastGenerated: LastActorInfo;
	AssetName: string;
	static Load(ResourceName: string): AddPrimitiveTool;
	static Find(Outer: UObject, ResourceName: string): AddPrimitiveTool;
	static GetDefaultObject(): AddPrimitiveTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AddPrimitiveTool;
	static C(Other: UObject | any): AddPrimitiveTool;
}

declare class AddBoxPrimitiveTool extends AddPrimitiveTool { 
	static Load(ResourceName: string): AddBoxPrimitiveTool;
	static Find(Outer: UObject, ResourceName: string): AddBoxPrimitiveTool;
	static GetDefaultObject(): AddBoxPrimitiveTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AddBoxPrimitiveTool;
	static C(Other: UObject | any): AddBoxPrimitiveTool;
}

declare class AddCylinderPrimitiveTool extends AddPrimitiveTool { 
	static Load(ResourceName: string): AddCylinderPrimitiveTool;
	static Find(Outer: UObject, ResourceName: string): AddCylinderPrimitiveTool;
	static GetDefaultObject(): AddCylinderPrimitiveTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AddCylinderPrimitiveTool;
	static C(Other: UObject | any): AddCylinderPrimitiveTool;
}

declare class AddConePrimitiveTool extends AddPrimitiveTool { 
	static Load(ResourceName: string): AddConePrimitiveTool;
	static Find(Outer: UObject, ResourceName: string): AddConePrimitiveTool;
	static GetDefaultObject(): AddConePrimitiveTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AddConePrimitiveTool;
	static C(Other: UObject | any): AddConePrimitiveTool;
}

declare class AddRectanglePrimitiveTool extends AddPrimitiveTool { 
	static Load(ResourceName: string): AddRectanglePrimitiveTool;
	static Find(Outer: UObject, ResourceName: string): AddRectanglePrimitiveTool;
	static GetDefaultObject(): AddRectanglePrimitiveTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AddRectanglePrimitiveTool;
	static C(Other: UObject | any): AddRectanglePrimitiveTool;
}

declare class AddDiscPrimitiveTool extends AddPrimitiveTool { 
	static Load(ResourceName: string): AddDiscPrimitiveTool;
	static Find(Outer: UObject, ResourceName: string): AddDiscPrimitiveTool;
	static GetDefaultObject(): AddDiscPrimitiveTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AddDiscPrimitiveTool;
	static C(Other: UObject | any): AddDiscPrimitiveTool;
}

declare class AddTorusPrimitiveTool extends AddPrimitiveTool { 
	static Load(ResourceName: string): AddTorusPrimitiveTool;
	static Find(Outer: UObject, ResourceName: string): AddTorusPrimitiveTool;
	static GetDefaultObject(): AddTorusPrimitiveTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AddTorusPrimitiveTool;
	static C(Other: UObject | any): AddTorusPrimitiveTool;
}

declare class AddArrowPrimitiveTool extends AddPrimitiveTool { 
	static Load(ResourceName: string): AddArrowPrimitiveTool;
	static Find(Outer: UObject, ResourceName: string): AddArrowPrimitiveTool;
	static GetDefaultObject(): AddArrowPrimitiveTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AddArrowPrimitiveTool;
	static C(Other: UObject | any): AddArrowPrimitiveTool;
}

declare class AddSpherePrimitiveTool extends AddPrimitiveTool { 
	static Load(ResourceName: string): AddSpherePrimitiveTool;
	static Find(Outer: UObject, ResourceName: string): AddSpherePrimitiveTool;
	static GetDefaultObject(): AddSpherePrimitiveTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AddSpherePrimitiveTool;
	static C(Other: UObject | any): AddSpherePrimitiveTool;
}

declare class AddStairsPrimitiveTool extends AddPrimitiveTool { 
	static Load(ResourceName: string): AddStairsPrimitiveTool;
	static Find(Outer: UObject, ResourceName: string): AddStairsPrimitiveTool;
	static GetDefaultObject(): AddStairsPrimitiveTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AddStairsPrimitiveTool;
	static C(Other: UObject | any): AddStairsPrimitiveTool;
}

declare class CombineMeshesToolBuilder extends MultiSelectionMeshEditingToolBuilder { 
	static Load(ResourceName: string): CombineMeshesToolBuilder;
	static Find(Outer: UObject, ResourceName: string): CombineMeshesToolBuilder;
	static GetDefaultObject(): CombineMeshesToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CombineMeshesToolBuilder;
	static C(Other: UObject | any): CombineMeshesToolBuilder;
}

declare class CombineMeshesToolProperties extends InteractiveToolPropertySet { 
	bIsDuplicateMode: boolean;
	OutputWriteTo: EBaseCreateFromSelectedTargetType;
	OutputNewName: string;
	OutputExistingName: string;
	static Load(ResourceName: string): CombineMeshesToolProperties;
	static Find(Outer: UObject, ResourceName: string): CombineMeshesToolProperties;
	static GetDefaultObject(): CombineMeshesToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CombineMeshesToolProperties;
	static C(Other: UObject | any): CombineMeshesToolProperties;
}

declare class CombineMeshesTool extends MultiSelectionMeshEditingTool { 
	BasicProperties: CombineMeshesToolProperties;
	OutputTypeProperties: CreateMeshObjectTypeProperties;
	HandleSourceProperties: OnAcceptHandleSourcesPropertiesBase;
	static Load(ResourceName: string): CombineMeshesTool;
	static Find(Outer: UObject, ResourceName: string): CombineMeshesTool;
	static GetDefaultObject(): CombineMeshesTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CombineMeshesTool;
	static C(Other: UObject | any): CombineMeshesTool;
}

declare type ECSGOperation = 'DifferenceAB' | 'DifferenceBA' | 'Intersect' | 'Union' | 'ECSGOperation_MAX';
declare var ECSGOperation : { DifferenceAB:'DifferenceAB',DifferenceBA:'DifferenceBA',Intersect:'Intersect',Union:'Union',ECSGOperation_MAX:'ECSGOperation_MAX', };
declare class CSGMeshesToolProperties extends InteractiveToolPropertySet { 
	Operation: ECSGOperation;
	bTryFixHoles: boolean;
	bTryCollapseEdges: boolean;
	WindingThreshold: number;
	bShowNewBoundaries: boolean;
	bShowSubtractedMesh: boolean;
	SubtractedMeshOpacity: number;
	SubtractedMeshColor: LinearColor;
	bUseFirstMeshMaterials: boolean;
	static Load(ResourceName: string): CSGMeshesToolProperties;
	static Find(Outer: UObject, ResourceName: string): CSGMeshesToolProperties;
	static GetDefaultObject(): CSGMeshesToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CSGMeshesToolProperties;
	static C(Other: UObject | any): CSGMeshesToolProperties;
}

declare type ETrimOperation = 'TrimA' | 'TrimB' | 'ETrimOperation_MAX';
declare var ETrimOperation : { TrimA:'TrimA',TrimB:'TrimB',ETrimOperation_MAX:'ETrimOperation_MAX', };
declare type ETrimSide = 'RemoveInside' | 'RemoveOutside' | 'ETrimSide_MAX';
declare var ETrimSide : { RemoveInside:'RemoveInside',RemoveOutside:'RemoveOutside',ETrimSide_MAX:'ETrimSide_MAX', };
declare class TrimMeshesToolProperties extends InteractiveToolPropertySet { 
	WhichMesh: ETrimOperation;
	TrimSide: ETrimSide;
	WindingThreshold: number;
	bShowTrimmingMesh: boolean;
	OpacityOfTrimmingMesh: number;
	ColorOfTrimmingMesh: LinearColor;
	static Load(ResourceName: string): TrimMeshesToolProperties;
	static Find(Outer: UObject, ResourceName: string): TrimMeshesToolProperties;
	static GetDefaultObject(): TrimMeshesToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TrimMeshesToolProperties;
	static C(Other: UObject | any): TrimMeshesToolProperties;
}

declare class CSGMeshesTool extends BaseCreateFromSelectedTool { 
	CSGProperties: CSGMeshesToolProperties;
	TrimProperties: TrimMeshesToolProperties;
	OriginalMeshPreviews: PreviewMesh[];
	PreviewsGhostMaterial: MaterialInstanceDynamic;
	DrawnLineSet: LineSetComponent;
	static Load(ResourceName: string): CSGMeshesTool;
	static Find(Outer: UObject, ResourceName: string): CSGMeshesTool;
	static GetDefaultObject(): CSGMeshesTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CSGMeshesTool;
	static C(Other: UObject | any): CSGMeshesTool;
}

declare class CSGMeshesToolBuilder extends BaseCreateFromSelectedToolBuilder { 
	static Load(ResourceName: string): CSGMeshesToolBuilder;
	static Find(Outer: UObject, ResourceName: string): CSGMeshesToolBuilder;
	static GetDefaultObject(): CSGMeshesToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CSGMeshesToolBuilder;
	static C(Other: UObject | any): CSGMeshesToolBuilder;
}

declare class CutMeshWithMeshToolProperties extends InteractiveToolPropertySet { 
	bTryFixHoles: boolean;
	bTryCollapseEdges: boolean;
	WindingThreshold: number;
	bShowNewBoundaries: boolean;
	bUseFirstMeshMaterials: boolean;
	static Load(ResourceName: string): CutMeshWithMeshToolProperties;
	static Find(Outer: UObject, ResourceName: string): CutMeshWithMeshToolProperties;
	static GetDefaultObject(): CutMeshWithMeshToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CutMeshWithMeshToolProperties;
	static C(Other: UObject | any): CutMeshWithMeshToolProperties;
}

declare class CutMeshWithMeshTool extends BaseCreateFromSelectedTool { 
	CutProperties: CutMeshWithMeshToolProperties;
	IntersectPreviewMesh: PreviewMesh;
	DrawnLineSet: LineSetComponent;
	static Load(ResourceName: string): CutMeshWithMeshTool;
	static Find(Outer: UObject, ResourceName: string): CutMeshWithMeshTool;
	static GetDefaultObject(): CutMeshWithMeshTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CutMeshWithMeshTool;
	static C(Other: UObject | any): CutMeshWithMeshTool;
}

declare class CutMeshWithMeshToolBuilder extends BaseCreateFromSelectedToolBuilder { 
	static Load(ResourceName: string): CutMeshWithMeshToolBuilder;
	static Find(Outer: UObject, ResourceName: string): CutMeshWithMeshToolBuilder;
	static GetDefaultObject(): CutMeshWithMeshToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CutMeshWithMeshToolBuilder;
	static C(Other: UObject | any): CutMeshWithMeshToolBuilder;
}

declare class DrawAndRevolveToolBuilder extends InteractiveToolBuilder { 
	static Load(ResourceName: string): DrawAndRevolveToolBuilder;
	static Find(Outer: UObject, ResourceName: string): DrawAndRevolveToolBuilder;
	static GetDefaultObject(): DrawAndRevolveToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DrawAndRevolveToolBuilder;
	static C(Other: UObject | any): DrawAndRevolveToolBuilder;
}

declare type ERevolvePropertiesPolygroupMode = 'PerShape' | 'PerFace' | 'PerRevolveStep' | 'PerPathSegment' | 'ERevolvePropertiesPolygroupMode_MAX';
declare var ERevolvePropertiesPolygroupMode : { PerShape:'PerShape',PerFace:'PerFace',PerRevolveStep:'PerRevolveStep',PerPathSegment:'PerPathSegment',ERevolvePropertiesPolygroupMode_MAX:'ERevolvePropertiesPolygroupMode_MAX', };
declare type ERevolvePropertiesQuadSplit = 'Uniform' | 'Compact' | 'ERevolvePropertiesQuadSplit_MAX';
declare var ERevolvePropertiesQuadSplit : { Uniform:'Uniform',Compact:'Compact',ERevolvePropertiesQuadSplit_MAX:'ERevolvePropertiesQuadSplit_MAX', };
declare class RevolveProperties extends InteractiveToolPropertySet { 
	RevolveDegreesClamped: any;
	RevolveDegrees: any;
	RevolveDegreesOffset: any;
	StepsMaxDegrees: any;
	bExplicitSteps: boolean;
	NumExplicitSteps: number;
	HeightOffsetPerDegree: any;
	bReverseRevolutionDirection: boolean;
	bFlipMesh: boolean;
	bSharpNormals: boolean;
	SharpNormalsDegreeThreshold: any;
	bPathAtMidpointOfStep: boolean;
	PolygroupMode: ERevolvePropertiesPolygroupMode;
	QuadSplitMode: ERevolvePropertiesQuadSplit;
	static Load(ResourceName: string): RevolveProperties;
	static Find(Outer: UObject, ResourceName: string): RevolveProperties;
	static GetDefaultObject(): RevolveProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RevolveProperties;
	static C(Other: UObject | any): RevolveProperties;
}

declare type ERevolvePropertiesCapFillMode = 'None' | 'CenterFan' | 'Delaunay' | 'EarClipping' | 'ERevolvePropertiesCapFillMode_MAX';
declare var ERevolvePropertiesCapFillMode : { None:'None',CenterFan:'CenterFan',Delaunay:'Delaunay',EarClipping:'EarClipping',ERevolvePropertiesCapFillMode_MAX:'ERevolvePropertiesCapFillMode_MAX', };
declare class RevolveToolProperties extends RevolveProperties { 
	CapFillMode: ERevolvePropertiesCapFillMode;
	bClosePathToAxis: boolean;
	DrawPlaneOrigin: Vector;
	DrawPlaneOrientation: Rotator;
	bEnableSnapping: boolean;
	bAllowedToEditDrawPlane: boolean;
	static Load(ResourceName: string): RevolveToolProperties;
	static Find(Outer: UObject, ResourceName: string): RevolveToolProperties;
	static GetDefaultObject(): RevolveToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RevolveToolProperties;
	static C(Other: UObject | any): RevolveToolProperties;
}

declare class DrawAndRevolveTool extends InteractiveTool { 
	ControlPointsMechanic: CurveControlPointsMechanic;
	PlaneMechanic: ConstructionPlaneMechanic;
	OutputTypeProperties: CreateMeshObjectTypeProperties;
	Settings: RevolveToolProperties;
	MaterialProperties: NewMeshMaterialProperties;
	Preview: MeshOpPreviewWithBackgroundCompute;
	static Load(ResourceName: string): DrawAndRevolveTool;
	static Find(Outer: UObject, ResourceName: string): DrawAndRevolveTool;
	static GetDefaultObject(): DrawAndRevolveTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DrawAndRevolveTool;
	static C(Other: UObject | any): DrawAndRevolveTool;
}

declare class RevolveOperatorFactory extends UObject { 
	RevolveTool: DrawAndRevolveTool;
	static Load(ResourceName: string): RevolveOperatorFactory;
	static Find(Outer: UObject, ResourceName: string): RevolveOperatorFactory;
	static GetDefaultObject(): RevolveOperatorFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RevolveOperatorFactory;
	static C(Other: UObject | any): RevolveOperatorFactory;
}

declare class DrawPolygonToolBuilder extends InteractiveToolBuilder { 
	static Load(ResourceName: string): DrawPolygonToolBuilder;
	static Find(Outer: UObject, ResourceName: string): DrawPolygonToolBuilder;
	static GetDefaultObject(): DrawPolygonToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DrawPolygonToolBuilder;
	static C(Other: UObject | any): DrawPolygonToolBuilder;
}

declare type EDrawPolygonDrawMode = 'Freehand' | 'Circle' | 'Square' | 'Rectangle' | 'RoundedRectangle' | 'Ring' | 'EDrawPolygonDrawMode_MAX';
declare var EDrawPolygonDrawMode : { Freehand:'Freehand',Circle:'Circle',Square:'Square',Rectangle:'Rectangle',RoundedRectangle:'RoundedRectangle',Ring:'Ring',EDrawPolygonDrawMode_MAX:'EDrawPolygonDrawMode_MAX', };
declare type EDrawPolygonExtrudeMode = 'Flat' | 'Fixed' | 'Interactive' | 'EDrawPolygonExtrudeMode_MAX';
declare var EDrawPolygonExtrudeMode : { Flat:'Flat',Fixed:'Fixed',Interactive:'Interactive',EDrawPolygonExtrudeMode_MAX:'EDrawPolygonExtrudeMode_MAX', };
declare class DrawPolygonToolStandardProperties extends InteractiveToolPropertySet { 
	PolygonDrawMode: EDrawPolygonDrawMode;
	bAllowSelfIntersections: boolean;
	FeatureSizeRatio: number;
	RadialSlices: number;
	Distance: number;
	bShowGridGizmo: boolean;
	ExtrudeMode: EDrawPolygonExtrudeMode;
	ExtrudeHeight: number;
	static Load(ResourceName: string): DrawPolygonToolStandardProperties;
	static Find(Outer: UObject, ResourceName: string): DrawPolygonToolStandardProperties;
	static GetDefaultObject(): DrawPolygonToolStandardProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DrawPolygonToolStandardProperties;
	static C(Other: UObject | any): DrawPolygonToolStandardProperties;
}

declare class DrawPolygonToolSnapProperties extends InteractiveToolPropertySet { 
	bEnableSnapping: boolean;
	bSnapToWorldGrid: boolean;
	bSnapToVertices: boolean;
	bSnapToEdges: boolean;
	bSnapToAxes: boolean;
	bSnapToLengths: boolean;
	bSnapToSurfaces: boolean;
	SnapToSurfacesOffset: number;
	static Load(ResourceName: string): DrawPolygonToolSnapProperties;
	static Find(Outer: UObject, ResourceName: string): DrawPolygonToolSnapProperties;
	static GetDefaultObject(): DrawPolygonToolSnapProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DrawPolygonToolSnapProperties;
	static C(Other: UObject | any): DrawPolygonToolSnapProperties;
}

declare class DrawPolygonTool extends InteractiveTool { 
	OutputTypeProperties: CreateMeshObjectTypeProperties;
	PolygonProperties: DrawPolygonToolStandardProperties;
	SnapProperties: DrawPolygonToolSnapProperties;
	MaterialProperties: NewMeshMaterialProperties;
	PreviewMesh: PreviewMesh;
	PlaneTransformGizmo: CombinedTransformGizmo;
	PlaneTransformProxy: TransformProxy;
	HeightMechanic: PlaneDistanceFromHitMechanic;
	static Load(ResourceName: string): DrawPolygonTool;
	static Find(Outer: UObject, ResourceName: string): DrawPolygonTool;
	static GetDefaultObject(): DrawPolygonTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DrawPolygonTool;
	static C(Other: UObject | any): DrawPolygonTool;
}

declare class EditMeshPolygonsToolBuilder extends SingleSelectionMeshEditingToolBuilder { 
	static Load(ResourceName: string): EditMeshPolygonsToolBuilder;
	static Find(Outer: UObject, ResourceName: string): EditMeshPolygonsToolBuilder;
	static GetDefaultObject(): EditMeshPolygonsToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditMeshPolygonsToolBuilder;
	static C(Other: UObject | any): EditMeshPolygonsToolBuilder;
}

declare type ELocalFrameMode = 'FromObject' | 'FromGeometry' | 'ELocalFrameMode_MAX';
declare var ELocalFrameMode : { FromObject:'FromObject',FromGeometry:'FromGeometry',ELocalFrameMode_MAX:'ELocalFrameMode_MAX', };
declare class PolyEditCommonProperties extends InteractiveToolPropertySet { 
	bShowWireframe: boolean;
	LocalFrameMode: ELocalFrameMode;
	bLockRotation: boolean;
	bLocalCoordSystem: boolean;
	static Load(ResourceName: string): PolyEditCommonProperties;
	static Find(Outer: UObject, ResourceName: string): PolyEditCommonProperties;
	static GetDefaultObject(): PolyEditCommonProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PolyEditCommonProperties;
	static C(Other: UObject | any): PolyEditCommonProperties;
}

declare class EditMeshPolygonsActionModeToolBuilder extends EditMeshPolygonsToolBuilder { 
	static Load(ResourceName: string): EditMeshPolygonsActionModeToolBuilder;
	static Find(Outer: UObject, ResourceName: string): EditMeshPolygonsActionModeToolBuilder;
	static GetDefaultObject(): EditMeshPolygonsActionModeToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditMeshPolygonsActionModeToolBuilder;
	static C(Other: UObject | any): EditMeshPolygonsActionModeToolBuilder;
}

declare class EditMeshPolygonsSelectionModeToolBuilder extends EditMeshPolygonsToolBuilder { 
	static Load(ResourceName: string): EditMeshPolygonsSelectionModeToolBuilder;
	static Find(Outer: UObject, ResourceName: string): EditMeshPolygonsSelectionModeToolBuilder;
	static GetDefaultObject(): EditMeshPolygonsSelectionModeToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditMeshPolygonsSelectionModeToolBuilder;
	static C(Other: UObject | any): EditMeshPolygonsSelectionModeToolBuilder;
}

declare class EditMeshPolygonsToolActionPropertySet extends InteractiveToolPropertySet { 
	static Load(ResourceName: string): EditMeshPolygonsToolActionPropertySet;
	static Find(Outer: UObject, ResourceName: string): EditMeshPolygonsToolActionPropertySet;
	static GetDefaultObject(): EditMeshPolygonsToolActionPropertySet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditMeshPolygonsToolActionPropertySet;
	static C(Other: UObject | any): EditMeshPolygonsToolActionPropertySet;
}

declare class EditMeshPolygonsToolActions extends EditMeshPolygonsToolActionPropertySet { 
	static Load(ResourceName: string): EditMeshPolygonsToolActions;
	static Find(Outer: UObject, ResourceName: string): EditMeshPolygonsToolActions;
	static GetDefaultObject(): EditMeshPolygonsToolActions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditMeshPolygonsToolActions;
	SimplifyByGroups(): void;
	Retriangulate(): void;
	RecalcNormals(): void;
	PushPull(): void;
	Outset(): void;
	Offset(): void;
	Merge(): void;
	Inset(): void;
	InsertEdgeLoop(): void;
	InsertEdge(): void;
	Flip(): void;
	Extrude(): void;
	Duplicate(): void;
	Disconnect(): void;
	Delete(): void;
	Decompose(): void;
	CutFaces(): void;
	Bevel(): void;
	static C(Other: UObject | any): EditMeshPolygonsToolActions;
}

declare class EditMeshPolygonsToolActions_Triangles extends EditMeshPolygonsToolActionPropertySet { 
	static Load(ResourceName: string): EditMeshPolygonsToolActions_Triangles;
	static Find(Outer: UObject, ResourceName: string): EditMeshPolygonsToolActions_Triangles;
	static GetDefaultObject(): EditMeshPolygonsToolActions_Triangles;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditMeshPolygonsToolActions_Triangles;
	RecalcNormals(): void;
	PushPull(): void;
	Poke(): void;
	Outset(): void;
	Offset(): void;
	Inset(): void;
	Flip(): void;
	Extrude(): void;
	Duplicate(): void;
	Disconnect(): void;
	Delete(): void;
	CutFaces(): void;
	static C(Other: UObject | any): EditMeshPolygonsToolActions_Triangles;
}

declare class EditMeshPolygonsToolUVActions extends EditMeshPolygonsToolActionPropertySet { 
	static Load(ResourceName: string): EditMeshPolygonsToolUVActions;
	static Find(Outer: UObject, ResourceName: string): EditMeshPolygonsToolUVActions;
	static GetDefaultObject(): EditMeshPolygonsToolUVActions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditMeshPolygonsToolUVActions;
	PlanarProjection(): void;
	static C(Other: UObject | any): EditMeshPolygonsToolUVActions;
}

declare class EditMeshPolygonsToolEdgeActions extends EditMeshPolygonsToolActionPropertySet { 
	static Load(ResourceName: string): EditMeshPolygonsToolEdgeActions;
	static Find(Outer: UObject, ResourceName: string): EditMeshPolygonsToolEdgeActions;
	static GetDefaultObject(): EditMeshPolygonsToolEdgeActions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditMeshPolygonsToolEdgeActions;
	Weld(): void;
	Straighten(): void;
	FillHole(): void;
	Bevel(): void;
	static C(Other: UObject | any): EditMeshPolygonsToolEdgeActions;
}

declare class EditMeshPolygonsToolEdgeActions_Triangles extends EditMeshPolygonsToolActionPropertySet { 
	static Load(ResourceName: string): EditMeshPolygonsToolEdgeActions_Triangles;
	static Find(Outer: UObject, ResourceName: string): EditMeshPolygonsToolEdgeActions_Triangles;
	static GetDefaultObject(): EditMeshPolygonsToolEdgeActions_Triangles;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditMeshPolygonsToolEdgeActions_Triangles;
	Weld(): void;
	Split(): void;
	Flip(): void;
	FillHole(): void;
	Collapse(): void;
	static C(Other: UObject | any): EditMeshPolygonsToolEdgeActions_Triangles;
}

declare class EditMeshPolygonsToolCancelAction extends EditMeshPolygonsToolActionPropertySet { 
	static Load(ResourceName: string): EditMeshPolygonsToolCancelAction;
	static Find(Outer: UObject, ResourceName: string): EditMeshPolygonsToolCancelAction;
	static GetDefaultObject(): EditMeshPolygonsToolCancelAction;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditMeshPolygonsToolCancelAction;
	Done(): void;
	static C(Other: UObject | any): EditMeshPolygonsToolCancelAction;
}

declare class EditMeshPolygonsToolAcceptCancelAction extends EditMeshPolygonsToolActionPropertySet { 
	static Load(ResourceName: string): EditMeshPolygonsToolAcceptCancelAction;
	static Find(Outer: UObject, ResourceName: string): EditMeshPolygonsToolAcceptCancelAction;
	static GetDefaultObject(): EditMeshPolygonsToolAcceptCancelAction;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditMeshPolygonsToolAcceptCancelAction;
	Cancel(): void;
	Apply(): void;
	static C(Other: UObject | any): EditMeshPolygonsToolAcceptCancelAction;
}

declare type EPolyEditExtrudeDirection = 'SelectionNormal' | 'WorldX' | 'WorldY' | 'WorldZ' | 'LocalX' | 'LocalY' | 'LocalZ' | 'EPolyEditExtrudeDirection_MAX';
declare var EPolyEditExtrudeDirection : { SelectionNormal:'SelectionNormal',WorldX:'WorldX',WorldY:'WorldY',WorldZ:'WorldZ',LocalX:'LocalX',LocalY:'LocalY',LocalZ:'LocalZ',EPolyEditExtrudeDirection_MAX:'EPolyEditExtrudeDirection_MAX', };
declare type EPolyEditExtrudeModeOptions = 'SingleDirection' | 'SelectedTriangleNormals' | 'SelectedTriangleNormalsEven' | 'EPolyEditExtrudeModeOptions_MAX';
declare var EPolyEditExtrudeModeOptions : { SingleDirection:'SingleDirection',SelectedTriangleNormals:'SelectedTriangleNormals',SelectedTriangleNormalsEven:'SelectedTriangleNormalsEven',EPolyEditExtrudeModeOptions_MAX:'EPolyEditExtrudeModeOptions_MAX', };
declare class PolyEditExtrudeProperties extends InteractiveToolPropertySet { 
	Direction: EPolyEditExtrudeDirection;
	MeasureDirection: EPolyEditExtrudeDirection;
	bShellsToSolids: boolean;
	DirectionMode: EPolyEditExtrudeModeOptions;
	MaxDistanceScaleFactor: any;
	bUseColinearityForSettingBorderGroups: boolean;
	static Load(ResourceName: string): PolyEditExtrudeProperties;
	static Find(Outer: UObject, ResourceName: string): PolyEditExtrudeProperties;
	static GetDefaultObject(): PolyEditExtrudeProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PolyEditExtrudeProperties;
	static C(Other: UObject | any): PolyEditExtrudeProperties;
}

declare type EPolyEditOffsetModeOptions = 'VertexNormals' | 'SelectedTriangleNormals' | 'SelectedTriangleNormalsEven' | 'EPolyEditOffsetModeOptions_MAX';
declare var EPolyEditOffsetModeOptions : { VertexNormals:'VertexNormals',SelectedTriangleNormals:'SelectedTriangleNormals',SelectedTriangleNormalsEven:'SelectedTriangleNormalsEven',EPolyEditOffsetModeOptions_MAX:'EPolyEditOffsetModeOptions_MAX', };
declare class PolyEditOffsetProperties extends InteractiveToolPropertySet { 
	DirectionMode: EPolyEditOffsetModeOptions;
	MaxDistanceScaleFactor: any;
	bShellsToSolids: boolean;
	MeasureDirection: EPolyEditExtrudeDirection;
	bUseColinearityForSettingBorderGroups: boolean;
	static Load(ResourceName: string): PolyEditOffsetProperties;
	static Find(Outer: UObject, ResourceName: string): PolyEditOffsetProperties;
	static GetDefaultObject(): PolyEditOffsetProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PolyEditOffsetProperties;
	static C(Other: UObject | any): PolyEditOffsetProperties;
}

declare type EPolyEditPushPullModeOptions = 'SelectedTriangleNormals' | 'SelectedTriangleNormalsEven' | 'SingleDirection' | 'VertexNormals' | 'EPolyEditPushPullModeOptions_MAX';
declare var EPolyEditPushPullModeOptions : { SelectedTriangleNormals:'SelectedTriangleNormals',SelectedTriangleNormalsEven:'SelectedTriangleNormalsEven',SingleDirection:'SingleDirection',VertexNormals:'VertexNormals',EPolyEditPushPullModeOptions_MAX:'EPolyEditPushPullModeOptions_MAX', };
declare class PolyEditPushPullProperties extends InteractiveToolPropertySet { 
	DirectionMode: EPolyEditPushPullModeOptions;
	MaxDistanceScaleFactor: any;
	bShellsToSolids: boolean;
	MeasureDirection: EPolyEditExtrudeDirection;
	bUseColinearityForSettingBorderGroups: boolean;
	static Load(ResourceName: string): PolyEditPushPullProperties;
	static Find(Outer: UObject, ResourceName: string): PolyEditPushPullProperties;
	static GetDefaultObject(): PolyEditPushPullProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PolyEditPushPullProperties;
	static C(Other: UObject | any): PolyEditPushPullProperties;
}

declare class PolyEditActivityContext extends UObject { 
	CommonProperties: PolyEditCommonProperties;
	Preview: MeshOpPreviewWithBackgroundCompute;
	SelectionMechanic: PolygonSelectionMechanic;
	static Load(ResourceName: string): PolyEditActivityContext;
	static Find(Outer: UObject, ResourceName: string): PolyEditActivityContext;
	static GetDefaultObject(): PolyEditActivityContext;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PolyEditActivityContext;
	static C(Other: UObject | any): PolyEditActivityContext;
}

declare class PolyEditExtrudeActivity extends InteractiveToolActivity { 
	ExtrudeProperties: PolyEditExtrudeProperties;
	OffsetProperties: PolyEditOffsetProperties;
	PushPullProperties: PolyEditPushPullProperties;
	ExtrudeHeightMechanic: PlaneDistanceFromHitMechanic;
	ActivityContext: PolyEditActivityContext;
	static Load(ResourceName: string): PolyEditExtrudeActivity;
	static Find(Outer: UObject, ResourceName: string): PolyEditExtrudeActivity;
	static GetDefaultObject(): PolyEditExtrudeActivity;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PolyEditExtrudeActivity;
	static C(Other: UObject | any): PolyEditExtrudeActivity;
}

declare class PolyEditInsetOutsetProperties extends InteractiveToolPropertySet { 
	Softness: number;
	bBoundaryOnly: boolean;
	AreaScale: number;
	bReproject: boolean;
	bOutset: boolean;
	static Load(ResourceName: string): PolyEditInsetOutsetProperties;
	static Find(Outer: UObject, ResourceName: string): PolyEditInsetOutsetProperties;
	static GetDefaultObject(): PolyEditInsetOutsetProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PolyEditInsetOutsetProperties;
	static C(Other: UObject | any): PolyEditInsetOutsetProperties;
}

declare class PolyEditInsetOutsetActivity extends InteractiveToolActivity { 
	Settings: PolyEditInsetOutsetProperties;
	EditPreview: PolyEditPreviewMesh;
	CurveDistMechanic: SpatialCurveDistanceMechanic;
	ActivityContext: PolyEditActivityContext;
	static Load(ResourceName: string): PolyEditInsetOutsetActivity;
	static Find(Outer: UObject, ResourceName: string): PolyEditInsetOutsetActivity;
	static GetDefaultObject(): PolyEditInsetOutsetActivity;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PolyEditInsetOutsetActivity;
	static C(Other: UObject | any): PolyEditInsetOutsetActivity;
}

declare type EPolyEditCutPlaneOrientation = 'FaceNormals' | 'ViewDirection' | 'EPolyEditCutPlaneOrientation_MAX';
declare var EPolyEditCutPlaneOrientation : { FaceNormals:'FaceNormals',ViewDirection:'ViewDirection',EPolyEditCutPlaneOrientation_MAX:'EPolyEditCutPlaneOrientation_MAX', };
declare class PolyEditCutProperties extends InteractiveToolPropertySet { 
	Orientation: EPolyEditCutPlaneOrientation;
	bSnapToVertices: boolean;
	static Load(ResourceName: string): PolyEditCutProperties;
	static Find(Outer: UObject, ResourceName: string): PolyEditCutProperties;
	static GetDefaultObject(): PolyEditCutProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PolyEditCutProperties;
	static C(Other: UObject | any): PolyEditCutProperties;
}

declare class PolyEditCutFacesActivity extends InteractiveToolActivity { 
	CutProperties: PolyEditCutProperties;
	EditPreview: PolyEditPreviewMesh;
	SurfacePathMechanic: CollectSurfacePathMechanic;
	ActivityContext: PolyEditActivityContext;
	static Load(ResourceName: string): PolyEditCutFacesActivity;
	static Find(Outer: UObject, ResourceName: string): PolyEditCutFacesActivity;
	static GetDefaultObject(): PolyEditCutFacesActivity;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PolyEditCutFacesActivity;
	static C(Other: UObject | any): PolyEditCutFacesActivity;
}

declare class PolyEditSetUVProperties extends InteractiveToolPropertySet { 
	bShowMaterial: boolean;
	static Load(ResourceName: string): PolyEditSetUVProperties;
	static Find(Outer: UObject, ResourceName: string): PolyEditSetUVProperties;
	static GetDefaultObject(): PolyEditSetUVProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PolyEditSetUVProperties;
	static C(Other: UObject | any): PolyEditSetUVProperties;
}

declare class PolyEditPlanarProjectionUVActivity extends InteractiveToolActivity { 
	SetUVProperties: PolyEditSetUVProperties;
	EditPreview: PolyEditPreviewMesh;
	SurfacePathMechanic: CollectSurfacePathMechanic;
	ActivityContext: PolyEditActivityContext;
	static Load(ResourceName: string): PolyEditPlanarProjectionUVActivity;
	static Find(Outer: UObject, ResourceName: string): PolyEditPlanarProjectionUVActivity;
	static GetDefaultObject(): PolyEditPlanarProjectionUVActivity;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PolyEditPlanarProjectionUVActivity;
	static C(Other: UObject | any): PolyEditPlanarProjectionUVActivity;
}

declare type EGroupEdgeInsertionMode = 'Retriangulate' | 'PlaneCut' | 'EGroupEdgeInsertionMode_MAX';
declare var EGroupEdgeInsertionMode : { Retriangulate:'Retriangulate',PlaneCut:'PlaneCut',EGroupEdgeInsertionMode_MAX:'EGroupEdgeInsertionMode_MAX', };
declare class GroupEdgeInsertionProperties extends InteractiveToolPropertySet { 
	InsertionMode: EGroupEdgeInsertionMode;
	VertexTolerance: any;
	static Load(ResourceName: string): GroupEdgeInsertionProperties;
	static Find(Outer: UObject, ResourceName: string): GroupEdgeInsertionProperties;
	static GetDefaultObject(): GroupEdgeInsertionProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GroupEdgeInsertionProperties;
	static C(Other: UObject | any): GroupEdgeInsertionProperties;
}

declare class PolyEditInsertEdgeActivity extends InteractiveToolActivity { 
	Settings: GroupEdgeInsertionProperties;
	ActivityContext: PolyEditActivityContext;
	static Load(ResourceName: string): PolyEditInsertEdgeActivity;
	static Find(Outer: UObject, ResourceName: string): PolyEditInsertEdgeActivity;
	static GetDefaultObject(): PolyEditInsertEdgeActivity;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PolyEditInsertEdgeActivity;
	static C(Other: UObject | any): PolyEditInsertEdgeActivity;
}

declare type EEdgeLoopPositioningMode = 'Even' | 'ProportionOffset' | 'DistanceOffset' | 'EEdgeLoopPositioningMode_MAX';
declare var EEdgeLoopPositioningMode : { Even:'Even',ProportionOffset:'ProportionOffset',DistanceOffset:'DistanceOffset',EEdgeLoopPositioningMode_MAX:'EEdgeLoopPositioningMode_MAX', };
declare type EEdgeLoopInsertionMode = 'Retriangulate' | 'PlaneCut' | 'EEdgeLoopInsertionMode_MAX';
declare var EEdgeLoopInsertionMode : { Retriangulate:'Retriangulate',PlaneCut:'PlaneCut',EEdgeLoopInsertionMode_MAX:'EEdgeLoopInsertionMode_MAX', };
declare class EdgeLoopInsertionProperties extends InteractiveToolPropertySet { 
	PositionMode: EEdgeLoopPositioningMode;
	InsertionMode: EEdgeLoopInsertionMode;
	NumLoops: number;
	ProportionOffset: any;
	DistanceOffset: any;
	bInteractive: boolean;
	bFlipOffsetDirection: boolean;
	bHighlightProblemGroups: boolean;
	VertexTolerance: any;
	static Load(ResourceName: string): EdgeLoopInsertionProperties;
	static Find(Outer: UObject, ResourceName: string): EdgeLoopInsertionProperties;
	static GetDefaultObject(): EdgeLoopInsertionProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EdgeLoopInsertionProperties;
	static C(Other: UObject | any): EdgeLoopInsertionProperties;
}

declare class PolyEditInsertEdgeLoopActivity extends InteractiveToolActivity { 
	Settings: EdgeLoopInsertionProperties;
	ActivityContext: PolyEditActivityContext;
	static Load(ResourceName: string): PolyEditInsertEdgeLoopActivity;
	static Find(Outer: UObject, ResourceName: string): PolyEditInsertEdgeLoopActivity;
	static GetDefaultObject(): PolyEditInsertEdgeLoopActivity;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PolyEditInsertEdgeLoopActivity;
	static C(Other: UObject | any): PolyEditInsertEdgeLoopActivity;
}

declare class PolyEditBevelEdgeProperties extends InteractiveToolPropertySet { 
	BevelDistance: any;
	static Load(ResourceName: string): PolyEditBevelEdgeProperties;
	static Find(Outer: UObject, ResourceName: string): PolyEditBevelEdgeProperties;
	static GetDefaultObject(): PolyEditBevelEdgeProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PolyEditBevelEdgeProperties;
	static C(Other: UObject | any): PolyEditBevelEdgeProperties;
}

declare class PolyEditBevelEdgeActivity extends InteractiveToolActivity { 
	BevelProperties: PolyEditBevelEdgeProperties;
	ActivityContext: PolyEditActivityContext;
	static Load(ResourceName: string): PolyEditBevelEdgeActivity;
	static Find(Outer: UObject, ResourceName: string): PolyEditBevelEdgeActivity;
	static GetDefaultObject(): PolyEditBevelEdgeActivity;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PolyEditBevelEdgeActivity;
	static C(Other: UObject | any): PolyEditBevelEdgeActivity;
}

declare class EditMeshPolygonsTool extends SingleSelectionMeshEditingTool { 
	Preview: MeshOpPreviewWithBackgroundCompute;
	CommonProps: PolyEditCommonProperties;
	EditActions: EditMeshPolygonsToolActions;
	EditActions_Triangles: EditMeshPolygonsToolActions_Triangles;
	EditEdgeActions: EditMeshPolygonsToolEdgeActions;
	EditEdgeActions_Triangles: EditMeshPolygonsToolEdgeActions_Triangles;
	EditUVActions: EditMeshPolygonsToolUVActions;
	CancelAction: EditMeshPolygonsToolCancelAction;
	AcceptCancelAction: EditMeshPolygonsToolAcceptCancelAction;
	ExtrudeActivity: PolyEditExtrudeActivity;
	InsetOutsetActivity: PolyEditInsetOutsetActivity;
	CutFacesActivity: PolyEditCutFacesActivity;
	PlanarProjectionUVActivity: PolyEditPlanarProjectionUVActivity;
	InsertEdgeActivity: PolyEditInsertEdgeActivity;
	InsertEdgeLoopActivity: PolyEditInsertEdgeLoopActivity;
	BevelEdgeActivity: PolyEditBevelEdgeActivity;
	ActivityContext: PolyEditActivityContext;
	SelectionMechanic: PolygonSelectionMechanic;
	DragAlignmentMechanic: DragAlignmentMechanic;
	TransformGizmo: CombinedTransformGizmo;
	TransformProxy: TransformProxy;
	static Load(ResourceName: string): EditMeshPolygonsTool;
	static Find(Outer: UObject, ResourceName: string): EditMeshPolygonsTool;
	static GetDefaultObject(): EditMeshPolygonsTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditMeshPolygonsTool;
	static C(Other: UObject | any): EditMeshPolygonsTool;
}

declare type ESetMeshMaterialMode = 'Original' | 'Checkerboard' | 'Override' | 'ESetMeshMaterialMode_MAX';
declare var ESetMeshMaterialMode : { Original:'Original',Checkerboard:'Checkerboard',Override:'Override',ESetMeshMaterialMode_MAX:'ESetMeshMaterialMode_MAX', };
declare class ExistingMeshMaterialProperties extends InteractiveToolPropertySet { 
	MaterialMode: ESetMeshMaterialMode;
	CheckerDensity: number;
	OverrideMaterial: MaterialInterface;
	UVChannel: string;
	UVChannelNamesList: string[];
	CheckerMaterial: MaterialInstanceDynamic;
	static Load(ResourceName: string): ExistingMeshMaterialProperties;
	static Find(Outer: UObject, ResourceName: string): ExistingMeshMaterialProperties;
	static GetDefaultObject(): ExistingMeshMaterialProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ExistingMeshMaterialProperties;
	GetUVChannelNamesFunc(): string[];
	static C(Other: UObject | any): ExistingMeshMaterialProperties;
}

declare type EMeshEditingMaterialModes = 'ExistingMaterial' | 'Diffuse' | 'Grey' | 'Soft' | 'Transparent' | 'TangentNormal' | 'VertexColor' | 'CustomImage' | 'Custom' | 'EMeshEditingMaterialModes_MAX';
declare var EMeshEditingMaterialModes : { ExistingMaterial:'ExistingMaterial',Diffuse:'Diffuse',Grey:'Grey',Soft:'Soft',Transparent:'Transparent',TangentNormal:'TangentNormal',VertexColor:'VertexColor',CustomImage:'CustomImage',Custom:'Custom',EMeshEditingMaterialModes_MAX:'EMeshEditingMaterialModes_MAX', };
declare class MeshEditingViewProperties extends InteractiveToolPropertySet { 
	bShowWireframe: boolean;
	MaterialMode: EMeshEditingMaterialModes;
	bFlatShading: boolean;
	Color: LinearColor;
	UImage: Texture2D;
	Opacity: any;
	TransparentMaterialColor: LinearColor;
	bTwoSided: boolean;
	CustomMaterial: any;
	static Load(ResourceName: string): MeshEditingViewProperties;
	static Find(Outer: UObject, ResourceName: string): MeshEditingViewProperties;
	static GetDefaultObject(): MeshEditingViewProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshEditingViewProperties;
	static C(Other: UObject | any): MeshEditingViewProperties;
}

declare class MeshUVChannelProperties extends InteractiveToolPropertySet { 
	UVChannel: string;
	UVChannelNamesList: string[];
	static Load(ResourceName: string): MeshUVChannelProperties;
	static Find(Outer: UObject, ResourceName: string): MeshUVChannelProperties;
	static GetDefaultObject(): MeshUVChannelProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshUVChannelProperties;
	GetUVChannelNamesFunc(): string[];
	static C(Other: UObject | any): MeshUVChannelProperties;
}

declare class RecomputeUVsToolBuilder extends SingleSelectionMeshEditingToolBuilder { 
	static Load(ResourceName: string): RecomputeUVsToolBuilder;
	static Find(Outer: UObject, ResourceName: string): RecomputeUVsToolBuilder;
	static GetDefaultObject(): RecomputeUVsToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RecomputeUVsToolBuilder;
	static C(Other: UObject | any): RecomputeUVsToolBuilder;
}

declare class RecomputeUVsTool extends SingleSelectionMeshEditingTool { 
	UVChannelProperties: MeshUVChannelProperties;
	Settings: RecomputeUVsToolProperties;
	PolygroupLayerProperties: PolygroupLayersProperties;
	MaterialSettings: ExistingMeshMaterialProperties;
	bCreateUVLayoutViewOnSetup: boolean;
	UVLayoutView: UVLayoutPreview;
	RecomputeUVsOpFactory: RecomputeUVsOpFactory;
	Preview: MeshOpPreviewWithBackgroundCompute;
	static Load(ResourceName: string): RecomputeUVsTool;
	static Find(Outer: UObject, ResourceName: string): RecomputeUVsTool;
	static GetDefaultObject(): RecomputeUVsTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RecomputeUVsTool;
	static C(Other: UObject | any): RecomputeUVsTool;
}

declare class UVLayoutToolBuilder extends MultiSelectionMeshEditingToolBuilder { 
	static Load(ResourceName: string): UVLayoutToolBuilder;
	static Find(Outer: UObject, ResourceName: string): UVLayoutToolBuilder;
	static GetDefaultObject(): UVLayoutToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): UVLayoutToolBuilder;
	static C(Other: UObject | any): UVLayoutToolBuilder;
}

declare class UVLayoutTool extends MultiSelectionMeshEditingTool { 
	UVChannelProperties: MeshUVChannelProperties;
	BasicProperties: UVLayoutProperties;
	MaterialSettings: ExistingMeshMaterialProperties;
	Previews: MeshOpPreviewWithBackgroundCompute[];
	Factories: UVLayoutOperatorFactory[];
	UVLayoutView: UVLayoutPreview;
	static Load(ResourceName: string): UVLayoutTool;
	static Find(Outer: UObject, ResourceName: string): UVLayoutTool;
	static GetDefaultObject(): UVLayoutTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): UVLayoutTool;
	static C(Other: UObject | any): UVLayoutTool;
}

declare class UVProjectionToolBuilder extends SingleSelectionMeshEditingToolBuilder { 
	static Load(ResourceName: string): UVProjectionToolBuilder;
	static Find(Outer: UObject, ResourceName: string): UVProjectionToolBuilder;
	static GetDefaultObject(): UVProjectionToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): UVProjectionToolBuilder;
	static C(Other: UObject | any): UVProjectionToolBuilder;
}

declare class UVProjectionToolEditActions extends InteractiveToolPropertySet { 
	static Load(ResourceName: string): UVProjectionToolEditActions;
	static Find(Outer: UObject, ResourceName: string): UVProjectionToolEditActions;
	static GetDefaultObject(): UVProjectionToolEditActions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): UVProjectionToolEditActions;
	Reset(): void;
	AutoFitAlign(): void;
	AutoFit(): void;
	static C(Other: UObject | any): UVProjectionToolEditActions;
}

declare type EUVProjectionMethod = 'Box' | 'Cylinder' | 'Plane' | 'ExpMap' | 'EUVProjectionMethod_MAX';
declare var EUVProjectionMethod : { Box:'Box',Cylinder:'Cylinder',Plane:'Plane',ExpMap:'ExpMap',EUVProjectionMethod_MAX:'EUVProjectionMethod_MAX', };
declare type EUVProjectionToolInitializationMode = 'Default' | 'UsePrevious' | 'AutoFit' | 'AutoFitAlign' | 'EUVProjectionToolInitializationMode_MAX';
declare var EUVProjectionToolInitializationMode : { Default:'Default',UsePrevious:'UsePrevious',AutoFit:'AutoFit',AutoFitAlign:'AutoFitAlign',EUVProjectionToolInitializationMode_MAX:'EUVProjectionToolInitializationMode_MAX', };
declare class UVProjectionToolProperties extends InteractiveToolPropertySet { 
	ProjectionType: EUVProjectionMethod;
	Dimensions: Vector;
	bUniformDimensions: boolean;
	Initialization: EUVProjectionToolInitializationMode;
	CylinderSplitAngle: number;
	ExpMapNormalBlending: number;
	ExpMapSmoothingSteps: number;
	ExpMapSmoothingAlpha: number;
	Rotation: number;
	Scale: Vector2D;
	Translation: Vector2D;
	SavedDimensions: Vector;
	bSavedUniformDimensions: boolean;
	SavedTransform: Transform;
	static Load(ResourceName: string): UVProjectionToolProperties;
	static Find(Outer: UObject, ResourceName: string): UVProjectionToolProperties;
	static GetDefaultObject(): UVProjectionToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): UVProjectionToolProperties;
	static C(Other: UObject | any): UVProjectionToolProperties;
}

declare class UVProjectionTool extends SingleSelectionMeshEditingTool { 
	UVChannelProperties: MeshUVChannelProperties;
	BasicProperties: UVProjectionToolProperties;
	EditActions: UVProjectionToolEditActions;
	MaterialSettings: ExistingMeshMaterialProperties;
	Preview: MeshOpPreviewWithBackgroundCompute;
	CheckerMaterial: MaterialInstanceDynamic;
	TransformGizmo: CombinedTransformGizmo;
	TransformProxy: TransformProxy;
	OperatorFactory: UVProjectionOperatorFactory;
	EdgeRenderer: PreviewGeometry;
	ClickToSetPlaneBehavior: SingleClickInputBehavior;
	static Load(ResourceName: string): UVProjectionTool;
	static Find(Outer: UObject, ResourceName: string): UVProjectionTool;
	static GetDefaultObject(): UVProjectionTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): UVProjectionTool;
	static C(Other: UObject | any): UVProjectionTool;
}

declare class UVProjectionOperatorFactory extends UObject { 
	Tool: UVProjectionTool;
	static Load(ResourceName: string): UVProjectionOperatorFactory;
	static Find(Outer: UObject, ResourceName: string): UVProjectionOperatorFactory;
	static GetDefaultObject(): UVProjectionOperatorFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): UVProjectionOperatorFactory;
	static C(Other: UObject | any): UVProjectionOperatorFactory;
}

declare class AddPatchToolBuilder extends InteractiveToolBuilder { 
	static Load(ResourceName: string): AddPatchToolBuilder;
	static Find(Outer: UObject, ResourceName: string): AddPatchToolBuilder;
	static GetDefaultObject(): AddPatchToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AddPatchToolBuilder;
	static C(Other: UObject | any): AddPatchToolBuilder;
}

declare class AddPatchToolProperties extends InteractiveToolPropertySet { 
	Width: number;
	Rotation: number;
	Subdivisions: number;
	Shift: number;
	static Load(ResourceName: string): AddPatchToolProperties;
	static Find(Outer: UObject, ResourceName: string): AddPatchToolProperties;
	static GetDefaultObject(): AddPatchToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AddPatchToolProperties;
	static C(Other: UObject | any): AddPatchToolProperties;
}

declare class AddPatchTool extends SingleClickTool { 
	ShapeSettings: AddPatchToolProperties;
	MaterialProperties: NewMeshMaterialProperties;
	PreviewMesh: PreviewMesh;
	static Load(ResourceName: string): AddPatchTool;
	static Find(Outer: UObject, ResourceName: string): AddPatchTool;
	static GetDefaultObject(): AddPatchTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AddPatchTool;
	static C(Other: UObject | any): AddPatchTool;
}

declare class AlignObjectsToolBuilder extends MultiSelectionMeshEditingToolBuilder { 
	static Load(ResourceName: string): AlignObjectsToolBuilder;
	static Find(Outer: UObject, ResourceName: string): AlignObjectsToolBuilder;
	static GetDefaultObject(): AlignObjectsToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AlignObjectsToolBuilder;
	static C(Other: UObject | any): AlignObjectsToolBuilder;
}

declare type EAlignObjectsAlignTypes = 'Pivots' | 'BoundingBoxes' | 'EAlignObjectsAlignTypes_MAX';
declare var EAlignObjectsAlignTypes : { Pivots:'Pivots',BoundingBoxes:'BoundingBoxes',EAlignObjectsAlignTypes_MAX:'EAlignObjectsAlignTypes_MAX', };
declare type EAlignObjectsAlignToOptions = 'FirstSelected' | 'LastSelected' | 'Combined' | 'EAlignObjectsAlignToOptions_MAX';
declare var EAlignObjectsAlignToOptions : { FirstSelected:'FirstSelected',LastSelected:'LastSelected',Combined:'Combined',EAlignObjectsAlignToOptions_MAX:'EAlignObjectsAlignToOptions_MAX', };
declare type EAlignObjectsBoxPoint = 'Center' | 'Bottom' | 'Top' | 'Left' | 'Right' | 'Front' | 'Back' | 'Min' | 'Max' | 'EAlignObjectsBoxPoint_MAX';
declare var EAlignObjectsBoxPoint : { Center:'Center',Bottom:'Bottom',Top:'Top',Left:'Left',Right:'Right',Front:'Front',Back:'Back',Min:'Min',Max:'Max',EAlignObjectsBoxPoint_MAX:'EAlignObjectsBoxPoint_MAX', };
declare class AlignObjectsToolProperties extends InteractiveToolPropertySet { 
	AlignType: EAlignObjectsAlignTypes;
	AlignTo: EAlignObjectsAlignToOptions;
	BoxPosition: EAlignObjectsBoxPoint;
	bAlignX: boolean;
	bAlignY: boolean;
	bAlignZ: boolean;
	static Load(ResourceName: string): AlignObjectsToolProperties;
	static Find(Outer: UObject, ResourceName: string): AlignObjectsToolProperties;
	static GetDefaultObject(): AlignObjectsToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AlignObjectsToolProperties;
	static C(Other: UObject | any): AlignObjectsToolProperties;
}

declare class AlignObjectsTool extends MultiSelectionMeshEditingTool { 
	AlignProps: AlignObjectsToolProperties;
	static Load(ResourceName: string): AlignObjectsTool;
	static Find(Outer: UObject, ResourceName: string): AlignObjectsTool;
	static GetDefaultObject(): AlignObjectsTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AlignObjectsTool;
	static C(Other: UObject | any): AlignObjectsTool;
}

declare class BakeMeshAttributeMapsToolBuilder extends MultiSelectionMeshEditingToolBuilder { 
	static Load(ResourceName: string): BakeMeshAttributeMapsToolBuilder;
	static Find(Outer: UObject, ResourceName: string): BakeMeshAttributeMapsToolBuilder;
	static GetDefaultObject(): BakeMeshAttributeMapsToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BakeMeshAttributeMapsToolBuilder;
	static C(Other: UObject | any): BakeMeshAttributeMapsToolBuilder;
}

declare type EBakeTextureResolution = 'Resolution16' | 'Resolution32' | 'Resolution64' | 'Resolution128' | 'Resolution256' | 'Resolution512' | 'Resolution1024' | 'Resolution2048' | 'Resolution4096' | 'Resolution8192' | 'EBakeTextureResolution_MAX';
declare var EBakeTextureResolution : { Resolution16:'Resolution16',Resolution32:'Resolution32',Resolution64:'Resolution64',Resolution128:'Resolution128',Resolution256:'Resolution256',Resolution512:'Resolution512',Resolution1024:'Resolution1024',Resolution2048:'Resolution2048',Resolution4096:'Resolution4096',Resolution8192:'Resolution8192',EBakeTextureResolution_MAX:'EBakeTextureResolution_MAX', };
declare type EBakeTextureBitDepth = 'ChannelBits8' | 'ChannelBits16' | 'EBakeTextureBitDepth_MAX';
declare var EBakeTextureBitDepth : { ChannelBits8:'ChannelBits8',ChannelBits16:'ChannelBits16',EBakeTextureBitDepth_MAX:'EBakeTextureBitDepth_MAX', };
declare type EBakeTextureSamplesPerPixel = 'Sample1' | 'Sample4' | 'Sample16' | 'Sample64' | 'Sample256' | 'EBakeTextureSamplesPerPixel_MAX';
declare var EBakeTextureSamplesPerPixel : { Sample1:'Sample1',Sample4:'Sample4',Sample16:'Sample16',Sample64:'Sample64',Sample256:'Sample256',EBakeTextureSamplesPerPixel_MAX:'EBakeTextureSamplesPerPixel_MAX', };
declare class BakeMeshAttributeMapsToolProperties extends InteractiveToolPropertySet { 
	MapTypes: number;
	MapPreview: string;
	Resolution: EBakeTextureResolution;
	BitDepth: EBakeTextureBitDepth;
	SamplesPerPixel: EBakeTextureSamplesPerPixel;
	MapPreviewNamesList: string[];
	static Load(ResourceName: string): BakeMeshAttributeMapsToolProperties;
	static Find(Outer: UObject, ResourceName: string): BakeMeshAttributeMapsToolProperties;
	static GetDefaultObject(): BakeMeshAttributeMapsToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BakeMeshAttributeMapsToolProperties;
	GetMapPreviewNamesFunc(): string[];
	static C(Other: UObject | any): BakeMeshAttributeMapsToolProperties;
}

declare class BakeOcclusionMapToolProperties extends InteractiveToolPropertySet { 
	OcclusionRays: number;
	MaxDistance: number;
	SpreadAngle: number;
	BiasAngle: number;
	static Load(ResourceName: string): BakeOcclusionMapToolProperties;
	static Find(Outer: UObject, ResourceName: string): BakeOcclusionMapToolProperties;
	static GetDefaultObject(): BakeOcclusionMapToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BakeOcclusionMapToolProperties;
	static C(Other: UObject | any): BakeOcclusionMapToolProperties;
}

declare type EBakeCurvatureTypeMode = 'MeanAverage' | 'Max' | 'Min' | 'Gaussian' | 'EBakeCurvatureTypeMode_MAX';
declare var EBakeCurvatureTypeMode : { MeanAverage:'MeanAverage',Max:'Max',Min:'Min',Gaussian:'Gaussian',EBakeCurvatureTypeMode_MAX:'EBakeCurvatureTypeMode_MAX', };
declare type EBakeCurvatureColorMode = 'Grayscale' | 'RedBlue' | 'RedGreenBlue' | 'EBakeCurvatureColorMode_MAX';
declare var EBakeCurvatureColorMode : { Grayscale:'Grayscale',RedBlue:'RedBlue',RedGreenBlue:'RedGreenBlue',EBakeCurvatureColorMode_MAX:'EBakeCurvatureColorMode_MAX', };
declare type EBakeCurvatureClampMode = 'None' | 'OnlyPositive' | 'OnlyNegative' | 'EBakeCurvatureClampMode_MAX';
declare var EBakeCurvatureClampMode : { None:'None',OnlyPositive:'OnlyPositive',OnlyNegative:'OnlyNegative',EBakeCurvatureClampMode_MAX:'EBakeCurvatureClampMode_MAX', };
declare class BakeCurvatureMapToolProperties extends InteractiveToolPropertySet { 
	CurvatureType: EBakeCurvatureTypeMode;
	ColorMapping: EBakeCurvatureColorMode;
	ColorRangeMultiplier: number;
	MinRangeMultiplier: number;
	Clamping: EBakeCurvatureClampMode;
	static Load(ResourceName: string): BakeCurvatureMapToolProperties;
	static Find(Outer: UObject, ResourceName: string): BakeCurvatureMapToolProperties;
	static GetDefaultObject(): BakeCurvatureMapToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BakeCurvatureMapToolProperties;
	static C(Other: UObject | any): BakeCurvatureMapToolProperties;
}

declare class BakeTexture2DProperties extends InteractiveToolPropertySet { 
	SourceTexture: Texture2D;
	UVLayer: string;
	UVLayerNamesList: string[];
	static Load(ResourceName: string): BakeTexture2DProperties;
	static Find(Outer: UObject, ResourceName: string): BakeTexture2DProperties;
	static GetDefaultObject(): BakeTexture2DProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BakeTexture2DProperties;
	GetUVLayerNamesFunc(): string[];
	static C(Other: UObject | any): BakeTexture2DProperties;
}

declare class BakeMultiTexture2DProperties extends InteractiveToolPropertySet { 
	MaterialIDSourceTextures: Texture2D[];
	UVLayer: string;
	UVLayerNamesList: string[];
	AllSourceTextures: Texture2D[];
	static Load(ResourceName: string): BakeMultiTexture2DProperties;
	static Find(Outer: UObject, ResourceName: string): BakeMultiTexture2DProperties;
	static GetDefaultObject(): BakeMultiTexture2DProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BakeMultiTexture2DProperties;
	GetUVLayerNamesFunc(): string[];
	static C(Other: UObject | any): BakeMultiTexture2DProperties;
}

declare class BakeMeshAttributeTool extends MultiSelectionMeshEditingTool { 
	OcclusionSettings: BakeOcclusionMapToolProperties;
	CurvatureSettings: BakeCurvatureMapToolProperties;
	TextureSettings: BakeTexture2DProperties;
	MultiTextureSettings: BakeMultiTexture2DProperties;
	WorkingPreviewMaterial: MaterialInstanceDynamic;
	ErrorPreviewMaterial: MaterialInstanceDynamic;
	static Load(ResourceName: string): BakeMeshAttributeTool;
	static Find(Outer: UObject, ResourceName: string): BakeMeshAttributeTool;
	static GetDefaultObject(): BakeMeshAttributeTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BakeMeshAttributeTool;
	static C(Other: UObject | any): BakeMeshAttributeTool;
}

declare class BakeVisualizationProperties extends InteractiveToolPropertySet { 
	bPreviewAsMaterial: boolean;
	Brightness: number;
	AOMultiplier: number;
	static Load(ResourceName: string): BakeVisualizationProperties;
	static Find(Outer: UObject, ResourceName: string): BakeVisualizationProperties;
	static GetDefaultObject(): BakeVisualizationProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BakeVisualizationProperties;
	static C(Other: UObject | any): BakeVisualizationProperties;
}

declare class BakeMeshAttributeMapsToolBase extends BakeMeshAttributeTool { 
	VisualizationProps: BakeVisualizationProperties;
	PreviewMesh: PreviewMesh;
	PreviewMaterial: MaterialInstanceDynamic;
	BentNormalPreviewMaterial: MaterialInstanceDynamic;
	CachedMaps: any;
	EmptyNormalMap: Texture2D;
	EmptyColorMapBlack: Texture2D;
	EmptyColorMapWhite: Texture2D;
	static Load(ResourceName: string): BakeMeshAttributeMapsToolBase;
	static Find(Outer: UObject, ResourceName: string): BakeMeshAttributeMapsToolBase;
	static GetDefaultObject(): BakeMeshAttributeMapsToolBase;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BakeMeshAttributeMapsToolBase;
	static C(Other: UObject | any): BakeMeshAttributeMapsToolBase;
}

declare class BakeInputMeshProperties extends InteractiveToolPropertySet { 
	TargetStaticMesh: StaticMesh;
	TargetSkeletalMesh: SkeletalMesh;
	TargetDynamicMesh: Actor;
	TargetUVLayer: string;
	bHasTargetUVLayer: boolean;
	SourceStaticMesh: StaticMesh;
	SourceSkeletalMesh: SkeletalMesh;
	SourceDynamicMesh: Actor;
	bHideSourceMesh: boolean;
	SourceNormalMap: Texture2D;
	SourceNormalMapUVLayer: string;
	bHasSourceNormalMap: boolean;
	ProjectionDistance: number;
	bProjectionInWorldSpace: boolean;
	TargetUVLayerNamesList: string[];
	SourceUVLayerNamesList: string[];
	static Load(ResourceName: string): BakeInputMeshProperties;
	static Find(Outer: UObject, ResourceName: string): BakeInputMeshProperties;
	static GetDefaultObject(): BakeInputMeshProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BakeInputMeshProperties;
	GetTargetUVLayerNamesFunc(): string[];
	GetSourceUVLayerNamesFunc(): string[];
	static C(Other: UObject | any): BakeInputMeshProperties;
}

declare class BakeMeshAttributeMapsResultToolProperties extends InteractiveToolPropertySet { 
	Result: any;
	static Load(ResourceName: string): BakeMeshAttributeMapsResultToolProperties;
	static Find(Outer: UObject, ResourceName: string): BakeMeshAttributeMapsResultToolProperties;
	static GetDefaultObject(): BakeMeshAttributeMapsResultToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BakeMeshAttributeMapsResultToolProperties;
	static C(Other: UObject | any): BakeMeshAttributeMapsResultToolProperties;
}

declare class BakeMeshAttributeMapsTool extends BakeMeshAttributeMapsToolBase { 
	InputMeshSettings: BakeInputMeshProperties;
	Settings: BakeMeshAttributeMapsToolProperties;
	ResultSettings: BakeMeshAttributeMapsResultToolProperties;
	static Load(ResourceName: string): BakeMeshAttributeMapsTool;
	static Find(Outer: UObject, ResourceName: string): BakeMeshAttributeMapsTool;
	static GetDefaultObject(): BakeMeshAttributeMapsTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BakeMeshAttributeMapsTool;
	static C(Other: UObject | any): BakeMeshAttributeMapsTool;
}

declare class BakeNormalMapToolProperties extends InteractiveToolPropertySet { 
	static Load(ResourceName: string): BakeNormalMapToolProperties;
	static Find(Outer: UObject, ResourceName: string): BakeNormalMapToolProperties;
	static GetDefaultObject(): BakeNormalMapToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BakeNormalMapToolProperties;
	static C(Other: UObject | any): BakeNormalMapToolProperties;
}

declare class BakeMeshAttributeVertexToolBuilder extends MultiSelectionMeshEditingToolBuilder { 
	static Load(ResourceName: string): BakeMeshAttributeVertexToolBuilder;
	static Find(Outer: UObject, ResourceName: string): BakeMeshAttributeVertexToolBuilder;
	static GetDefaultObject(): BakeMeshAttributeVertexToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BakeMeshAttributeVertexToolBuilder;
	static C(Other: UObject | any): BakeMeshAttributeVertexToolBuilder;
}

declare type EBakeVertexOutput = 'RGBA' | 'PerChannel' | 'EBakeVertexOutput_MAX';
declare var EBakeVertexOutput : { RGBA:'RGBA',PerChannel:'PerChannel',EBakeVertexOutput_MAX:'EBakeVertexOutput_MAX', };
declare type EBakeVertexChannel = 'R' | 'G' | 'B' | 'A' | 'RGBA' | 'EBakeVertexChannel_MAX';
declare var EBakeVertexChannel : { R:'R',G:'G',B:'B',A:'A',RGBA:'RGBA',EBakeVertexChannel_MAX:'EBakeVertexChannel_MAX', };
declare class BakeMeshAttributeVertexToolProperties extends InteractiveToolPropertySet { 
	OutputMode: EBakeVertexOutput;
	OutputType: number;
	OutputTypeR: number;
	OutputTypeG: number;
	OutputTypeB: number;
	OutputTypeA: number;
	PreviewMode: EBakeVertexChannel;
	bSplitAtNormalSeams: boolean;
	bSplitAtUVSeams: boolean;
	static Load(ResourceName: string): BakeMeshAttributeVertexToolProperties;
	static Find(Outer: UObject, ResourceName: string): BakeMeshAttributeVertexToolProperties;
	static GetDefaultObject(): BakeMeshAttributeVertexToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BakeMeshAttributeVertexToolProperties;
	static C(Other: UObject | any): BakeMeshAttributeVertexToolProperties;
}

declare class BakeMeshAttributeVertexTool extends BakeMeshAttributeTool { 
	InputMeshSettings: BakeInputMeshProperties;
	Settings: BakeMeshAttributeVertexToolProperties;
	PreviewMesh: PreviewMesh;
	PreviewMaterial: MaterialInstanceDynamic;
	PreviewAlphaMaterial: MaterialInstanceDynamic;
	static Load(ResourceName: string): BakeMeshAttributeVertexTool;
	static Find(Outer: UObject, ResourceName: string): BakeMeshAttributeVertexTool;
	static GetDefaultObject(): BakeMeshAttributeVertexTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BakeMeshAttributeVertexTool;
	static C(Other: UObject | any): BakeMeshAttributeVertexTool;
}

declare class BakeMultiMeshAttributeMapsToolBuilder extends MultiSelectionMeshEditingToolBuilder { 
	static Load(ResourceName: string): BakeMultiMeshAttributeMapsToolBuilder;
	static Find(Outer: UObject, ResourceName: string): BakeMultiMeshAttributeMapsToolBuilder;
	static GetDefaultObject(): BakeMultiMeshAttributeMapsToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BakeMultiMeshAttributeMapsToolBuilder;
	static C(Other: UObject | any): BakeMultiMeshAttributeMapsToolBuilder;
}

declare class BakeMultiMeshAttributeMapsToolProperties extends InteractiveToolPropertySet { 
	MapTypes: number;
	MapPreview: string;
	Resolution: EBakeTextureResolution;
	BitDepth: EBakeTextureBitDepth;
	SamplesPerPixel: EBakeTextureSamplesPerPixel;
	MapPreviewNamesList: string[];
	static Load(ResourceName: string): BakeMultiMeshAttributeMapsToolProperties;
	static Find(Outer: UObject, ResourceName: string): BakeMultiMeshAttributeMapsToolProperties;
	static GetDefaultObject(): BakeMultiMeshAttributeMapsToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BakeMultiMeshAttributeMapsToolProperties;
	GetMapPreviewNamesFunc(): string[];
	static C(Other: UObject | any): BakeMultiMeshAttributeMapsToolProperties;
}

declare class BakeMultiMeshDetailProperties { 
	SourceMesh: StaticMesh;
	SourceTexture: Texture2D;
	SourceTextureUVLayer: number;
	clone() : BakeMultiMeshDetailProperties;
	static C(Other: UObject | any): BakeMultiMeshDetailProperties;
}

declare class BakeMultiMeshInputToolProperties extends InteractiveToolPropertySet { 
	TargetStaticMesh: StaticMesh;
	TargetUVLayer: string;
	SourceMeshes: BakeMultiMeshDetailProperties[];
	ProjectionDistance: number;
	TargetUVLayerNamesList: string[];
	static Load(ResourceName: string): BakeMultiMeshInputToolProperties;
	static Find(Outer: UObject, ResourceName: string): BakeMultiMeshInputToolProperties;
	static GetDefaultObject(): BakeMultiMeshInputToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BakeMultiMeshInputToolProperties;
	GetTargetUVLayerNamesFunc(): string[];
	static C(Other: UObject | any): BakeMultiMeshInputToolProperties;
}

declare class BakeMultiMeshAttributeMapsTool extends BakeMeshAttributeMapsToolBase { 
	Settings: BakeMultiMeshAttributeMapsToolProperties;
	InputMeshSettings: BakeMultiMeshInputToolProperties;
	ResultSettings: BakeMeshAttributeMapsResultToolProperties;
	static Load(ResourceName: string): BakeMultiMeshAttributeMapsTool;
	static Find(Outer: UObject, ResourceName: string): BakeMultiMeshAttributeMapsTool;
	static GetDefaultObject(): BakeMultiMeshAttributeMapsTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BakeMultiMeshAttributeMapsTool;
	static C(Other: UObject | any): BakeMultiMeshAttributeMapsTool;
}

declare class BakeTransformToolBuilder extends MultiSelectionMeshEditingToolBuilder { 
	static Load(ResourceName: string): BakeTransformToolBuilder;
	static Find(Outer: UObject, ResourceName: string): BakeTransformToolBuilder;
	static GetDefaultObject(): BakeTransformToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BakeTransformToolBuilder;
	static C(Other: UObject | any): BakeTransformToolBuilder;
}

declare type EBakeScaleMethod = 'BakeFullScale' | 'BakeNonuniformScale' | 'DoNotBakeScale' | 'EBakeScaleMethod_MAX';
declare var EBakeScaleMethod : { BakeFullScale:'BakeFullScale',BakeNonuniformScale:'BakeNonuniformScale',DoNotBakeScale:'DoNotBakeScale',EBakeScaleMethod_MAX:'EBakeScaleMethod_MAX', };
declare class BakeTransformToolProperties extends InteractiveToolPropertySet { 
	bBakeRotation: boolean;
	BakeScale: EBakeScaleMethod;
	bRecenterPivot: boolean;
	static Load(ResourceName: string): BakeTransformToolProperties;
	static Find(Outer: UObject, ResourceName: string): BakeTransformToolProperties;
	static GetDefaultObject(): BakeTransformToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BakeTransformToolProperties;
	static C(Other: UObject | any): BakeTransformToolProperties;
}

declare class BakeTransformTool extends MultiSelectionMeshEditingTool { 
	BasicProperties: BakeTransformToolProperties;
	static Load(ResourceName: string): BakeTransformTool;
	static Find(Outer: UObject, ResourceName: string): BakeTransformTool;
	static GetDefaultObject(): BakeTransformTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BakeTransformTool;
	static C(Other: UObject | any): BakeTransformTool;
}

declare type ECollisionGeometryMode = 'Default' | 'SimpleAndComplex' | 'UseSimpleAsComplex' | 'UseComplexAsSimple' | 'ECollisionGeometryMode_MAX';
declare var ECollisionGeometryMode : { Default:'Default',SimpleAndComplex:'SimpleAndComplex',UseSimpleAsComplex:'UseSimpleAsComplex',UseComplexAsSimple:'UseComplexAsSimple',ECollisionGeometryMode_MAX:'ECollisionGeometryMode_MAX', };
declare class PhysicsSphereData { 
	Radius: number;
	Transform: Transform;
	Element: KShapeElem;
	clone() : PhysicsSphereData;
	static C(Other: UObject | any): PhysicsSphereData;
}

declare class PhysicsBoxData { 
	Dimensions: Vector;
	Transform: Transform;
	Element: KShapeElem;
	clone() : PhysicsBoxData;
	static C(Other: UObject | any): PhysicsBoxData;
}

declare class PhysicsCapsuleData { 
	Radius: number;
	Length: number;
	Transform: Transform;
	Element: KShapeElem;
	clone() : PhysicsCapsuleData;
	static C(Other: UObject | any): PhysicsCapsuleData;
}

declare class PhysicsConvexData { 
	NumVertices: number;
	NumFaces: number;
	Element: KShapeElem;
	clone() : PhysicsConvexData;
	static C(Other: UObject | any): PhysicsConvexData;
}

declare class PhysicsObjectToolPropertySet extends InteractiveToolPropertySet { 
	ObjectName: string;
	CollisionType: ECollisionGeometryMode;
	Spheres: PhysicsSphereData[];
	Boxes: PhysicsBoxData[];
	Capsules: PhysicsCapsuleData[];
	Convexes: PhysicsConvexData[];
	static Load(ResourceName: string): PhysicsObjectToolPropertySet;
	static Find(Outer: UObject, ResourceName: string): PhysicsObjectToolPropertySet;
	static GetDefaultObject(): PhysicsObjectToolPropertySet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PhysicsObjectToolPropertySet;
	static C(Other: UObject | any): PhysicsObjectToolPropertySet;
}

declare class CollisionGeometryVisualizationProperties extends InteractiveToolPropertySet { 
	LineThickness: number;
	bShowHidden: boolean;
	Color: Color;
	static Load(ResourceName: string): CollisionGeometryVisualizationProperties;
	static Find(Outer: UObject, ResourceName: string): CollisionGeometryVisualizationProperties;
	static GetDefaultObject(): CollisionGeometryVisualizationProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CollisionGeometryVisualizationProperties;
	static C(Other: UObject | any): CollisionGeometryVisualizationProperties;
}

declare class ConvertMeshesToolBuilder extends MultiSelectionMeshEditingToolBuilder { 
	static Load(ResourceName: string): ConvertMeshesToolBuilder;
	static Find(Outer: UObject, ResourceName: string): ConvertMeshesToolBuilder;
	static GetDefaultObject(): ConvertMeshesToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ConvertMeshesToolBuilder;
	static C(Other: UObject | any): ConvertMeshesToolBuilder;
}

declare class ConvertMeshesToolProperties extends InteractiveToolPropertySet { 
	bTransferMaterials: boolean;
	static Load(ResourceName: string): ConvertMeshesToolProperties;
	static Find(Outer: UObject, ResourceName: string): ConvertMeshesToolProperties;
	static GetDefaultObject(): ConvertMeshesToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ConvertMeshesToolProperties;
	static C(Other: UObject | any): ConvertMeshesToolProperties;
}

declare class ConvertMeshesTool extends MultiSelectionMeshEditingTool { 
	BasicProperties: ConvertMeshesToolProperties;
	OutputTypeProperties: CreateMeshObjectTypeProperties;
	static Load(ResourceName: string): ConvertMeshesTool;
	static Find(Outer: UObject, ResourceName: string): ConvertMeshesTool;
	static GetDefaultObject(): ConvertMeshesTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ConvertMeshesTool;
	static C(Other: UObject | any): ConvertMeshesTool;
}

declare class ConvertToPolygonsToolBuilder extends SingleSelectionMeshEditingToolBuilder { 
	static Load(ResourceName: string): ConvertToPolygonsToolBuilder;
	static Find(Outer: UObject, ResourceName: string): ConvertToPolygonsToolBuilder;
	static GetDefaultObject(): ConvertToPolygonsToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ConvertToPolygonsToolBuilder;
	static C(Other: UObject | any): ConvertToPolygonsToolBuilder;
}

declare type EConvertToPolygonsMode = 'FaceNormalDeviation' | 'FromUVIslands' | 'FromNormalSeams' | 'FromConnectedTris' | 'FromFurthestPointSampling' | 'EConvertToPolygonsMode_MAX';
declare var EConvertToPolygonsMode : { FaceNormalDeviation:'FaceNormalDeviation',FromUVIslands:'FromUVIslands',FromNormalSeams:'FromNormalSeams',FromConnectedTris:'FromConnectedTris',FromFurthestPointSampling:'FromFurthestPointSampling',EConvertToPolygonsMode_MAX:'EConvertToPolygonsMode_MAX', };
declare class ConvertToPolygonsToolProperties extends InteractiveToolPropertySet { 
	ConversionMode: EConvertToPolygonsMode;
	AngleTolerance: number;
	NumPoints: number;
	bSplitExisting: boolean;
	bNormalWeighted: boolean;
	NormalWeighting: number;
	MinGroupSize: number;
	bCalculateNormals: boolean;
	bShowGroupColors: boolean;
	static Load(ResourceName: string): ConvertToPolygonsToolProperties;
	static Find(Outer: UObject, ResourceName: string): ConvertToPolygonsToolProperties;
	static GetDefaultObject(): ConvertToPolygonsToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ConvertToPolygonsToolProperties;
	static C(Other: UObject | any): ConvertToPolygonsToolProperties;
}

declare class ConvertToPolygonsTool extends SingleSelectionMeshEditingTool { 
	Settings: ConvertToPolygonsToolProperties;
	PreviewCompute: MeshOpPreviewWithBackgroundCompute;
	PreviewGeometry: PreviewGeometry;
	static Load(ResourceName: string): ConvertToPolygonsTool;
	static Find(Outer: UObject, ResourceName: string): ConvertToPolygonsTool;
	static GetDefaultObject(): ConvertToPolygonsTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ConvertToPolygonsTool;
	static C(Other: UObject | any): ConvertToPolygonsTool;
}

declare class ConvertToPolygonsOperatorFactory extends UObject { 
	ConvertToPolygonsTool: ConvertToPolygonsTool;
	static Load(ResourceName: string): ConvertToPolygonsOperatorFactory;
	static Find(Outer: UObject, ResourceName: string): ConvertToPolygonsOperatorFactory;
	static GetDefaultObject(): ConvertToPolygonsOperatorFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ConvertToPolygonsOperatorFactory;
	static C(Other: UObject | any): ConvertToPolygonsOperatorFactory;
}

declare class CubeGridToolBuilder extends InteractiveToolWithToolTargetsBuilder { 
	static Load(ResourceName: string): CubeGridToolBuilder;
	static Find(Outer: UObject, ResourceName: string): CubeGridToolBuilder;
	static GetDefaultObject(): CubeGridToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CubeGridToolBuilder;
	static C(Other: UObject | any): CubeGridToolBuilder;
}

declare type ECubeGridToolFaceSelectionMode = 'OutsideBasedOnNormal' | 'InsideBasedOnNormal' | 'OutsideBasedOnViewRay' | 'InsideBasedOnViewRay' | 'ECubeGridToolFaceSelectionMode_MAX';
declare var ECubeGridToolFaceSelectionMode : { OutsideBasedOnNormal:'OutsideBasedOnNormal',InsideBasedOnNormal:'InsideBasedOnNormal',OutsideBasedOnViewRay:'OutsideBasedOnViewRay',InsideBasedOnViewRay:'InsideBasedOnViewRay',ECubeGridToolFaceSelectionMode_MAX:'ECubeGridToolFaceSelectionMode_MAX', };
declare class CubeGridToolProperties extends InteractiveToolPropertySet { 
	GridFrameOrigin: Vector;
	GridFrameOrientation: Rotator;
	bShowGizmo: boolean;
	BlocksPerStep: number;
	PowerOfTwo: number;
	BlockBaseSize: any;
	bCrosswiseDiagonal: boolean;
	PlaneTolerance: any;
	bHitUnrelatedGeometry: boolean;
	bHitGridGroundPlaneIfCloser: boolean;
	FaceSelectionMode: ECubeGridToolFaceSelectionMode;
	ToggleCornerMode: string;
	PushPull: string;
	ResizeGrid: string;
	SlideSelection: string;
	FlipSelection: string;
	GridGizmo: string;
	QuickShiftGizmo: string;
	AlignGizmo: string;
	bInCornerMode: boolean;
	bAllowedToEditGrid: boolean;
	static Load(ResourceName: string): CubeGridToolProperties;
	static Find(Outer: UObject, ResourceName: string): CubeGridToolProperties;
	static GetDefaultObject(): CubeGridToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CubeGridToolProperties;
	static C(Other: UObject | any): CubeGridToolProperties;
}

declare class CubeGridToolActions extends InteractiveToolPropertySet { 
	static Load(ResourceName: string): CubeGridToolActions;
	static Find(Outer: UObject, ResourceName: string): CubeGridToolActions;
	static GetDefaultObject(): CubeGridToolActions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CubeGridToolActions;
	SlideForward(): void;
	SlideBack(): void;
	Push(): void;
	Pull(): void;
	Flip(): void;
	CornerMode(): void;
	static C(Other: UObject | any): CubeGridToolActions;
}

declare class CubeGridDuringActivityActions extends InteractiveToolPropertySet { 
	static Load(ResourceName: string): CubeGridDuringActivityActions;
	static Find(Outer: UObject, ResourceName: string): CubeGridDuringActivityActions;
	static GetDefaultObject(): CubeGridDuringActivityActions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CubeGridDuringActivityActions;
	Done(): void;
	Cancel(): void;
	static C(Other: UObject | any): CubeGridDuringActivityActions;
}

declare class CubeGridTool extends InteractiveTool { 
	GridGizmo: CombinedTransformGizmo;
	GridGizmoAlignmentMechanic: DragAlignmentMechanic;
	GridGizmoTransformProxy: TransformProxy;
	LineSets: PreviewGeometry;
	ClickDragBehavior: ClickDragInputBehavior;
	HoverBehavior: MouseHoverBehavior;
	CtrlMiddleClickBehavior: LocalSingleClickInputBehavior;
	MiddleClickDragBehavior: LocalClickDragInputBehavior;
	Settings: CubeGridToolProperties;
	ToolActions: CubeGridToolActions;
	DuringActivityActions: CubeGridDuringActivityActions;
	MaterialProperties: NewMeshMaterialProperties;
	OutputTypeProperties: CreateMeshObjectTypeProperties;
	Target: ToolTarget;
	Preview: MeshOpPreviewWithBackgroundCompute;
	static Load(ResourceName: string): CubeGridTool;
	static Find(Outer: UObject, ResourceName: string): CubeGridTool;
	static GetDefaultObject(): CubeGridTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CubeGridTool;
	static C(Other: UObject | any): CubeGridTool;
}

declare class DeformMeshPolygonsToolBuilder extends MeshSurfacePointMeshEditingToolBuilder { 
	static Load(ResourceName: string): DeformMeshPolygonsToolBuilder;
	static Find(Outer: UObject, ResourceName: string): DeformMeshPolygonsToolBuilder;
	static GetDefaultObject(): DeformMeshPolygonsToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DeformMeshPolygonsToolBuilder;
	static C(Other: UObject | any): DeformMeshPolygonsToolBuilder;
}

declare type EGroupTopologyDeformationStrategy = 'Linear' | 'Laplacian' | 'EGroupTopologyDeformationStrategy_MAX';
declare var EGroupTopologyDeformationStrategy : { Linear:'Linear',Laplacian:'Laplacian',EGroupTopologyDeformationStrategy_MAX:'EGroupTopologyDeformationStrategy_MAX', };
declare type EQuickTransformerMode = 'AxisTranslation' | 'AxisRotation' | 'EQuickTransformerMode_MAX';
declare var EQuickTransformerMode : { AxisTranslation:'AxisTranslation',AxisRotation:'AxisRotation',EQuickTransformerMode_MAX:'EQuickTransformerMode_MAX', };
declare type EWeightScheme = 'Uniform' | 'Umbrella' | 'Valence' | 'MeanValue' | 'Cotangent' | 'ClampedCotangent' | 'IDTCotangent' | 'EWeightScheme_MAX';
declare var EWeightScheme : { Uniform:'Uniform',Umbrella:'Umbrella',Valence:'Valence',MeanValue:'MeanValue',Cotangent:'Cotangent',ClampedCotangent:'ClampedCotangent',IDTCotangent:'IDTCotangent',EWeightScheme_MAX:'EWeightScheme_MAX', };
declare class DeformMeshPolygonsTransformProperties extends InteractiveToolPropertySet { 
	DeformationStrategy: EGroupTopologyDeformationStrategy;
	TransformMode: EQuickTransformerMode;
	bSelectFaces: boolean;
	bSelectEdges: boolean;
	bSelectVertices: boolean;
	bShowWireframe: boolean;
	SelectedWeightScheme: EWeightScheme;
	HandleWeight: any;
	bPostFixHandles: boolean;
	static Load(ResourceName: string): DeformMeshPolygonsTransformProperties;
	static Find(Outer: UObject, ResourceName: string): DeformMeshPolygonsTransformProperties;
	static GetDefaultObject(): DeformMeshPolygonsTransformProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DeformMeshPolygonsTransformProperties;
	static C(Other: UObject | any): DeformMeshPolygonsTransformProperties;
}

declare class DeformMeshPolygonsTool extends MeshSurfacePointTool { 
	TargetWorld: World;
	PreviewMeshActor: InternalToolFrameworkActor;
	DynamicMeshComponent: DynamicMeshComponent;
	TransformProps: DeformMeshPolygonsTransformProperties;
	static Load(ResourceName: string): DeformMeshPolygonsTool;
	static Find(Outer: UObject, ResourceName: string): DeformMeshPolygonsTool;
	static GetDefaultObject(): DeformMeshPolygonsTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DeformMeshPolygonsTool;
	static C(Other: UObject | any): DeformMeshPolygonsTool;
}

declare type EDisplaceMeshToolDisplaceType = 'Constant' | 'DisplacementMap' | 'RandomNoise' | 'PerlinNoise' | 'SineWave' | 'EDisplaceMeshToolDisplaceType_MAX';
declare var EDisplaceMeshToolDisplaceType : { Constant:'Constant',DisplacementMap:'DisplacementMap',RandomNoise:'RandomNoise',PerlinNoise:'PerlinNoise',SineWave:'SineWave',EDisplaceMeshToolDisplaceType_MAX:'EDisplaceMeshToolDisplaceType_MAX', };
declare type EDisplaceMeshToolSubdivisionType = 'Flat' | 'PNTriangles' | 'EDisplaceMeshToolSubdivisionType_MAX';
declare var EDisplaceMeshToolSubdivisionType : { Flat:'Flat',PNTriangles:'PNTriangles',EDisplaceMeshToolSubdivisionType_MAX:'EDisplaceMeshToolSubdivisionType_MAX', };
declare class DisplaceMeshCommonProperties extends InteractiveToolPropertySet { 
	DisplacementType: EDisplaceMeshToolDisplaceType;
	DisplaceIntensity: number;
	RandomSeed: number;
	SubdivisionType: EDisplaceMeshToolSubdivisionType;
	Subdivisions: number;
	WeightMap: string;
	WeightMapsList: string[];
	bInvertWeightMap: boolean;
	bShowWireframe: boolean;
	bDisableSizeWarning: boolean;
	static Load(ResourceName: string): DisplaceMeshCommonProperties;
	static Find(Outer: UObject, ResourceName: string): DisplaceMeshCommonProperties;
	static GetDefaultObject(): DisplaceMeshCommonProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DisplaceMeshCommonProperties;
	GetWeightMapsFunc(): string[];
	static C(Other: UObject | any): DisplaceMeshCommonProperties;
}

declare type EDisplaceMeshToolChannelType = 'Red' | 'Green' | 'Blue' | 'Alpha' | 'EDisplaceMeshToolChannelType_MAX';
declare var EDisplaceMeshToolChannelType : { Red:'Red',Green:'Green',Blue:'Blue',Alpha:'Alpha',EDisplaceMeshToolChannelType_MAX:'EDisplaceMeshToolChannelType_MAX', };
declare class DisplaceMeshTextureMapProperties extends InteractiveToolPropertySet { 
	DisplacementMap: Texture2D;
	Channel: EDisplaceMeshToolChannelType;
	DisplacementMapBaseValue: number;
	UVScale: Vector2D;
	UVOffset: Vector2D;
	bApplyAdjustmentCurve: boolean;
	AdjustmentCurve: CurveFloat;
	bRecalcNormals: boolean;
	static Load(ResourceName: string): DisplaceMeshTextureMapProperties;
	static Find(Outer: UObject, ResourceName: string): DisplaceMeshTextureMapProperties;
	static GetDefaultObject(): DisplaceMeshTextureMapProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DisplaceMeshTextureMapProperties;
	static C(Other: UObject | any): DisplaceMeshTextureMapProperties;
}

declare class DisplaceMeshDirectionalFilterProperties extends InteractiveToolPropertySet { 
	bEnableFilter: boolean;
	FilterDirection: Vector;
	FilterWidth: number;
	static Load(ResourceName: string): DisplaceMeshDirectionalFilterProperties;
	static Find(Outer: UObject, ResourceName: string): DisplaceMeshDirectionalFilterProperties;
	static GetDefaultObject(): DisplaceMeshDirectionalFilterProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DisplaceMeshDirectionalFilterProperties;
	static C(Other: UObject | any): DisplaceMeshDirectionalFilterProperties;
}

declare class PerlinLayerProperties { 
	Frequency: number;
	Intensity: number;
	clone() : PerlinLayerProperties;
	static C(Other: UObject | any): PerlinLayerProperties;
}

declare class DisplaceMeshPerlinNoiseProperties extends InteractiveToolPropertySet { 
	PerlinLayerProperties: PerlinLayerProperties[];
	static Load(ResourceName: string): DisplaceMeshPerlinNoiseProperties;
	static Find(Outer: UObject, ResourceName: string): DisplaceMeshPerlinNoiseProperties;
	static GetDefaultObject(): DisplaceMeshPerlinNoiseProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DisplaceMeshPerlinNoiseProperties;
	static C(Other: UObject | any): DisplaceMeshPerlinNoiseProperties;
}

declare class DisplaceMeshSineWaveProperties extends InteractiveToolPropertySet { 
	SineWaveFrequency: number;
	SineWavePhaseShift: number;
	SineWaveDirection: Vector;
	static Load(ResourceName: string): DisplaceMeshSineWaveProperties;
	static Find(Outer: UObject, ResourceName: string): DisplaceMeshSineWaveProperties;
	static GetDefaultObject(): DisplaceMeshSineWaveProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DisplaceMeshSineWaveProperties;
	static C(Other: UObject | any): DisplaceMeshSineWaveProperties;
}

declare class DisplaceMeshToolBuilder extends SingleSelectionMeshEditingToolBuilder { 
	static Load(ResourceName: string): DisplaceMeshToolBuilder;
	static Find(Outer: UObject, ResourceName: string): DisplaceMeshToolBuilder;
	static GetDefaultObject(): DisplaceMeshToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DisplaceMeshToolBuilder;
	static C(Other: UObject | any): DisplaceMeshToolBuilder;
}

declare class DisplaceMeshTool extends SingleSelectionMeshEditingTool { 
	CommonProperties: DisplaceMeshCommonProperties;
	DirectionalFilterProperties: DisplaceMeshDirectionalFilterProperties;
	TextureMapProperties: DisplaceMeshTextureMapProperties;
	NoiseProperties: DisplaceMeshPerlinNoiseProperties;
	SineWaveProperties: DisplaceMeshSineWaveProperties;
	ActiveContrastCurveTarget: CurveFloat;
	PreviewMeshActor: InternalToolFrameworkActor;
	DynamicMeshComponent: DynamicMeshComponent;
	static Load(ResourceName: string): DisplaceMeshTool;
	static Find(Outer: UObject, ResourceName: string): DisplaceMeshTool;
	static GetDefaultObject(): DisplaceMeshTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DisplaceMeshTool;
	static C(Other: UObject | any): DisplaceMeshTool;
}

declare class DrawPolyPathToolBuilder extends MeshSurfacePointToolBuilder { 
	static Load(ResourceName: string): DrawPolyPathToolBuilder;
	static Find(Outer: UObject, ResourceName: string): DrawPolyPathToolBuilder;
	static GetDefaultObject(): DrawPolyPathToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DrawPolyPathToolBuilder;
	static C(Other: UObject | any): DrawPolyPathToolBuilder;
}

declare type EDrawPolyPathWidthMode = 'Fixed' | 'Interactive' | 'EDrawPolyPathWidthMode_MAX';
declare var EDrawPolyPathWidthMode : { Fixed:'Fixed',Interactive:'Interactive',EDrawPolyPathWidthMode_MAX:'EDrawPolyPathWidthMode_MAX', };
declare type EDrawPolyPathRadiusMode = 'Fixed' | 'Interactive' | 'EDrawPolyPathRadiusMode_MAX';
declare var EDrawPolyPathRadiusMode : { Fixed:'Fixed',Interactive:'Interactive',EDrawPolyPathRadiusMode_MAX:'EDrawPolyPathRadiusMode_MAX', };
declare type EDrawPolyPathExtrudeMode = 'Flat' | 'Fixed' | 'Interactive' | 'RampFixed' | 'RampInteractive' | 'EDrawPolyPathExtrudeMode_MAX';
declare var EDrawPolyPathExtrudeMode : { Flat:'Flat',Fixed:'Fixed',Interactive:'Interactive',RampFixed:'RampFixed',RampInteractive:'RampInteractive',EDrawPolyPathExtrudeMode_MAX:'EDrawPolyPathExtrudeMode_MAX', };
declare class DrawPolyPathProperties extends InteractiveToolPropertySet { 
	WidthMode: EDrawPolyPathWidthMode;
	Width: number;
	bRoundedCorners: boolean;
	RadiusMode: EDrawPolyPathRadiusMode;
	CornerRadius: number;
	RadialSlices: number;
	bSinglePolyGroup: boolean;
	ExtrudeMode: EDrawPolyPathExtrudeMode;
	ExtrudeHeight: number;
	RampStartRatio: number;
	static Load(ResourceName: string): DrawPolyPathProperties;
	static Find(Outer: UObject, ResourceName: string): DrawPolyPathProperties;
	static GetDefaultObject(): DrawPolyPathProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DrawPolyPathProperties;
	static C(Other: UObject | any): DrawPolyPathProperties;
}

declare type EDrawPolyPathExtrudeDirection = 'SelectionNormal' | 'WorldX' | 'WorldY' | 'WorldZ' | 'LocalX' | 'LocalY' | 'LocalZ' | 'EDrawPolyPathExtrudeDirection_MAX';
declare var EDrawPolyPathExtrudeDirection : { SelectionNormal:'SelectionNormal',WorldX:'WorldX',WorldY:'WorldY',WorldZ:'WorldZ',LocalX:'LocalX',LocalY:'LocalY',LocalZ:'LocalZ',EDrawPolyPathExtrudeDirection_MAX:'EDrawPolyPathExtrudeDirection_MAX', };
declare class DrawPolyPathExtrudeProperties extends InteractiveToolPropertySet { 
	Direction: EDrawPolyPathExtrudeDirection;
	static Load(ResourceName: string): DrawPolyPathExtrudeProperties;
	static Find(Outer: UObject, ResourceName: string): DrawPolyPathExtrudeProperties;
	static GetDefaultObject(): DrawPolyPathExtrudeProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DrawPolyPathExtrudeProperties;
	static C(Other: UObject | any): DrawPolyPathExtrudeProperties;
}

declare class DrawPolyPathTool extends InteractiveTool { 
	OutputTypeProperties: CreateMeshObjectTypeProperties;
	TransformProps: DrawPolyPathProperties;
	ExtrudeProperties: DrawPolyPathExtrudeProperties;
	MaterialProperties: NewMeshMaterialProperties;
	PlaneMechanic: ConstructionPlaneMechanic;
	EditPreview: PolyEditPreviewMesh;
	ExtrudeHeightMechanic: PlaneDistanceFromHitMechanic;
	CurveDistMechanic: SpatialCurveDistanceMechanic;
	SurfacePathMechanic: CollectSurfacePathMechanic;
	static Load(ResourceName: string): DrawPolyPathTool;
	static Find(Outer: UObject, ResourceName: string): DrawPolyPathTool;
	static GetDefaultObject(): DrawPolyPathTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DrawPolyPathTool;
	static C(Other: UObject | any): DrawPolyPathTool;
}

declare class DynamicMeshBrushTool extends BaseBrushTool { 
	PreviewMesh: PreviewMesh;
	static Load(ResourceName: string): DynamicMeshBrushTool;
	static Find(Outer: UObject, ResourceName: string): DynamicMeshBrushTool;
	static GetDefaultObject(): DynamicMeshBrushTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DynamicMeshBrushTool;
	static C(Other: UObject | any): DynamicMeshBrushTool;
}

declare class DynamicMeshSculptToolBuilder extends MeshSurfacePointMeshEditingToolBuilder { 
	static Load(ResourceName: string): DynamicMeshSculptToolBuilder;
	static Find(Outer: UObject, ResourceName: string): DynamicMeshSculptToolBuilder;
	static GetDefaultObject(): DynamicMeshSculptToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DynamicMeshSculptToolBuilder;
	static C(Other: UObject | any): DynamicMeshSculptToolBuilder;
}

declare type EBrushToolSizeType = 'Adaptive' | 'World' | 'EBrushToolSizeType_MAX';
declare var EBrushToolSizeType : { Adaptive:'Adaptive',World:'World',EBrushToolSizeType_MAX:'EBrushToolSizeType_MAX', };
declare class BrushToolRadius { 
	SizeType: EBrushToolSizeType;
	AdaptiveSize: number;
	WorldRadius: number;
	clone() : BrushToolRadius;
	static C(Other: UObject | any): BrushToolRadius;
}

declare class DynamicMeshBrushProperties extends InteractiveToolPropertySet { 
	BrushSize: BrushToolRadius;
	BrushFalloffAmount: number;
	Depth: number;
	bHitBackFaces: boolean;
	static Load(ResourceName: string): DynamicMeshBrushProperties;
	static Find(Outer: UObject, ResourceName: string): DynamicMeshBrushProperties;
	static GetDefaultObject(): DynamicMeshBrushProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DynamicMeshBrushProperties;
	static C(Other: UObject | any): DynamicMeshBrushProperties;
}

declare type EDynamicMeshSculptBrushType = 'Move' | 'PullKelvin' | 'PullSharpKelvin' | 'Smooth' | 'Offset' | 'SculptView' | 'SculptMax' | 'Inflate' | 'ScaleKelvin' | 'Pinch' | 'TwistKelvin' | 'Flatten' | 'Plane' | 'PlaneViewAligned' | 'FixedPlane' | 'Resample' | 'LastValue' | 'EDynamicMeshSculptBrushType_MAX';
declare var EDynamicMeshSculptBrushType : { Move:'Move',PullKelvin:'PullKelvin',PullSharpKelvin:'PullSharpKelvin',Smooth:'Smooth',Offset:'Offset',SculptView:'SculptView',SculptMax:'SculptMax',Inflate:'Inflate',ScaleKelvin:'ScaleKelvin',Pinch:'Pinch',TwistKelvin:'TwistKelvin',Flatten:'Flatten',Plane:'Plane',PlaneViewAligned:'PlaneViewAligned',FixedPlane:'FixedPlane',Resample:'Resample',LastValue:'LastValue',EDynamicMeshSculptBrushType_MAX:'EDynamicMeshSculptBrushType_MAX', };
declare class DynamicMeshBrushSculptProperties extends InteractiveToolPropertySet { 
	bIsRemeshingEnabled: boolean;
	PrimaryBrushType: EDynamicMeshSculptBrushType;
	PrimaryBrushSpeed: number;
	bPreserveUVFlow: boolean;
	bFreezeTarget: boolean;
	SmoothBrushSpeed: number;
	bDetailPreservingSmooth: boolean;
	static Load(ResourceName: string): DynamicMeshBrushSculptProperties;
	static Find(Outer: UObject, ResourceName: string): DynamicMeshBrushSculptProperties;
	static GetDefaultObject(): DynamicMeshBrushSculptProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DynamicMeshBrushSculptProperties;
	static C(Other: UObject | any): DynamicMeshBrushSculptProperties;
}

declare class DynamicSculptToolActions extends InteractiveToolPropertySet { 
	static Load(ResourceName: string): DynamicSculptToolActions;
	static Find(Outer: UObject, ResourceName: string): DynamicSculptToolActions;
	static GetDefaultObject(): DynamicSculptToolActions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DynamicSculptToolActions;
	DiscardAttributes(): void;
	static C(Other: UObject | any): DynamicSculptToolActions;
}

declare type EMeshBoundaryConstraint = 'Fixed' | 'Refine' | 'Free' | 'EMeshBoundaryConstraint_MAX';
declare var EMeshBoundaryConstraint : { Fixed:'Fixed',Refine:'Refine',Free:'Free',EMeshBoundaryConstraint_MAX:'EMeshBoundaryConstraint_MAX', };
declare type EGroupBoundaryConstraint = 'Fixed' | 'Refine' | 'Free' | 'Ignore' | 'EGroupBoundaryConstraint_MAX';
declare var EGroupBoundaryConstraint : { Fixed:'Fixed',Refine:'Refine',Free:'Free',Ignore:'Ignore',EGroupBoundaryConstraint_MAX:'EGroupBoundaryConstraint_MAX', };
declare type EMaterialBoundaryConstraint = 'Fixed' | 'Refine' | 'Free' | 'Ignore' | 'EMaterialBoundaryConstraint_MAX';
declare var EMaterialBoundaryConstraint : { Fixed:'Fixed',Refine:'Refine',Free:'Free',Ignore:'Ignore',EMaterialBoundaryConstraint_MAX:'EMaterialBoundaryConstraint_MAX', };
declare class MeshConstraintProperties extends InteractiveToolPropertySet { 
	bPreserveSharpEdges: boolean;
	MeshBoundaryConstraint: EMeshBoundaryConstraint;
	GroupBoundaryConstraint: EGroupBoundaryConstraint;
	MaterialBoundaryConstraint: EMaterialBoundaryConstraint;
	bPreventNormalFlips: boolean;
	static Load(ResourceName: string): MeshConstraintProperties;
	static Find(Outer: UObject, ResourceName: string): MeshConstraintProperties;
	static GetDefaultObject(): MeshConstraintProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshConstraintProperties;
	static C(Other: UObject | any): MeshConstraintProperties;
}

declare class RemeshProperties extends MeshConstraintProperties { 
	SmoothingStrength: number;
	bFlips: boolean;
	bSplits: boolean;
	bCollapses: boolean;
	static Load(ResourceName: string): RemeshProperties;
	static Find(Outer: UObject, ResourceName: string): RemeshProperties;
	static GetDefaultObject(): RemeshProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RemeshProperties;
	static C(Other: UObject | any): RemeshProperties;
}

declare class BrushRemeshProperties extends RemeshProperties { 
	bEnableRemeshing: boolean;
	TriangleSize: number;
	PreserveDetail: number;
	Iterations: number;
	static Load(ResourceName: string): BrushRemeshProperties;
	static Find(Outer: UObject, ResourceName: string): BrushRemeshProperties;
	static GetDefaultObject(): BrushRemeshProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BrushRemeshProperties;
	static C(Other: UObject | any): BrushRemeshProperties;
}

declare class FixedPlaneBrushProperties extends InteractiveToolPropertySet { 
	bPropertySetEnabled: boolean;
	bShowGizmo: boolean;
	position: Vector;
	Rotation: Quat;
	static Load(ResourceName: string): FixedPlaneBrushProperties;
	static Find(Outer: UObject, ResourceName: string): FixedPlaneBrushProperties;
	static GetDefaultObject(): FixedPlaneBrushProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FixedPlaneBrushProperties;
	static C(Other: UObject | any): FixedPlaneBrushProperties;
}

declare class SculptMaxBrushProperties extends InteractiveToolPropertySet { 
	MaxHeight: number;
	bFreezeCurrentHeight: boolean;
	static Load(ResourceName: string): SculptMaxBrushProperties;
	static Find(Outer: UObject, ResourceName: string): SculptMaxBrushProperties;
	static GetDefaultObject(): SculptMaxBrushProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SculptMaxBrushProperties;
	static C(Other: UObject | any): SculptMaxBrushProperties;
}

declare class KelvinBrushProperties extends InteractiveToolPropertySet { 
	FalloffDistance: number;
	Stiffness: number;
	Incompressiblity: number;
	BrushSteps: number;
	static Load(ResourceName: string): KelvinBrushProperties;
	static Find(Outer: UObject, ResourceName: string): KelvinBrushProperties;
	static GetDefaultObject(): KelvinBrushProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): KelvinBrushProperties;
	static C(Other: UObject | any): KelvinBrushProperties;
}

declare class DynamicMeshSculptTool extends MeshSurfacePointTool { 
	BrushProperties: DynamicMeshBrushProperties;
	SculptProperties: DynamicMeshBrushSculptProperties;
	SculptMaxBrushProperties: SculptMaxBrushProperties;
	KelvinBrushProperties: KelvinBrushProperties;
	RemeshProperties: BrushRemeshProperties;
	GizmoProperties: FixedPlaneBrushProperties;
	ViewProperties: MeshEditingViewProperties;
	SculptToolActions: DynamicSculptToolActions;
	BrushIndicator: BrushStampIndicator;
	BrushIndicatorMaterial: MaterialInstanceDynamic;
	BrushIndicatorMesh: PreviewMesh;
	DynamicMeshComponent: OctreeDynamicMeshComponent;
	ActiveOverrideMaterial: MaterialInstanceDynamic;
	PlaneTransformGizmo: CombinedTransformGizmo;
	PlaneTransformProxy: TransformProxy;
	static Load(ResourceName: string): DynamicMeshSculptTool;
	static Find(Outer: UObject, ResourceName: string): DynamicMeshSculptTool;
	static GetDefaultObject(): DynamicMeshSculptTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DynamicMeshSculptTool;
	static C(Other: UObject | any): DynamicMeshSculptTool;
}

declare class EditNormalsToolBuilder extends MultiSelectionMeshEditingToolBuilder { 
	static Load(ResourceName: string): EditNormalsToolBuilder;
	static Find(Outer: UObject, ResourceName: string): EditNormalsToolBuilder;
	static GetDefaultObject(): EditNormalsToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditNormalsToolBuilder;
	static C(Other: UObject | any): EditNormalsToolBuilder;
}

declare type ENormalCalculationMethod = 'AreaWeighted' | 'AngleWeighted' | 'AreaAngleWeighting' | 'ENormalCalculationMethod_MAX';
declare var ENormalCalculationMethod : { AreaWeighted:'AreaWeighted',AngleWeighted:'AngleWeighted',AreaAngleWeighting:'AreaAngleWeighting',ENormalCalculationMethod_MAX:'ENormalCalculationMethod_MAX', };
declare type ESplitNormalMethod = 'UseExistingTopology' | 'FaceNormalThreshold' | 'FaceGroupID' | 'PerTriangle' | 'PerVertex' | 'ESplitNormalMethod_MAX';
declare var ESplitNormalMethod : { UseExistingTopology:'UseExistingTopology',FaceNormalThreshold:'FaceNormalThreshold',FaceGroupID:'FaceGroupID',PerTriangle:'PerTriangle',PerVertex:'PerVertex',ESplitNormalMethod_MAX:'ESplitNormalMethod_MAX', };
declare class EditNormalsToolProperties extends InteractiveToolPropertySet { 
	bRecomputeNormals: boolean;
	NormalCalculationMethod: ENormalCalculationMethod;
	bFixInconsistentNormals: boolean;
	bInvertNormals: boolean;
	SplitNormalMethod: ESplitNormalMethod;
	SharpEdgeAngleThreshold: number;
	bAllowSharpVertices: boolean;
	static Load(ResourceName: string): EditNormalsToolProperties;
	static Find(Outer: UObject, ResourceName: string): EditNormalsToolProperties;
	static GetDefaultObject(): EditNormalsToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditNormalsToolProperties;
	static C(Other: UObject | any): EditNormalsToolProperties;
}

declare class EditNormalsAdvancedProperties extends InteractiveToolPropertySet { 
	static Load(ResourceName: string): EditNormalsAdvancedProperties;
	static Find(Outer: UObject, ResourceName: string): EditNormalsAdvancedProperties;
	static GetDefaultObject(): EditNormalsAdvancedProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditNormalsAdvancedProperties;
	static C(Other: UObject | any): EditNormalsAdvancedProperties;
}

declare class EditNormalsTool extends MultiSelectionMeshEditingTool { 
	BasicProperties: EditNormalsToolProperties;
	AdvancedProperties: EditNormalsAdvancedProperties;
	Previews: MeshOpPreviewWithBackgroundCompute[];
	static Load(ResourceName: string): EditNormalsTool;
	static Find(Outer: UObject, ResourceName: string): EditNormalsTool;
	static GetDefaultObject(): EditNormalsTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditNormalsTool;
	static C(Other: UObject | any): EditNormalsTool;
}

declare class EditNormalsOperatorFactory extends UObject { 
	Tool: EditNormalsTool;
	static Load(ResourceName: string): EditNormalsOperatorFactory;
	static Find(Outer: UObject, ResourceName: string): EditNormalsOperatorFactory;
	static GetDefaultObject(): EditNormalsOperatorFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditNormalsOperatorFactory;
	static C(Other: UObject | any): EditNormalsOperatorFactory;
}

declare class EditPivotToolBuilder extends MultiSelectionMeshEditingToolBuilder { 
	static Load(ResourceName: string): EditPivotToolBuilder;
	static Find(Outer: UObject, ResourceName: string): EditPivotToolBuilder;
	static GetDefaultObject(): EditPivotToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditPivotToolBuilder;
	static C(Other: UObject | any): EditPivotToolBuilder;
}

declare type EEditPivotSnapDragRotationMode = 'Ignore' | 'Align' | 'AlignFlipped' | 'LastValue' | 'EEditPivotSnapDragRotationMode_MAX';
declare var EEditPivotSnapDragRotationMode : { Ignore:'Ignore',Align:'Align',AlignFlipped:'AlignFlipped',LastValue:'LastValue',EEditPivotSnapDragRotationMode_MAX:'EEditPivotSnapDragRotationMode_MAX', };
declare class EditPivotToolProperties extends InteractiveToolPropertySet { 
	bEnableSnapDragging: boolean;
	RotationMode: EEditPivotSnapDragRotationMode;
	static Load(ResourceName: string): EditPivotToolProperties;
	static Find(Outer: UObject, ResourceName: string): EditPivotToolProperties;
	static GetDefaultObject(): EditPivotToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditPivotToolProperties;
	static C(Other: UObject | any): EditPivotToolProperties;
}

declare class EditPivotToolActionPropertySet extends InteractiveToolPropertySet { 
	bUseWorldBox: boolean;
	static Load(ResourceName: string): EditPivotToolActionPropertySet;
	static Find(Outer: UObject, ResourceName: string): EditPivotToolActionPropertySet;
	static GetDefaultObject(): EditPivotToolActionPropertySet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditPivotToolActionPropertySet;
	WorldOrigin(): void;
	Top(): void;
	Right(): void;
	Left(): void;
	Front(): void;
	Center(): void;
	Bottom(): void;
	Back(): void;
	static C(Other: UObject | any): EditPivotToolActionPropertySet;
}

declare class EditPivotTarget { 
	TransformProxy: TransformProxy;
	TransformGizmo: CombinedTransformGizmo;
	clone() : EditPivotTarget;
	static C(Other: UObject | any): EditPivotTarget;
}

declare class EditPivotTool extends MultiSelectionMeshEditingTool { 
	TransformProps: EditPivotToolProperties;
	EditPivotActions: EditPivotToolActionPropertySet;
	ActiveGizmos: EditPivotTarget[];
	DragAlignmentMechanic: DragAlignmentMechanic;
	static Load(ResourceName: string): EditPivotTool;
	static Find(Outer: UObject, ResourceName: string): EditPivotTool;
	static GetDefaultObject(): EditPivotTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditPivotTool;
	static C(Other: UObject | any): EditPivotTool;
}

declare class EditUVIslandsToolBuilder extends MeshSurfacePointMeshEditingToolBuilder { 
	static Load(ResourceName: string): EditUVIslandsToolBuilder;
	static Find(Outer: UObject, ResourceName: string): EditUVIslandsToolBuilder;
	static GetDefaultObject(): EditUVIslandsToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditUVIslandsToolBuilder;
	static C(Other: UObject | any): EditUVIslandsToolBuilder;
}

declare class EditUVIslandsTool extends MeshSurfacePointTool { 
	MaterialSettings: ExistingMeshMaterialProperties;
	CheckerMaterial: MaterialInstanceDynamic;
	TargetWorld: World;
	PreviewMeshActor: InternalToolFrameworkActor;
	DynamicMeshComponent: DynamicMeshComponent;
	SelectionMechanic: PolygonSelectionMechanic;
	MultiTransformer: MultiTransformer;
	static Load(ResourceName: string): EditUVIslandsTool;
	static Find(Outer: UObject, ResourceName: string): EditUVIslandsTool;
	static GetDefaultObject(): EditUVIslandsTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditUVIslandsTool;
	static C(Other: UObject | any): EditUVIslandsTool;
}

declare class ExtractCollisionGeometryToolBuilder extends SingleSelectionMeshEditingToolBuilder { 
	static Load(ResourceName: string): ExtractCollisionGeometryToolBuilder;
	static Find(Outer: UObject, ResourceName: string): ExtractCollisionGeometryToolBuilder;
	static GetDefaultObject(): ExtractCollisionGeometryToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ExtractCollisionGeometryToolBuilder;
	static C(Other: UObject | any): ExtractCollisionGeometryToolBuilder;
}

declare type EExtractCollisionOutputType = 'Simple' | 'Complex' | 'EExtractCollisionOutputType_MAX';
declare var EExtractCollisionOutputType : { Simple:'Simple',Complex:'Complex',EExtractCollisionOutputType_MAX:'EExtractCollisionOutputType_MAX', };
declare class ExtractCollisionToolProperties extends InteractiveToolPropertySet { 
	CollisionType: EExtractCollisionOutputType;
	bWeldEdges: boolean;
	bOutputSeparateMeshes: boolean;
	bShowPreview: boolean;
	bShowInputMesh: boolean;
	static Load(ResourceName: string): ExtractCollisionToolProperties;
	static Find(Outer: UObject, ResourceName: string): ExtractCollisionToolProperties;
	static GetDefaultObject(): ExtractCollisionToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ExtractCollisionToolProperties;
	static C(Other: UObject | any): ExtractCollisionToolProperties;
}

declare class ExtractCollisionGeometryTool extends SingleSelectionMeshEditingTool { 
	OutputTypeProperties: CreateMeshObjectTypeProperties;
	Settings: ExtractCollisionToolProperties;
	VizSettings: CollisionGeometryVisualizationProperties;
	ObjectProps: PhysicsObjectToolPropertySet;
	PreviewElements: PreviewGeometry;
	PreviewMesh: PreviewMesh;
	static Load(ResourceName: string): ExtractCollisionGeometryTool;
	static Find(Outer: UObject, ResourceName: string): ExtractCollisionGeometryTool;
	static GetDefaultObject(): ExtractCollisionGeometryTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ExtractCollisionGeometryTool;
	static C(Other: UObject | any): ExtractCollisionGeometryTool;
}

declare class HoleFillToolBuilder extends SingleSelectionMeshEditingToolBuilder { 
	static Load(ResourceName: string): HoleFillToolBuilder;
	static Find(Outer: UObject, ResourceName: string): HoleFillToolBuilder;
	static GetDefaultObject(): HoleFillToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): HoleFillToolBuilder;
	static C(Other: UObject | any): HoleFillToolBuilder;
}

declare class SmoothHoleFillProperties extends InteractiveToolPropertySet { 
	bConstrainToHoleInterior: boolean;
	RemeshingExteriorRegionWidth: number;
	SmoothingExteriorRegionWidth: number;
	SmoothingInteriorRegionWidth: number;
	InteriorSmoothness: number;
	FillDensityScalar: any;
	bProjectDuringRemesh: boolean;
	static Load(ResourceName: string): SmoothHoleFillProperties;
	static Find(Outer: UObject, ResourceName: string): SmoothHoleFillProperties;
	static GetDefaultObject(): SmoothHoleFillProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SmoothHoleFillProperties;
	static C(Other: UObject | any): SmoothHoleFillProperties;
}

declare type EHoleFillOpFillType = 'TriangleFan' | 'PolygonEarClipping' | 'Planar' | 'Minimal' | 'Smooth' | 'EHoleFillOpFillType_MAX';
declare var EHoleFillOpFillType : { TriangleFan:'TriangleFan',PolygonEarClipping:'PolygonEarClipping',Planar:'Planar',Minimal:'Minimal',Smooth:'Smooth',EHoleFillOpFillType_MAX:'EHoleFillOpFillType_MAX', };
declare class HoleFillToolProperties extends InteractiveToolPropertySet { 
	FillType: EHoleFillOpFillType;
	bRemoveIsolatedTriangles: boolean;
	bQuickFillSmallHoles: boolean;
	static Load(ResourceName: string): HoleFillToolProperties;
	static Find(Outer: UObject, ResourceName: string): HoleFillToolProperties;
	static GetDefaultObject(): HoleFillToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): HoleFillToolProperties;
	static C(Other: UObject | any): HoleFillToolProperties;
}

declare class HoleFillToolActions extends InteractiveToolPropertySet { 
	static Load(ResourceName: string): HoleFillToolActions;
	static Find(Outer: UObject, ResourceName: string): HoleFillToolActions;
	static GetDefaultObject(): HoleFillToolActions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): HoleFillToolActions;
	SelectAll(): void;
	Clear(): void;
	static C(Other: UObject | any): HoleFillToolActions;
}

declare class HoleFillStatisticsProperties extends InteractiveToolPropertySet { 
	InitialHoles: string;
	SelectedHoles: string;
	SuccessfulFills: string;
	FailedFills: string;
	RemainingHoles: string;
	static Load(ResourceName: string): HoleFillStatisticsProperties;
	static Find(Outer: UObject, ResourceName: string): HoleFillStatisticsProperties;
	static GetDefaultObject(): HoleFillStatisticsProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): HoleFillStatisticsProperties;
	static C(Other: UObject | any): HoleFillStatisticsProperties;
}

declare class HoleFillTool extends SingleSelectionMeshEditingTool { 
	SmoothHoleFillProperties: SmoothHoleFillProperties;
	Properties: HoleFillToolProperties;
	Actions: HoleFillToolActions;
	Statistics: HoleFillStatisticsProperties;
	Preview: MeshOpPreviewWithBackgroundCompute;
	SelectionMechanic: PolygonSelectionMechanic;
	static Load(ResourceName: string): HoleFillTool;
	static Find(Outer: UObject, ResourceName: string): HoleFillTool;
	static GetDefaultObject(): HoleFillTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): HoleFillTool;
	static C(Other: UObject | any): HoleFillTool;
}

declare class HoleFillOperatorFactory extends UObject { 
	FillTool: HoleFillTool;
	static Load(ResourceName: string): HoleFillOperatorFactory;
	static Find(Outer: UObject, ResourceName: string): HoleFillOperatorFactory;
	static GetDefaultObject(): HoleFillOperatorFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): HoleFillOperatorFactory;
	static C(Other: UObject | any): HoleFillOperatorFactory;
}

declare class MeshSculptBrushOpProps extends InteractiveToolPropertySet { 
	static Load(ResourceName: string): MeshSculptBrushOpProps;
	static Find(Outer: UObject, ResourceName: string): MeshSculptBrushOpProps;
	static GetDefaultObject(): MeshSculptBrushOpProps;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshSculptBrushOpProps;
	static C(Other: UObject | any): MeshSculptBrushOpProps;
}

declare class BaseKelvinletBrushOpProps extends MeshSculptBrushOpProps { 
	Stiffness: number;
	Incompressiblity: number;
	BrushSteps: number;
	static Load(ResourceName: string): BaseKelvinletBrushOpProps;
	static Find(Outer: UObject, ResourceName: string): BaseKelvinletBrushOpProps;
	static GetDefaultObject(): BaseKelvinletBrushOpProps;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BaseKelvinletBrushOpProps;
	static C(Other: UObject | any): BaseKelvinletBrushOpProps;
}

declare class ScaleKelvinletBrushOpProps extends BaseKelvinletBrushOpProps { 
	Strength: number;
	Falloff: number;
	static Load(ResourceName: string): ScaleKelvinletBrushOpProps;
	static Find(Outer: UObject, ResourceName: string): ScaleKelvinletBrushOpProps;
	static GetDefaultObject(): ScaleKelvinletBrushOpProps;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ScaleKelvinletBrushOpProps;
	static C(Other: UObject | any): ScaleKelvinletBrushOpProps;
}

declare class PullKelvinletBrushOpProps extends BaseKelvinletBrushOpProps { 
	Falloff: number;
	Depth: number;
	static Load(ResourceName: string): PullKelvinletBrushOpProps;
	static Find(Outer: UObject, ResourceName: string): PullKelvinletBrushOpProps;
	static GetDefaultObject(): PullKelvinletBrushOpProps;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PullKelvinletBrushOpProps;
	static C(Other: UObject | any): PullKelvinletBrushOpProps;
}

declare class SharpPullKelvinletBrushOpProps extends BaseKelvinletBrushOpProps { 
	Falloff: number;
	Depth: number;
	static Load(ResourceName: string): SharpPullKelvinletBrushOpProps;
	static Find(Outer: UObject, ResourceName: string): SharpPullKelvinletBrushOpProps;
	static GetDefaultObject(): SharpPullKelvinletBrushOpProps;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SharpPullKelvinletBrushOpProps;
	static C(Other: UObject | any): SharpPullKelvinletBrushOpProps;
}

declare class TwistKelvinletBrushOpProps extends BaseKelvinletBrushOpProps { 
	Strength: number;
	Falloff: number;
	static Load(ResourceName: string): TwistKelvinletBrushOpProps;
	static Find(Outer: UObject, ResourceName: string): TwistKelvinletBrushOpProps;
	static GetDefaultObject(): TwistKelvinletBrushOpProps;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TwistKelvinletBrushOpProps;
	static C(Other: UObject | any): TwistKelvinletBrushOpProps;
}

declare class LatticeDeformerToolBuilder extends SingleSelectionMeshEditingToolBuilder { 
	static Load(ResourceName: string): LatticeDeformerToolBuilder;
	static Find(Outer: UObject, ResourceName: string): LatticeDeformerToolBuilder;
	static GetDefaultObject(): LatticeDeformerToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LatticeDeformerToolBuilder;
	static C(Other: UObject | any): LatticeDeformerToolBuilder;
}

declare type ELatticeInterpolationType = 'Linear' | 'Cubic' | 'ELatticeInterpolationType_MAX';
declare var ELatticeInterpolationType : { Linear:'Linear',Cubic:'Cubic',ELatticeInterpolationType_MAX:'ELatticeInterpolationType_MAX', };
declare class LatticeDeformerToolProperties extends InteractiveToolPropertySet { 
	XAxisResolution: number;
	YAxisResolution: number;
	ZAxisResolution: number;
	Padding: number;
	InterpolationType: ELatticeInterpolationType;
	bDeformNormals: boolean;
	bCanChangeResolution: boolean;
	GizmoCoordinateSystem: EToolContextCoordinateSystem;
	bSetPivotMode: boolean;
	bSoftDeformation: boolean;
	static Load(ResourceName: string): LatticeDeformerToolProperties;
	static Find(Outer: UObject, ResourceName: string): LatticeDeformerToolProperties;
	static GetDefaultObject(): LatticeDeformerToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LatticeDeformerToolProperties;
	Constrain(): void;
	ClearConstraints(): void;
	static C(Other: UObject | any): LatticeDeformerToolProperties;
}

declare class LatticeDeformerTool extends SingleSelectionMeshEditingTool { 
	ControlPointsMechanic: LatticeControlPointsMechanic;
	Settings: LatticeDeformerToolProperties;
	Preview: MeshOpPreviewWithBackgroundCompute;
	bLatticeDeformed: boolean;
	static Load(ResourceName: string): LatticeDeformerTool;
	static Find(Outer: UObject, ResourceName: string): LatticeDeformerTool;
	static GetDefaultObject(): LatticeDeformerTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LatticeDeformerTool;
	static C(Other: UObject | any): LatticeDeformerTool;
}

declare class LatticeDeformerOperatorFactory extends UObject { 
	LatticeDeformerTool: LatticeDeformerTool;
	static Load(ResourceName: string): LatticeDeformerOperatorFactory;
	static Find(Outer: UObject, ResourceName: string): LatticeDeformerOperatorFactory;
	static GetDefaultObject(): LatticeDeformerOperatorFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LatticeDeformerOperatorFactory;
	static C(Other: UObject | any): LatticeDeformerOperatorFactory;
}

declare class MeshAnalysisProperties extends InteractiveToolPropertySet { 
	SurfaceArea: string;
	Volume: string;
	static Load(ResourceName: string): MeshAnalysisProperties;
	static Find(Outer: UObject, ResourceName: string): MeshAnalysisProperties;
	static GetDefaultObject(): MeshAnalysisProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshAnalysisProperties;
	static C(Other: UObject | any): MeshAnalysisProperties;
}

declare class MeshAttributePaintToolBuilder extends MeshSurfacePointMeshEditingToolBuilder { 
	static Load(ResourceName: string): MeshAttributePaintToolBuilder;
	static Find(Outer: UObject, ResourceName: string): MeshAttributePaintToolBuilder;
	static GetDefaultObject(): MeshAttributePaintToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshAttributePaintToolBuilder;
	static C(Other: UObject | any): MeshAttributePaintToolBuilder;
}

declare type EBrushActionMode = 'Paint' | 'FloodFill' | 'EBrushActionMode_MAX';
declare var EBrushActionMode : { Paint:'Paint',FloodFill:'FloodFill',EBrushActionMode_MAX:'EBrushActionMode_MAX', };
declare class MeshAttributePaintBrushOperationProperties extends InteractiveToolPropertySet { 
	BrushAction: EBrushActionMode;
	static Load(ResourceName: string): MeshAttributePaintBrushOperationProperties;
	static Find(Outer: UObject, ResourceName: string): MeshAttributePaintBrushOperationProperties;
	static GetDefaultObject(): MeshAttributePaintBrushOperationProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshAttributePaintBrushOperationProperties;
	static C(Other: UObject | any): MeshAttributePaintBrushOperationProperties;
}

declare class MeshAttributePaintToolProperties extends InteractiveToolPropertySet { 
	Attribute: string;
	static Load(ResourceName: string): MeshAttributePaintToolProperties;
	static Find(Outer: UObject, ResourceName: string): MeshAttributePaintToolProperties;
	static GetDefaultObject(): MeshAttributePaintToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshAttributePaintToolProperties;
	GetAttributeNames(): string[];
	static C(Other: UObject | any): MeshAttributePaintToolProperties;
}

declare class MeshAttributePaintEditActions extends InteractiveToolPropertySet { 
	static Load(ResourceName: string): MeshAttributePaintEditActions;
	static Find(Outer: UObject, ResourceName: string): MeshAttributePaintEditActions;
	static GetDefaultObject(): MeshAttributePaintEditActions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshAttributePaintEditActions;
	static C(Other: UObject | any): MeshAttributePaintEditActions;
}

declare class MeshAttributePaintTool extends DynamicMeshBrushTool { 
	BrushActionProps: MeshAttributePaintBrushOperationProperties;
	AttribProps: MeshAttributePaintToolProperties;
	static Load(ResourceName: string): MeshAttributePaintTool;
	static Find(Outer: UObject, ResourceName: string): MeshAttributePaintTool;
	static GetDefaultObject(): MeshAttributePaintTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshAttributePaintTool;
	static C(Other: UObject | any): MeshAttributePaintTool;
}

declare class MeshBoundaryToolBase extends SingleSelectionMeshEditingTool { 
	SelectionMechanic: PolygonSelectionMechanic;
	static Load(ResourceName: string): MeshBoundaryToolBase;
	static Find(Outer: UObject, ResourceName: string): MeshBoundaryToolBase;
	static GetDefaultObject(): MeshBoundaryToolBase;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshBoundaryToolBase;
	static C(Other: UObject | any): MeshBoundaryToolBase;
}

declare class GroupEraseBrushOpProps extends MeshSculptBrushOpProps { 
	Group: number;
	bOnlyEraseCurrent: boolean;
	static Load(ResourceName: string): GroupEraseBrushOpProps;
	static Find(Outer: UObject, ResourceName: string): GroupEraseBrushOpProps;
	static GetDefaultObject(): GroupEraseBrushOpProps;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GroupEraseBrushOpProps;
	static C(Other: UObject | any): GroupEraseBrushOpProps;
}

declare class GroupPaintBrushOpProps extends MeshSculptBrushOpProps { 
	Group: number;
	bOnlyPaintUngrouped: boolean;
	static Load(ResourceName: string): GroupPaintBrushOpProps;
	static Find(Outer: UObject, ResourceName: string): GroupPaintBrushOpProps;
	static GetDefaultObject(): GroupPaintBrushOpProps;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GroupPaintBrushOpProps;
	static C(Other: UObject | any): GroupPaintBrushOpProps;
}

declare class MeshGroupPaintToolBuilder extends MeshSurfacePointMeshEditingToolBuilder { 
	static Load(ResourceName: string): MeshGroupPaintToolBuilder;
	static Find(Outer: UObject, ResourceName: string): MeshGroupPaintToolBuilder;
	static GetDefaultObject(): MeshGroupPaintToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshGroupPaintToolBuilder;
	static C(Other: UObject | any): MeshGroupPaintToolBuilder;
}

declare type EMeshGroupPaintBrushType = 'Paint' | 'Erase' | 'LastValue' | 'EMeshGroupPaintBrushType_MAX';
declare var EMeshGroupPaintBrushType : { Paint:'Paint',Erase:'Erase',LastValue:'LastValue',EMeshGroupPaintBrushType_MAX:'EMeshGroupPaintBrushType_MAX', };
declare type EMeshGroupPaintInteractionType = 'Brush' | 'Fill' | 'GroupFill' | 'PolyLasso' | 'LastValue' | 'EMeshGroupPaintInteractionType_MAX';
declare var EMeshGroupPaintInteractionType : { Brush:'Brush',Fill:'Fill',GroupFill:'GroupFill',PolyLasso:'PolyLasso',LastValue:'LastValue',EMeshGroupPaintInteractionType_MAX:'EMeshGroupPaintInteractionType_MAX', };
declare type EMeshGroupPaintBrushAreaType = 'Connected' | 'Volumetric' | 'EMeshGroupPaintBrushAreaType_MAX';
declare var EMeshGroupPaintBrushAreaType : { Connected:'Connected',Volumetric:'Volumetric',EMeshGroupPaintBrushAreaType_MAX:'EMeshGroupPaintBrushAreaType_MAX', };
declare type EMeshGroupPaintVisibilityType = 'None' | 'FrontFacing' | 'Unoccluded' | 'EMeshGroupPaintVisibilityType_MAX';
declare var EMeshGroupPaintVisibilityType : { None:'None',FrontFacing:'FrontFacing',Unoccluded:'Unoccluded',EMeshGroupPaintVisibilityType_MAX:'EMeshGroupPaintVisibilityType_MAX', };
declare class GroupPaintBrushFilterProperties extends InteractiveToolPropertySet { 
	PrimaryBrushType: EMeshGroupPaintBrushType;
	SubToolType: EMeshGroupPaintInteractionType;
	BrushSize: number;
	BrushAreaMode: EMeshGroupPaintBrushAreaType;
	bHitBackFaces: boolean;
	SetGroup: number;
	bOnlySetUngrouped: boolean;
	EraseGroup: number;
	bOnlyEraseCurrent: boolean;
	AngleThreshold: number;
	bUVSeams: boolean;
	bNormalSeams: boolean;
	VisibilityFilter: EMeshGroupPaintVisibilityType;
	MinTriVertCount: number;
	static Load(ResourceName: string): GroupPaintBrushFilterProperties;
	static Find(Outer: UObject, ResourceName: string): GroupPaintBrushFilterProperties;
	static GetDefaultObject(): GroupPaintBrushFilterProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GroupPaintBrushFilterProperties;
	static C(Other: UObject | any): GroupPaintBrushFilterProperties;
}

declare class MeshGroupPaintToolActionPropertySet extends InteractiveToolPropertySet { 
	static Load(ResourceName: string): MeshGroupPaintToolActionPropertySet;
	static Find(Outer: UObject, ResourceName: string): MeshGroupPaintToolActionPropertySet;
	static GetDefaultObject(): MeshGroupPaintToolActionPropertySet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshGroupPaintToolActionPropertySet;
	static C(Other: UObject | any): MeshGroupPaintToolActionPropertySet;
}

declare class MeshGroupPaintToolFreezeActions extends MeshGroupPaintToolActionPropertySet { 
	static Load(ResourceName: string): MeshGroupPaintToolFreezeActions;
	static Find(Outer: UObject, ResourceName: string): MeshGroupPaintToolFreezeActions;
	static GetDefaultObject(): MeshGroupPaintToolFreezeActions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshGroupPaintToolFreezeActions;
	UnfreezeAll(): void;
	ShrinkCurrent(): void;
	GrowCurrent(): void;
	FreezeOthers(): void;
	FreezeCurrent(): void;
	FloodFillCurrent(): void;
	ClearCurrent(): void;
	ClearAll(): void;
	static C(Other: UObject | any): MeshGroupPaintToolFreezeActions;
}

declare class SculptBrushProperties extends InteractiveToolPropertySet { 
	BrushSize: BrushToolRadius;
	BrushFalloffAmount: number;
	bShowFalloff: boolean;
	Depth: number;
	bHitBackFaces: boolean;
	FlowRate: number;
	Spacing: number;
	Lazyness: number;
	bShowPerBrushProps: boolean;
	bShowLazyness: boolean;
	bShowFlowRate: boolean;
	bShowSpacing: boolean;
	static Load(ResourceName: string): SculptBrushProperties;
	static Find(Outer: UObject, ResourceName: string): SculptBrushProperties;
	static GetDefaultObject(): SculptBrushProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SculptBrushProperties;
	static C(Other: UObject | any): SculptBrushProperties;
}

declare class WorkPlaneProperties extends InteractiveToolPropertySet { 
	bPropertySetEnabled: boolean;
	bShowGizmo: boolean;
	position: Vector;
	Rotation: Quat;
	static Load(ResourceName: string): WorkPlaneProperties;
	static Find(Outer: UObject, ResourceName: string): WorkPlaneProperties;
	static GetDefaultObject(): WorkPlaneProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WorkPlaneProperties;
	static C(Other: UObject | any): WorkPlaneProperties;
}

declare class MeshSculptToolBase extends MeshSurfacePointTool { 
	BrushProperties: SculptBrushProperties;
	GizmoProperties: WorkPlaneProperties;
	BrushOpPropSets: any;
	SecondaryBrushOpPropSets: any;
	ViewProperties: MeshEditingViewProperties;
	ActiveOverrideMaterial: MaterialInstanceDynamic;
	BrushIndicator: BrushStampIndicator;
	bIsVolumetricIndicator: boolean;
	BrushIndicatorMaterial: MaterialInstanceDynamic;
	BrushIndicatorMesh: PreviewMesh;
	PlaneTransformGizmo: CombinedTransformGizmo;
	PlaneTransformProxy: TransformProxy;
	static Load(ResourceName: string): MeshSculptToolBase;
	static Find(Outer: UObject, ResourceName: string): MeshSculptToolBase;
	static GetDefaultObject(): MeshSculptToolBase;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshSculptToolBase;
	static C(Other: UObject | any): MeshSculptToolBase;
}

declare class MeshGroupPaintTool extends MeshSculptToolBase { 
	PolygroupLayerProperties: PolygroupLayersProperties;
	FilterProperties: GroupPaintBrushFilterProperties;
	PaintBrushOpProperties: GroupPaintBrushOpProps;
	EraseBrushOpProperties: GroupEraseBrushOpProps;
	FreezeActions: MeshGroupPaintToolFreezeActions;
	PolyLassoMechanic: PolyLassoMarqueeMechanic;
	PreviewMeshActor: InternalToolFrameworkActor;
	DynamicMeshComponent: DynamicMeshComponent;
	MeshElementsDisplay: MeshElementsVisualizer;
	static Load(ResourceName: string): MeshGroupPaintTool;
	static Find(Outer: UObject, ResourceName: string): MeshGroupPaintTool;
	static GetDefaultObject(): MeshGroupPaintTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshGroupPaintTool;
	static C(Other: UObject | any): MeshGroupPaintTool;
}

declare class InflateBrushOpProps extends MeshSculptBrushOpProps { 
	Strength: number;
	Falloff: number;
	static Load(ResourceName: string): InflateBrushOpProps;
	static Find(Outer: UObject, ResourceName: string): InflateBrushOpProps;
	static GetDefaultObject(): InflateBrushOpProps;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InflateBrushOpProps;
	static C(Other: UObject | any): InflateBrushOpProps;
}

declare class MeshInspectorToolBuilder extends SingleSelectionMeshEditingToolBuilder { 
	static Load(ResourceName: string): MeshInspectorToolBuilder;
	static Find(Outer: UObject, ResourceName: string): MeshInspectorToolBuilder;
	static GetDefaultObject(): MeshInspectorToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshInspectorToolBuilder;
	static C(Other: UObject | any): MeshInspectorToolBuilder;
}

declare class MeshInspectorProperties extends InteractiveToolPropertySet { 
	bWireframe: boolean;
	bBoundaryEdges: boolean;
	bBowtieVertices: boolean;
	bPolygonBorders: boolean;
	bUVSeams: boolean;
	bUVBowties: boolean;
	bMissingUVs: boolean;
	bNormalSeams: boolean;
	bNormalVectors: boolean;
	bTangentVectors: boolean;
	NormalLength: number;
	TangentLength: number;
	static Load(ResourceName: string): MeshInspectorProperties;
	static Find(Outer: UObject, ResourceName: string): MeshInspectorProperties;
	static GetDefaultObject(): MeshInspectorProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshInspectorProperties;
	static C(Other: UObject | any): MeshInspectorProperties;
}

declare class MeshInspectorTool extends SingleSelectionMeshEditingTool { 
	Settings: MeshInspectorProperties;
	MaterialSettings: ExistingMeshMaterialProperties;
	PreviewMesh: PreviewMesh;
	DrawnLineSet: LineSetComponent;
	DefaultMaterial: MaterialInterface;
	static Load(ResourceName: string): MeshInspectorTool;
	static Find(Outer: UObject, ResourceName: string): MeshInspectorTool;
	static GetDefaultObject(): MeshInspectorTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshInspectorTool;
	static C(Other: UObject | any): MeshInspectorTool;
}

declare class ModelingToolsAxisFilter { 
	bAxisX: boolean;
	bAxisY: boolean;
	bAxisZ: boolean;
	clone() : ModelingToolsAxisFilter;
	static C(Other: UObject | any): ModelingToolsAxisFilter;
}

declare class MoveBrushOpProps extends MeshSculptBrushOpProps { 
	Strength: number;
	Falloff: number;
	Depth: number;
	AxisFilters: ModelingToolsAxisFilter;
	static Load(ResourceName: string): MoveBrushOpProps;
	static Find(Outer: UObject, ResourceName: string): MoveBrushOpProps;
	static GetDefaultObject(): MoveBrushOpProps;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MoveBrushOpProps;
	static C(Other: UObject | any): MoveBrushOpProps;
}

declare class PinchBrushOpProps extends MeshSculptBrushOpProps { 
	Strength: number;
	Falloff: number;
	Depth: number;
	bPerpDamping: boolean;
	static Load(ResourceName: string): PinchBrushOpProps;
	static Find(Outer: UObject, ResourceName: string): PinchBrushOpProps;
	static GetDefaultObject(): PinchBrushOpProps;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PinchBrushOpProps;
	static C(Other: UObject | any): PinchBrushOpProps;
}

declare class BasePlaneBrushOpProps extends MeshSculptBrushOpProps { 
	static Load(ResourceName: string): BasePlaneBrushOpProps;
	static Find(Outer: UObject, ResourceName: string): BasePlaneBrushOpProps;
	static GetDefaultObject(): BasePlaneBrushOpProps;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BasePlaneBrushOpProps;
	static C(Other: UObject | any): BasePlaneBrushOpProps;
}

declare type EPlaneBrushSideMode = 'BothSides' | 'PushDown' | 'PullTowards' | 'EPlaneBrushSideMode_MAX';
declare var EPlaneBrushSideMode : { BothSides:'BothSides',PushDown:'PushDown',PullTowards:'PullTowards',EPlaneBrushSideMode_MAX:'EPlaneBrushSideMode_MAX', };
declare class PlaneBrushOpProps extends BasePlaneBrushOpProps { 
	Strength: number;
	Falloff: number;
	Depth: number;
	WhichSide: EPlaneBrushSideMode;
	static Load(ResourceName: string): PlaneBrushOpProps;
	static Find(Outer: UObject, ResourceName: string): PlaneBrushOpProps;
	static GetDefaultObject(): PlaneBrushOpProps;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PlaneBrushOpProps;
	static C(Other: UObject | any): PlaneBrushOpProps;
}

declare class ViewAlignedPlaneBrushOpProps extends BasePlaneBrushOpProps { 
	Strength: number;
	Falloff: number;
	Depth: number;
	WhichSide: EPlaneBrushSideMode;
	static Load(ResourceName: string): ViewAlignedPlaneBrushOpProps;
	static Find(Outer: UObject, ResourceName: string): ViewAlignedPlaneBrushOpProps;
	static GetDefaultObject(): ViewAlignedPlaneBrushOpProps;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ViewAlignedPlaneBrushOpProps;
	static C(Other: UObject | any): ViewAlignedPlaneBrushOpProps;
}

declare class FixedPlaneBrushOpProps extends BasePlaneBrushOpProps { 
	Strength: number;
	Falloff: number;
	Depth: number;
	WhichSide: EPlaneBrushSideMode;
	static Load(ResourceName: string): FixedPlaneBrushOpProps;
	static Find(Outer: UObject, ResourceName: string): FixedPlaneBrushOpProps;
	static GetDefaultObject(): FixedPlaneBrushOpProps;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FixedPlaneBrushOpProps;
	static C(Other: UObject | any): FixedPlaneBrushOpProps;
}

declare class StandardSculptBrushOpProps extends MeshSculptBrushOpProps { 
	Strength: number;
	Falloff: number;
	static Load(ResourceName: string): StandardSculptBrushOpProps;
	static Find(Outer: UObject, ResourceName: string): StandardSculptBrushOpProps;
	static GetDefaultObject(): StandardSculptBrushOpProps;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): StandardSculptBrushOpProps;
	static C(Other: UObject | any): StandardSculptBrushOpProps;
}

declare class ViewAlignedSculptBrushOpProps extends MeshSculptBrushOpProps { 
	Strength: number;
	Falloff: number;
	static Load(ResourceName: string): ViewAlignedSculptBrushOpProps;
	static Find(Outer: UObject, ResourceName: string): ViewAlignedSculptBrushOpProps;
	static GetDefaultObject(): ViewAlignedSculptBrushOpProps;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ViewAlignedSculptBrushOpProps;
	static C(Other: UObject | any): ViewAlignedSculptBrushOpProps;
}

declare class SculptMaxBrushOpProps extends MeshSculptBrushOpProps { 
	Strength: number;
	Falloff: number;
	MaxHeight: number;
	bUseFixedHeight: boolean;
	FixedHeight: number;
	static Load(ResourceName: string): SculptMaxBrushOpProps;
	static Find(Outer: UObject, ResourceName: string): SculptMaxBrushOpProps;
	static GetDefaultObject(): SculptMaxBrushOpProps;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SculptMaxBrushOpProps;
	static C(Other: UObject | any): SculptMaxBrushOpProps;
}

declare class MeshSelectionToolBuilder extends MeshSurfacePointMeshEditingToolBuilder { 
	static Load(ResourceName: string): MeshSelectionToolBuilder;
	static Find(Outer: UObject, ResourceName: string): MeshSelectionToolBuilder;
	static GetDefaultObject(): MeshSelectionToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshSelectionToolBuilder;
	static C(Other: UObject | any): MeshSelectionToolBuilder;
}

declare class MeshSelectionToolActionPropertySet extends InteractiveToolPropertySet { 
	static Load(ResourceName: string): MeshSelectionToolActionPropertySet;
	static Find(Outer: UObject, ResourceName: string): MeshSelectionToolActionPropertySet;
	static GetDefaultObject(): MeshSelectionToolActionPropertySet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshSelectionToolActionPropertySet;
	static C(Other: UObject | any): MeshSelectionToolActionPropertySet;
}

declare class MeshSelectionEditActions extends MeshSelectionToolActionPropertySet { 
	static Load(ResourceName: string): MeshSelectionEditActions;
	static Find(Outer: UObject, ResourceName: string): MeshSelectionEditActions;
	static GetDefaultObject(): MeshSelectionEditActions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshSelectionEditActions;
	Shrink(): void;
	SelectAll(): void;
	OptimizeBorder(): void;
	LargestTriCountPart(): void;
	LargestAreaPart(): void;
	Invert(): void;
	Grow(): void;
	FloodFill(): void;
	Clear(): void;
	static C(Other: UObject | any): MeshSelectionEditActions;
}

declare class MeshSelectionMeshEditActions extends MeshSelectionToolActionPropertySet { 
	static Load(ResourceName: string): MeshSelectionMeshEditActions;
	static Find(Outer: UObject, ResourceName: string): MeshSelectionMeshEditActions;
	static GetDefaultObject(): MeshSelectionMeshEditActions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshSelectionMeshEditActions;
	Separate(): void;
	FlipNormals(): void;
	Duplicate(): void;
	Disconnect(): void;
	Delete(): void;
	CreatePolygroup(): void;
	static C(Other: UObject | any): MeshSelectionMeshEditActions;
}

declare type EMeshSelectionToolPrimaryMode = 'Brush' | 'VolumetricBrush' | 'AngleFiltered' | 'Visible' | 'AllConnected' | 'AllInGroup' | 'ByMaterial' | 'ByUVIsland' | 'AllWithinAngle' | 'EMeshSelectionToolPrimaryMode_MAX';
declare var EMeshSelectionToolPrimaryMode : { Brush:'Brush',VolumetricBrush:'VolumetricBrush',AngleFiltered:'AngleFiltered',Visible:'Visible',AllConnected:'AllConnected',AllInGroup:'AllInGroup',ByMaterial:'ByMaterial',ByUVIsland:'ByUVIsland',AllWithinAngle:'AllWithinAngle',EMeshSelectionToolPrimaryMode_MAX:'EMeshSelectionToolPrimaryMode_MAX', };
declare type EMeshFacesColorMode = 'None' | 'ByGroup' | 'ByMaterialID' | 'ByUVIsland' | 'EMeshFacesColorMode_MAX';
declare var EMeshFacesColorMode : { None:'None',ByGroup:'ByGroup',ByMaterialID:'ByMaterialID',ByUVIsland:'ByUVIsland',EMeshFacesColorMode_MAX:'EMeshFacesColorMode_MAX', };
declare class MeshSelectionToolProperties extends InteractiveToolPropertySet { 
	SelectionMode: EMeshSelectionToolPrimaryMode;
	AngleTolerance: number;
	bHitBackFaces: boolean;
	bShowPoints: boolean;
	FaceColorMode: EMeshFacesColorMode;
	static Load(ResourceName: string): MeshSelectionToolProperties;
	static Find(Outer: UObject, ResourceName: string): MeshSelectionToolProperties;
	static GetDefaultObject(): MeshSelectionToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshSelectionToolProperties;
	static C(Other: UObject | any): MeshSelectionToolProperties;
}

declare class MeshStatisticsProperties extends InteractiveToolPropertySet { 
	Mesh: string;
	UV: string;
	Attributes: string;
	static Load(ResourceName: string): MeshStatisticsProperties;
	static Find(Outer: UObject, ResourceName: string): MeshStatisticsProperties;
	static GetDefaultObject(): MeshStatisticsProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshStatisticsProperties;
	static C(Other: UObject | any): MeshStatisticsProperties;
}

declare class MeshSelectionTool extends DynamicMeshBrushTool { 
	SelectionProps: MeshSelectionToolProperties;
	SelectionActions: MeshSelectionEditActions;
	EditActions: MeshSelectionToolActionPropertySet;
	MeshStatisticsProperties: MeshStatisticsProperties;
	MeshElementsDisplay: MeshElementsVisualizer;
	UVChannelProperties: MeshUVChannelProperties;
	PolygroupLayerProperties: PolygroupLayersProperties;
	USelection: MeshSelectionSet;
	SpawnedActors: Actor[];
	static Load(ResourceName: string): MeshSelectionTool;
	static Find(Outer: UObject, ResourceName: string): MeshSelectionTool;
	static GetDefaultObject(): MeshSelectionTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshSelectionTool;
	static C(Other: UObject | any): MeshSelectionTool;
}

declare class BaseSmoothBrushOpProps extends MeshSculptBrushOpProps { 
	static Load(ResourceName: string): BaseSmoothBrushOpProps;
	static Find(Outer: UObject, ResourceName: string): BaseSmoothBrushOpProps;
	static GetDefaultObject(): BaseSmoothBrushOpProps;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BaseSmoothBrushOpProps;
	static C(Other: UObject | any): BaseSmoothBrushOpProps;
}

declare class SmoothBrushOpProps extends BaseSmoothBrushOpProps { 
	Strength: number;
	Falloff: number;
	bPreserveUVFlow: boolean;
	static Load(ResourceName: string): SmoothBrushOpProps;
	static Find(Outer: UObject, ResourceName: string): SmoothBrushOpProps;
	static GetDefaultObject(): SmoothBrushOpProps;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SmoothBrushOpProps;
	static C(Other: UObject | any): SmoothBrushOpProps;
}

declare class SecondarySmoothBrushOpProps extends BaseSmoothBrushOpProps { 
	Strength: number;
	Falloff: number;
	bPreserveUVFlow: boolean;
	static Load(ResourceName: string): SecondarySmoothBrushOpProps;
	static Find(Outer: UObject, ResourceName: string): SecondarySmoothBrushOpProps;
	static GetDefaultObject(): SecondarySmoothBrushOpProps;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SecondarySmoothBrushOpProps;
	static C(Other: UObject | any): SecondarySmoothBrushOpProps;
}

declare class SmoothFillBrushOpProps extends BaseSmoothBrushOpProps { 
	Strength: number;
	Falloff: number;
	bPreserveUVFlow: boolean;
	static Load(ResourceName: string): SmoothFillBrushOpProps;
	static Find(Outer: UObject, ResourceName: string): SmoothFillBrushOpProps;
	static GetDefaultObject(): SmoothFillBrushOpProps;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SmoothFillBrushOpProps;
	static C(Other: UObject | any): SmoothFillBrushOpProps;
}

declare class FlattenBrushOpProps extends MeshSculptBrushOpProps { 
	Strength: number;
	Falloff: number;
	Depth: number;
	WhichSide: EPlaneBrushSideMode;
	static Load(ResourceName: string): FlattenBrushOpProps;
	static Find(Outer: UObject, ResourceName: string): FlattenBrushOpProps;
	static GetDefaultObject(): FlattenBrushOpProps;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FlattenBrushOpProps;
	static C(Other: UObject | any): FlattenBrushOpProps;
}

declare class EraseBrushOpProps extends MeshSculptBrushOpProps { 
	Strength: number;
	Falloff: number;
	static Load(ResourceName: string): EraseBrushOpProps;
	static Find(Outer: UObject, ResourceName: string): EraseBrushOpProps;
	static GetDefaultObject(): EraseBrushOpProps;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EraseBrushOpProps;
	static C(Other: UObject | any): EraseBrushOpProps;
}

declare class MeshSpaceDeformerToolBuilder extends SingleSelectionMeshEditingToolBuilder { 
	static Load(ResourceName: string): MeshSpaceDeformerToolBuilder;
	static Find(Outer: UObject, ResourceName: string): MeshSpaceDeformerToolBuilder;
	static GetDefaultObject(): MeshSpaceDeformerToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshSpaceDeformerToolBuilder;
	static C(Other: UObject | any): MeshSpaceDeformerToolBuilder;
}

declare type ENonlinearOperationType = 'Bend' | 'Flare' | 'Twist' | 'ENonlinearOperationType_MAX';
declare var ENonlinearOperationType : { Bend:'Bend',Flare:'Flare',Twist:'Twist',ENonlinearOperationType_MAX:'ENonlinearOperationType_MAX', };
declare type EFlareProfileType = 'SinMode' | 'SinSquaredMode' | 'TriangleMode' | 'EFlareProfileType_MAX';
declare var EFlareProfileType : { SinMode:'SinMode',SinSquaredMode:'SinSquaredMode',TriangleMode:'TriangleMode',EFlareProfileType_MAX:'EFlareProfileType_MAX', };
declare class MeshSpaceDeformerToolProperties extends InteractiveToolPropertySet { 
	SelectedOperationType: ENonlinearOperationType;
	UpperBoundsInterval: number;
	LowerBoundsInterval: number;
	BendDegrees: number;
	TwistDegrees: number;
	FlareProfileType: EFlareProfileType;
	FlarePercentY: number;
	bLockXAndYFlaring: boolean;
	FlarePercentX: number;
	bLockBottom: boolean;
	bShowOriginalMesh: boolean;
	bDrawVisualization: boolean;
	bAlignToNormalOnCtrlClick: boolean;
	static Load(ResourceName: string): MeshSpaceDeformerToolProperties;
	static Find(Outer: UObject, ResourceName: string): MeshSpaceDeformerToolProperties;
	static GetDefaultObject(): MeshSpaceDeformerToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshSpaceDeformerToolProperties;
	static C(Other: UObject | any): MeshSpaceDeformerToolProperties;
}

declare class MeshSpaceDeformerToolActionPropertySet extends InteractiveToolPropertySet { 
	static Load(ResourceName: string): MeshSpaceDeformerToolActionPropertySet;
	static Find(Outer: UObject, ResourceName: string): MeshSpaceDeformerToolActionPropertySet;
	static GetDefaultObject(): MeshSpaceDeformerToolActionPropertySet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshSpaceDeformerToolActionPropertySet;
	ShiftToCenter(): void;
	static C(Other: UObject | any): MeshSpaceDeformerToolActionPropertySet;
}

declare class MeshSpaceDeformerTool extends SingleSelectionMeshEditingTool { 
	Settings: MeshSpaceDeformerToolProperties;
	ToolActions: MeshSpaceDeformerToolActionPropertySet;
	StateTarget: GizmoTransformChangeStateTarget;
	DragAlignmentMechanic: DragAlignmentMechanic;
	Preview: MeshOpPreviewWithBackgroundCompute;
	OriginalMeshPreview: PreviewMesh;
	IntervalGizmo: IntervalGizmo;
	TransformGizmo: CombinedTransformGizmo;
	TransformProxy: TransformProxy;
	UpIntervalSource: GizmoLocalFloatParameterSource;
	DownIntervalSource: GizmoLocalFloatParameterSource;
	ForwardIntervalSource: GizmoLocalFloatParameterSource;
	static Load(ResourceName: string): MeshSpaceDeformerTool;
	static Find(Outer: UObject, ResourceName: string): MeshSpaceDeformerTool;
	static GetDefaultObject(): MeshSpaceDeformerTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshSpaceDeformerTool;
	static C(Other: UObject | any): MeshSpaceDeformerTool;
}

declare class SpaceDeformerOperatorFactory extends UObject { 
	SpaceDeformerTool: MeshSpaceDeformerTool;
	static Load(ResourceName: string): SpaceDeformerOperatorFactory;
	static Find(Outer: UObject, ResourceName: string): SpaceDeformerOperatorFactory;
	static GetDefaultObject(): SpaceDeformerOperatorFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SpaceDeformerOperatorFactory;
	static C(Other: UObject | any): SpaceDeformerOperatorFactory;
}

declare class MeshVertexSculptToolBuilder extends MeshSurfacePointMeshEditingToolBuilder { 
	static Load(ResourceName: string): MeshVertexSculptToolBuilder;
	static Find(Outer: UObject, ResourceName: string): MeshVertexSculptToolBuilder;
	static GetDefaultObject(): MeshVertexSculptToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshVertexSculptToolBuilder;
	static C(Other: UObject | any): MeshVertexSculptToolBuilder;
}

declare type EMeshVertexSculptBrushType = 'Move' | 'PullKelvin' | 'PullSharpKelvin' | 'Smooth' | 'SmoothFill' | 'Offset' | 'SculptView' | 'SculptMax' | 'Inflate' | 'ScaleKelvin' | 'Pinch' | 'TwistKelvin' | 'Flatten' | 'Plane' | 'PlaneViewAligned' | 'FixedPlane' | 'LastValue' | 'EMeshVertexSculptBrushType_MAX';
declare var EMeshVertexSculptBrushType : { Move:'Move',PullKelvin:'PullKelvin',PullSharpKelvin:'PullSharpKelvin',Smooth:'Smooth',SmoothFill:'SmoothFill',Offset:'Offset',SculptView:'SculptView',SculptMax:'SculptMax',Inflate:'Inflate',ScaleKelvin:'ScaleKelvin',Pinch:'Pinch',TwistKelvin:'TwistKelvin',Flatten:'Flatten',Plane:'Plane',PlaneViewAligned:'PlaneViewAligned',FixedPlane:'FixedPlane',LastValue:'LastValue',EMeshVertexSculptBrushType_MAX:'EMeshVertexSculptBrushType_MAX', };
declare type EMeshSculptFalloffType = 'Smooth' | 'Linear' | 'Inverse' | 'Round' | 'BoxSmooth' | 'BoxLinear' | 'BoxInverse' | 'BoxRound' | 'LastValue' | 'EMeshSculptFalloffType_MAX';
declare var EMeshSculptFalloffType : { Smooth:'Smooth',Linear:'Linear',Inverse:'Inverse',Round:'Round',BoxSmooth:'BoxSmooth',BoxLinear:'BoxLinear',BoxInverse:'BoxInverse',BoxRound:'BoxRound',LastValue:'LastValue',EMeshSculptFalloffType_MAX:'EMeshSculptFalloffType_MAX', };
declare type EMeshVertexSculptBrushFilterType = 'None' | 'Component' | 'PolyGroup' | 'EMeshVertexSculptBrushFilterType_MAX';
declare var EMeshVertexSculptBrushFilterType : { None:'None',Component:'Component',PolyGroup:'PolyGroup',EMeshVertexSculptBrushFilterType_MAX:'EMeshVertexSculptBrushFilterType_MAX', };
declare class VertexBrushSculptProperties extends InteractiveToolPropertySet { 
	PrimaryBrushType: EMeshVertexSculptBrushType;
	PrimaryFalloffType: EMeshSculptFalloffType;
	BrushFilter: EMeshVertexSculptBrushFilterType;
	bFreezeTarget: boolean;
	Tool: any;
	static Load(ResourceName: string): VertexBrushSculptProperties;
	static Find(Outer: UObject, ResourceName: string): VertexBrushSculptProperties;
	static GetDefaultObject(): VertexBrushSculptProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VertexBrushSculptProperties;
	static C(Other: UObject | any): VertexBrushSculptProperties;
}

declare class VertexBrushAlphaProperties extends InteractiveToolPropertySet { 
	Alpha: Texture2D;
	RotationAngle: number;
	bRandomize: boolean;
	RandomRange: number;
	static Load(ResourceName: string): VertexBrushAlphaProperties;
	static Find(Outer: UObject, ResourceName: string): VertexBrushAlphaProperties;
	static GetDefaultObject(): VertexBrushAlphaProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VertexBrushAlphaProperties;
	static C(Other: UObject | any): VertexBrushAlphaProperties;
}

declare class MeshVertexSculptTool extends MeshSculptToolBase { 
	SculptProperties: VertexBrushSculptProperties;
	AlphaProperties: VertexBrushAlphaProperties;
	BrushAlpha: Texture2D;
	PreviewMeshActor: InternalToolFrameworkActor;
	DynamicMeshComponent: DynamicMeshComponent;
	static Load(ResourceName: string): MeshVertexSculptTool;
	static Find(Outer: UObject, ResourceName: string): MeshVertexSculptTool;
	static GetDefaultObject(): MeshVertexSculptTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshVertexSculptTool;
	static C(Other: UObject | any): MeshVertexSculptTool;
}

declare class MirrorToolBuilder extends MultiSelectionMeshEditingToolBuilder { 
	static Load(ResourceName: string): MirrorToolBuilder;
	static Find(Outer: UObject, ResourceName: string): MirrorToolBuilder;
	static GetDefaultObject(): MirrorToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MirrorToolBuilder;
	static C(Other: UObject | any): MirrorToolBuilder;
}

declare type EMirrorOperationMode = 'MirrorAndAppend' | 'MirrorExisting' | 'EMirrorOperationMode_MAX';
declare var EMirrorOperationMode : { MirrorAndAppend:'MirrorAndAppend',MirrorExisting:'MirrorExisting',EMirrorOperationMode_MAX:'EMirrorOperationMode_MAX', };
declare type EMirrorCtrlClickBehavior = 'Reposition' | 'RepositionAndReorient' | 'EMirrorCtrlClickBehavior_MAX';
declare var EMirrorCtrlClickBehavior : { Reposition:'Reposition',RepositionAndReorient:'RepositionAndReorient',EMirrorCtrlClickBehavior_MAX:'EMirrorCtrlClickBehavior_MAX', };
declare type EMirrorSaveMode = 'UpdateAssets' | 'CreateNewAssets' | 'EMirrorSaveMode_MAX';
declare var EMirrorSaveMode : { UpdateAssets:'UpdateAssets',CreateNewAssets:'CreateNewAssets',EMirrorSaveMode_MAX:'EMirrorSaveMode_MAX', };
declare class MirrorToolProperties extends InteractiveToolPropertySet { 
	OperationMode: EMirrorOperationMode;
	bCropAlongMirrorPlaneFirst: boolean;
	bWeldVerticesOnMirrorPlane: boolean;
	PlaneTolerance: any;
	bAllowBowtieVertexCreation: boolean;
	CtrlClickBehavior: EMirrorCtrlClickBehavior;
	bButtonsOnlyChangeOrientation: boolean;
	bShowPreview: boolean;
	SaveMode: EMirrorSaveMode;
	static Load(ResourceName: string): MirrorToolProperties;
	static Find(Outer: UObject, ResourceName: string): MirrorToolProperties;
	static GetDefaultObject(): MirrorToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MirrorToolProperties;
	static C(Other: UObject | any): MirrorToolProperties;
}

declare class MirrorToolActionPropertySet extends InteractiveToolPropertySet { 
	static Load(ResourceName: string): MirrorToolActionPropertySet;
	static Find(Outer: UObject, ResourceName: string): MirrorToolActionPropertySet;
	static GetDefaultObject(): MirrorToolActionPropertySet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MirrorToolActionPropertySet;
	Up(): void;
	ShiftToCenter(): void;
	Right(): void;
	Left(): void;
	Forward(): void;
	Down(): void;
	Backward(): void;
	static C(Other: UObject | any): MirrorToolActionPropertySet;
}

declare class MirrorTool extends MultiSelectionMeshEditingTool { 
	Settings: MirrorToolProperties;
	ToolActions: MirrorToolActionPropertySet;
	MeshesToMirror: DynamicMeshReplacementChangeTarget[];
	Previews: MeshOpPreviewWithBackgroundCompute[];
	PlaneMechanic: ConstructionPlaneMechanic;
	static Load(ResourceName: string): MirrorTool;
	static Find(Outer: UObject, ResourceName: string): MirrorTool;
	static GetDefaultObject(): MirrorTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MirrorTool;
	static C(Other: UObject | any): MirrorTool;
}

declare class MirrorOperatorFactory extends UObject { 
	MirrorTool: MirrorTool;
	static Load(ResourceName: string): MirrorOperatorFactory;
	static Find(Outer: UObject, ResourceName: string): MirrorOperatorFactory;
	static GetDefaultObject(): MirrorOperatorFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MirrorOperatorFactory;
	static C(Other: UObject | any): MirrorOperatorFactory;
}

declare type EOffsetMeshToolOffsetType = 'Iterative' | 'Implicit' | 'EOffsetMeshToolOffsetType_MAX';
declare var EOffsetMeshToolOffsetType : { Iterative:'Iterative',Implicit:'Implicit',EOffsetMeshToolOffsetType_MAX:'EOffsetMeshToolOffsetType_MAX', };
declare class OffsetMeshToolProperties extends InteractiveToolPropertySet { 
	OffsetType: EOffsetMeshToolOffsetType;
	Distance: number;
	bCreateShell: boolean;
	static Load(ResourceName: string): OffsetMeshToolProperties;
	static Find(Outer: UObject, ResourceName: string): OffsetMeshToolProperties;
	static GetDefaultObject(): OffsetMeshToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OffsetMeshToolProperties;
	static C(Other: UObject | any): OffsetMeshToolProperties;
}

declare class OffsetWeightMapSetProperties extends WeightMapSetProperties { 
	MinDistance: number;
	static Load(ResourceName: string): OffsetWeightMapSetProperties;
	static Find(Outer: UObject, ResourceName: string): OffsetWeightMapSetProperties;
	static GetDefaultObject(): OffsetWeightMapSetProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OffsetWeightMapSetProperties;
	static C(Other: UObject | any): OffsetWeightMapSetProperties;
}

declare class IterativeOffsetProperties extends InteractiveToolPropertySet { 
	Steps: number;
	bOffsetBoundaries: boolean;
	SmoothingPerStep: number;
	bReprojectSmooth: boolean;
	static Load(ResourceName: string): IterativeOffsetProperties;
	static Find(Outer: UObject, ResourceName: string): IterativeOffsetProperties;
	static GetDefaultObject(): IterativeOffsetProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): IterativeOffsetProperties;
	static C(Other: UObject | any): IterativeOffsetProperties;
}

declare class ImplicitOffsetProperties extends InteractiveToolPropertySet { 
	Smoothness: number;
	bPreserveUVs: boolean;
	static Load(ResourceName: string): ImplicitOffsetProperties;
	static Find(Outer: UObject, ResourceName: string): ImplicitOffsetProperties;
	static GetDefaultObject(): ImplicitOffsetProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ImplicitOffsetProperties;
	static C(Other: UObject | any): ImplicitOffsetProperties;
}

declare class OffsetMeshTool extends BaseMeshProcessingTool { 
	OffsetProperties: OffsetMeshToolProperties;
	IterativeProperties: IterativeOffsetProperties;
	ImplicitProperties: ImplicitOffsetProperties;
	WeightMapProperties: OffsetWeightMapSetProperties;
	static Load(ResourceName: string): OffsetMeshTool;
	static Find(Outer: UObject, ResourceName: string): OffsetMeshTool;
	static GetDefaultObject(): OffsetMeshTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OffsetMeshTool;
	static C(Other: UObject | any): OffsetMeshTool;
}

declare class OffsetMeshToolBuilder extends BaseMeshProcessingToolBuilder { 
	static Load(ResourceName: string): OffsetMeshToolBuilder;
	static Find(Outer: UObject, ResourceName: string): OffsetMeshToolBuilder;
	static GetDefaultObject(): OffsetMeshToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OffsetMeshToolBuilder;
	static C(Other: UObject | any): OffsetMeshToolBuilder;
}

declare class PhysicsInspectorToolBuilder extends MultiSelectionMeshEditingToolBuilder { 
	static Load(ResourceName: string): PhysicsInspectorToolBuilder;
	static Find(Outer: UObject, ResourceName: string): PhysicsInspectorToolBuilder;
	static GetDefaultObject(): PhysicsInspectorToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PhysicsInspectorToolBuilder;
	static C(Other: UObject | any): PhysicsInspectorToolBuilder;
}

declare class PhysicsInspectorTool extends MultiSelectionMeshEditingTool { 
	VizSettings: CollisionGeometryVisualizationProperties;
	ObjectData: PhysicsObjectToolPropertySet[];
	LineMaterial: MaterialInterface;
	PreviewElements: PreviewGeometry[];
	static Load(ResourceName: string): PhysicsInspectorTool;
	static Find(Outer: UObject, ResourceName: string): PhysicsInspectorTool;
	static GetDefaultObject(): PhysicsInspectorTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PhysicsInspectorTool;
	static C(Other: UObject | any): PhysicsInspectorTool;
}

declare class PlaneCutToolBuilder extends MultiSelectionMeshEditingToolBuilder { 
	static Load(ResourceName: string): PlaneCutToolBuilder;
	static Find(Outer: UObject, ResourceName: string): PlaneCutToolBuilder;
	static GetDefaultObject(): PlaneCutToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PlaneCutToolBuilder;
	static C(Other: UObject | any): PlaneCutToolBuilder;
}

declare class AcceptOutputProperties extends InteractiveToolPropertySet { 
	bExportSeparatedPiecesAsNewMeshAssets: boolean;
	static Load(ResourceName: string): AcceptOutputProperties;
	static Find(Outer: UObject, ResourceName: string): AcceptOutputProperties;
	static GetDefaultObject(): AcceptOutputProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AcceptOutputProperties;
	static C(Other: UObject | any): AcceptOutputProperties;
}

declare class PlaneCutToolProperties extends InteractiveToolPropertySet { 
	bKeepBothHalves: boolean;
	SpacingBetweenHalves: number;
	bShowPreview: boolean;
	bFillCutHole: boolean;
	bFillSpans: boolean;
	static Load(ResourceName: string): PlaneCutToolProperties;
	static Find(Outer: UObject, ResourceName: string): PlaneCutToolProperties;
	static GetDefaultObject(): PlaneCutToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PlaneCutToolProperties;
	static C(Other: UObject | any): PlaneCutToolProperties;
}

declare class PlaneCutTool extends MultiSelectionMeshEditingTool { 
	BasicProperties: PlaneCutToolProperties;
	AcceptProperties: AcceptOutputProperties;
	Previews: MeshOpPreviewWithBackgroundCompute[];
	MeshesToCut: DynamicMeshReplacementChangeTarget[];
	PlaneMechanic: ConstructionPlaneMechanic;
	static Load(ResourceName: string): PlaneCutTool;
	static Find(Outer: UObject, ResourceName: string): PlaneCutTool;
	static GetDefaultObject(): PlaneCutTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PlaneCutTool;
	FlipPlane(): void;
	Cut(): void;
	static C(Other: UObject | any): PlaneCutTool;
}

declare class PlaneCutOperatorFactory extends UObject { 
	CutTool: PlaneCutTool;
	static Load(ResourceName: string): PlaneCutOperatorFactory;
	static Find(Outer: UObject, ResourceName: string): PlaneCutOperatorFactory;
	static GetDefaultObject(): PlaneCutOperatorFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PlaneCutOperatorFactory;
	static C(Other: UObject | any): PlaneCutOperatorFactory;
}

declare class ProjectToTargetToolBuilder extends MultiSelectionMeshEditingToolBuilder { 
	static Load(ResourceName: string): ProjectToTargetToolBuilder;
	static Find(Outer: UObject, ResourceName: string): ProjectToTargetToolBuilder;
	static GetDefaultObject(): ProjectToTargetToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ProjectToTargetToolBuilder;
	static C(Other: UObject | any): ProjectToTargetToolBuilder;
}

declare type ERemeshSmoothingType = 'Uniform' | 'Cotangent' | 'MeanValue' | 'ERemeshSmoothingType_MAX';
declare var ERemeshSmoothingType : { Uniform:'Uniform',Cotangent:'Cotangent',MeanValue:'MeanValue',ERemeshSmoothingType_MAX:'ERemeshSmoothingType_MAX', };
declare type ERemeshType = 'Standard' | 'FullPass' | 'NormalFlow' | 'ERemeshType_MAX';
declare var ERemeshType : { Standard:'Standard',FullPass:'FullPass',NormalFlow:'NormalFlow',ERemeshType_MAX:'ERemeshType_MAX', };
declare class RemeshMeshToolProperties extends RemeshProperties { 
	TargetTriangleCount: number;
	SmoothingType: ERemeshSmoothingType;
	bDiscardAttributes: boolean;
	bShowGroupColors: boolean;
	RemeshType: ERemeshType;
	RemeshIterations: number;
	MaxRemeshIterations: number;
	ExtraProjectionIterations: number;
	bUseTargetEdgeLength: boolean;
	TargetEdgeLength: number;
	bReproject: boolean;
	static Load(ResourceName: string): RemeshMeshToolProperties;
	static Find(Outer: UObject, ResourceName: string): RemeshMeshToolProperties;
	static GetDefaultObject(): RemeshMeshToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RemeshMeshToolProperties;
	static C(Other: UObject | any): RemeshMeshToolProperties;
}

declare class ProjectToTargetToolProperties extends RemeshMeshToolProperties { 
	bWorldSpace: boolean;
	bParallel: boolean;
	FaceProjectionPassesPerRemeshIteration: number;
	SurfaceProjectionSpeed: number;
	NormalAlignmentSpeed: number;
	bSmoothInFillAreas: boolean;
	FillAreaDistanceMultiplier: number;
	FillAreaSmoothMultiplier: number;
	static Load(ResourceName: string): ProjectToTargetToolProperties;
	static Find(Outer: UObject, ResourceName: string): ProjectToTargetToolProperties;
	static GetDefaultObject(): ProjectToTargetToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ProjectToTargetToolProperties;
	static C(Other: UObject | any): ProjectToTargetToolProperties;
}

declare class RemeshMeshTool extends MultiSelectionMeshEditingTool { 
	BasicProperties: RemeshMeshToolProperties;
	MeshStatisticsProperties: MeshStatisticsProperties;
	Preview: MeshOpPreviewWithBackgroundCompute;
	MeshElementsDisplay: MeshElementsVisualizer;
	static Load(ResourceName: string): RemeshMeshTool;
	static Find(Outer: UObject, ResourceName: string): RemeshMeshTool;
	static GetDefaultObject(): RemeshMeshTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RemeshMeshTool;
	static C(Other: UObject | any): RemeshMeshTool;
}

declare class ProjectToTargetTool extends RemeshMeshTool { 
	static Load(ResourceName: string): ProjectToTargetTool;
	static Find(Outer: UObject, ResourceName: string): ProjectToTargetTool;
	static GetDefaultObject(): ProjectToTargetTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ProjectToTargetTool;
	static C(Other: UObject | any): ProjectToTargetTool;
}

declare class RemeshMeshToolBuilder extends MultiSelectionMeshEditingToolBuilder { 
	static Load(ResourceName: string): RemeshMeshToolBuilder;
	static Find(Outer: UObject, ResourceName: string): RemeshMeshToolBuilder;
	static GetDefaultObject(): RemeshMeshToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RemeshMeshToolBuilder;
	static C(Other: UObject | any): RemeshMeshToolBuilder;
}

declare class RemoveOccludedTrianglesToolBuilder extends MultiSelectionMeshEditingToolBuilder { 
	static Load(ResourceName: string): RemoveOccludedTrianglesToolBuilder;
	static Find(Outer: UObject, ResourceName: string): RemoveOccludedTrianglesToolBuilder;
	static GetDefaultObject(): RemoveOccludedTrianglesToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RemoveOccludedTrianglesToolBuilder;
	static C(Other: UObject | any): RemoveOccludedTrianglesToolBuilder;
}

declare type EOcclusionCalculationUIMode = 'GeneralizedWindingNumber' | 'RaycastOcclusionSamples' | 'EOcclusionCalculationUIMode_MAX';
declare var EOcclusionCalculationUIMode : { GeneralizedWindingNumber:'GeneralizedWindingNumber',RaycastOcclusionSamples:'RaycastOcclusionSamples',EOcclusionCalculationUIMode_MAX:'EOcclusionCalculationUIMode_MAX', };
declare type EOcclusionTriangleSamplingUIMode = 'Vertices' | 'VerticesAndCentroids' | 'EOcclusionTriangleSamplingUIMode_MAX';
declare var EOcclusionTriangleSamplingUIMode : { Vertices:'Vertices',VerticesAndCentroids:'VerticesAndCentroids',EOcclusionTriangleSamplingUIMode_MAX:'EOcclusionTriangleSamplingUIMode_MAX', };
declare type EOccludedAction = 'Remove' | 'SetNewGroup' | 'EOccludedAction_MAX';
declare var EOccludedAction : { Remove:'Remove',SetNewGroup:'SetNewGroup',EOccludedAction_MAX:'EOccludedAction_MAX', };
declare class RemoveOccludedTrianglesToolProperties extends InteractiveToolPropertySet { 
	OcclusionTestMethod: EOcclusionCalculationUIMode;
	TriangleSampling: EOcclusionTriangleSamplingUIMode;
	WindingIsoValue: any;
	AddRandomRays: number;
	AddTriangleSamples: number;
	bOnlySelfOcclude: boolean;
	ShrinkRemoval: number;
	MinAreaIsland: any;
	MinTriCountIsland: number;
	Action: EOccludedAction;
	static Load(ResourceName: string): RemoveOccludedTrianglesToolProperties;
	static Find(Outer: UObject, ResourceName: string): RemoveOccludedTrianglesToolProperties;
	static GetDefaultObject(): RemoveOccludedTrianglesToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RemoveOccludedTrianglesToolProperties;
	static C(Other: UObject | any): RemoveOccludedTrianglesToolProperties;
}

declare class RemoveOccludedTrianglesAdvancedProperties extends InteractiveToolPropertySet { 
	static Load(ResourceName: string): RemoveOccludedTrianglesAdvancedProperties;
	static Find(Outer: UObject, ResourceName: string): RemoveOccludedTrianglesAdvancedProperties;
	static GetDefaultObject(): RemoveOccludedTrianglesAdvancedProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RemoveOccludedTrianglesAdvancedProperties;
	static C(Other: UObject | any): RemoveOccludedTrianglesAdvancedProperties;
}

declare class RemoveOccludedTrianglesTool extends MultiSelectionMeshEditingTool { 
	BasicProperties: RemoveOccludedTrianglesToolProperties;
	PolygroupLayersProperties: PolygroupLayersProperties;
	AdvancedProperties: RemoveOccludedTrianglesAdvancedProperties;
	Previews: MeshOpPreviewWithBackgroundCompute[];
	PreviewCopies: PreviewMesh[];
	static Load(ResourceName: string): RemoveOccludedTrianglesTool;
	static Find(Outer: UObject, ResourceName: string): RemoveOccludedTrianglesTool;
	static GetDefaultObject(): RemoveOccludedTrianglesTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RemoveOccludedTrianglesTool;
	static C(Other: UObject | any): RemoveOccludedTrianglesTool;
}

declare class RemoveOccludedTrianglesOperatorFactory extends UObject { 
	Tool: RemoveOccludedTrianglesTool;
	static Load(ResourceName: string): RemoveOccludedTrianglesOperatorFactory;
	static Find(Outer: UObject, ResourceName: string): RemoveOccludedTrianglesOperatorFactory;
	static GetDefaultObject(): RemoveOccludedTrianglesOperatorFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RemoveOccludedTrianglesOperatorFactory;
	static C(Other: UObject | any): RemoveOccludedTrianglesOperatorFactory;
}

declare class RevolveBoundaryToolBuilder extends SingleSelectionMeshEditingToolBuilder { 
	static Load(ResourceName: string): RevolveBoundaryToolBuilder;
	static Find(Outer: UObject, ResourceName: string): RevolveBoundaryToolBuilder;
	static GetDefaultObject(): RevolveBoundaryToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RevolveBoundaryToolBuilder;
	static C(Other: UObject | any): RevolveBoundaryToolBuilder;
}

declare class RevolveBoundaryToolProperties extends RevolveProperties { 
	CapFillMode: ERevolvePropertiesCapFillMode;
	bDisplayInputMesh: boolean;
	AxisOrigin: Vector;
	AxisOrientation: Vector2D;
	static Load(ResourceName: string): RevolveBoundaryToolProperties;
	static Find(Outer: UObject, ResourceName: string): RevolveBoundaryToolProperties;
	static GetDefaultObject(): RevolveBoundaryToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RevolveBoundaryToolProperties;
	static C(Other: UObject | any): RevolveBoundaryToolProperties;
}

declare class RevolveBoundaryTool extends MeshBoundaryToolBase { 
	OutputTypeProperties: CreateMeshObjectTypeProperties;
	Settings: RevolveBoundaryToolProperties;
	MaterialProperties: NewMeshMaterialProperties;
	PlaneMechanic: ConstructionPlaneMechanic;
	Preview: MeshOpPreviewWithBackgroundCompute;
	static Load(ResourceName: string): RevolveBoundaryTool;
	static Find(Outer: UObject, ResourceName: string): RevolveBoundaryTool;
	static GetDefaultObject(): RevolveBoundaryTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RevolveBoundaryTool;
	static C(Other: UObject | any): RevolveBoundaryTool;
}

declare class RevolveBoundaryOperatorFactory extends UObject { 
	RevolveBoundaryTool: RevolveBoundaryTool;
	static Load(ResourceName: string): RevolveBoundaryOperatorFactory;
	static Find(Outer: UObject, ResourceName: string): RevolveBoundaryOperatorFactory;
	static GetDefaultObject(): RevolveBoundaryOperatorFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RevolveBoundaryOperatorFactory;
	static C(Other: UObject | any): RevolveBoundaryOperatorFactory;
}

declare class SeamSculptToolBuilder extends MeshSurfacePointMeshEditingToolBuilder { 
	static Load(ResourceName: string): SeamSculptToolBuilder;
	static Find(Outer: UObject, ResourceName: string): SeamSculptToolBuilder;
	static GetDefaultObject(): SeamSculptToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SeamSculptToolBuilder;
	static C(Other: UObject | any): SeamSculptToolBuilder;
}

declare class SeamSculptToolProperties extends InteractiveToolPropertySet { 
	bShowWireframe: boolean;
	bHitBackFaces: boolean;
	static Load(ResourceName: string): SeamSculptToolProperties;
	static Find(Outer: UObject, ResourceName: string): SeamSculptToolProperties;
	static GetDefaultObject(): SeamSculptToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SeamSculptToolProperties;
	static C(Other: UObject | any): SeamSculptToolProperties;
}

declare class SeamSculptTool extends DynamicMeshBrushTool { 
	Settings: SeamSculptToolProperties;
	PreviewGeom: PreviewGeometry;
	static Load(ResourceName: string): SeamSculptTool;
	static Find(Outer: UObject, ResourceName: string): SeamSculptTool;
	static GetDefaultObject(): SeamSculptTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SeamSculptTool;
	static C(Other: UObject | any): SeamSculptTool;
}

declare class SelfUnionMeshesToolProperties extends InteractiveToolPropertySet { 
	bTrimFlaps: boolean;
	bTryFixHoles: boolean;
	bTryCollapseEdges: boolean;
	WindingThreshold: number;
	bShowNewBoundaryEdges: boolean;
	bOnlyUseFirstMeshMaterials: boolean;
	static Load(ResourceName: string): SelfUnionMeshesToolProperties;
	static Find(Outer: UObject, ResourceName: string): SelfUnionMeshesToolProperties;
	static GetDefaultObject(): SelfUnionMeshesToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SelfUnionMeshesToolProperties;
	static C(Other: UObject | any): SelfUnionMeshesToolProperties;
}

declare class SelfUnionMeshesTool extends BaseCreateFromSelectedTool { 
	Properties: SelfUnionMeshesToolProperties;
	DrawnLineSet: LineSetComponent;
	static Load(ResourceName: string): SelfUnionMeshesTool;
	static Find(Outer: UObject, ResourceName: string): SelfUnionMeshesTool;
	static GetDefaultObject(): SelfUnionMeshesTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SelfUnionMeshesTool;
	static C(Other: UObject | any): SelfUnionMeshesTool;
}

declare class SelfUnionMeshesToolBuilder extends BaseCreateFromSelectedToolBuilder { 
	static Load(ResourceName: string): SelfUnionMeshesToolBuilder;
	static Find(Outer: UObject, ResourceName: string): SelfUnionMeshesToolBuilder;
	static GetDefaultObject(): SelfUnionMeshesToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SelfUnionMeshesToolBuilder;
	static C(Other: UObject | any): SelfUnionMeshesToolBuilder;
}

declare class SetCollisionGeometryToolBuilder extends MultiSelectionMeshEditingToolBuilder { 
	static Load(ResourceName: string): SetCollisionGeometryToolBuilder;
	static Find(Outer: UObject, ResourceName: string): SetCollisionGeometryToolBuilder;
	static GetDefaultObject(): SetCollisionGeometryToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SetCollisionGeometryToolBuilder;
	static C(Other: UObject | any): SetCollisionGeometryToolBuilder;
}

declare type ECollisionGeometryType = 'KeepExisting' | 'AlignedBoxes' | 'OrientedBoxes' | 'MinimalSpheres' | 'Capsules' | 'ConvexHulls' | 'SweptHulls' | 'MinVolume' | 'None' | 'ECollisionGeometryType_MAX';
declare var ECollisionGeometryType : { KeepExisting:'KeepExisting',AlignedBoxes:'AlignedBoxes',OrientedBoxes:'OrientedBoxes',MinimalSpheres:'MinimalSpheres',Capsules:'Capsules',ConvexHulls:'ConvexHulls',SweptHulls:'SweptHulls',MinVolume:'MinVolume',None:'None',ECollisionGeometryType_MAX:'ECollisionGeometryType_MAX', };
declare type ESetCollisionGeometryInputMode = 'CombineAll' | 'PerInputObject' | 'PerMeshComponent' | 'PerMeshGroup' | 'ESetCollisionGeometryInputMode_MAX';
declare var ESetCollisionGeometryInputMode : { CombineAll:'CombineAll',PerInputObject:'PerInputObject',PerMeshComponent:'PerMeshComponent',PerMeshGroup:'PerMeshGroup',ESetCollisionGeometryInputMode_MAX:'ESetCollisionGeometryInputMode_MAX', };
declare type EProjectedHullAxis = 'X' | 'Y' | 'Z' | 'SmallestBoxDimension' | 'SmallestVolume' | 'EProjectedHullAxis_MAX';
declare var EProjectedHullAxis : { X:'X',Y:'Y',Z:'Z',SmallestBoxDimension:'SmallestBoxDimension',SmallestVolume:'SmallestVolume',EProjectedHullAxis_MAX:'EProjectedHullAxis_MAX', };
declare class SetCollisionGeometryToolProperties extends InteractiveToolPropertySet { 
	GeometryType: ECollisionGeometryType;
	InputMode: ESetCollisionGeometryInputMode;
	bUseWorldSpace: boolean;
	bRemoveContained: boolean;
	bEnableMaxCount: boolean;
	MaxCount: number;
	MinThickness: number;
	bDetectBoxes: boolean;
	bDetectSpheres: boolean;
	bDetectCapsules: boolean;
	bSimplifyHulls: boolean;
	HullTargetFaceCount: number;
	bSimplifyPolygons: boolean;
	HullTolerance: number;
	SweepAxis: EProjectedHullAxis;
	bAppendToExisting: boolean;
	SetCollisionType: ECollisionGeometryMode;
	static Load(ResourceName: string): SetCollisionGeometryToolProperties;
	static Find(Outer: UObject, ResourceName: string): SetCollisionGeometryToolProperties;
	static GetDefaultObject(): SetCollisionGeometryToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SetCollisionGeometryToolProperties;
	static C(Other: UObject | any): SetCollisionGeometryToolProperties;
}

declare class SetCollisionGeometryTool extends MultiSelectionMeshEditingTool { 
	Settings: SetCollisionGeometryToolProperties;
	PolygroupLayerProperties: PolygroupLayersProperties;
	VizSettings: CollisionGeometryVisualizationProperties;
	CollisionProps: PhysicsObjectToolPropertySet;
	LineMaterial: MaterialInterface;
	PreviewGeom: PreviewGeometry;
	static Load(ResourceName: string): SetCollisionGeometryTool;
	static Find(Outer: UObject, ResourceName: string): SetCollisionGeometryTool;
	static GetDefaultObject(): SetCollisionGeometryTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SetCollisionGeometryTool;
	static C(Other: UObject | any): SetCollisionGeometryTool;
}

declare class SkinWeightsBindingToolBuilder extends MultiSelectionMeshEditingToolBuilder { 
	static Load(ResourceName: string): SkinWeightsBindingToolBuilder;
	static Find(Outer: UObject, ResourceName: string): SkinWeightsBindingToolBuilder;
	static GetDefaultObject(): SkinWeightsBindingToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SkinWeightsBindingToolBuilder;
	static C(Other: UObject | any): SkinWeightsBindingToolBuilder;
}

declare type ESkinWeightsBindType = 'DirectDistance' | 'GeodesicVoxel' | 'ESkinWeightsBindType_MAX';
declare var ESkinWeightsBindType : { DirectDistance:'DirectDistance',GeodesicVoxel:'GeodesicVoxel',ESkinWeightsBindType_MAX:'ESkinWeightsBindType_MAX', };
declare class SkinWeightsBindingToolProperties extends InteractiveToolPropertySet { 
	CurrentBone: BoneReference;
	BindingType: ESkinWeightsBindType;
	Stiffness: number;
	MaxInfluences: number;
	VoxelResolution: number;
	static Load(ResourceName: string): SkinWeightsBindingToolProperties;
	static Find(Outer: UObject, ResourceName: string): SkinWeightsBindingToolProperties;
	static GetDefaultObject(): SkinWeightsBindingToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SkinWeightsBindingToolProperties;
	static C(Other: UObject | any): SkinWeightsBindingToolProperties;
}

declare class SkinWeightsBindingTool extends MultiSelectionMeshEditingTool { 
	Properties: SkinWeightsBindingToolProperties;
	Preview: MeshOpPreviewWithBackgroundCompute;
	static Load(ResourceName: string): SkinWeightsBindingTool;
	static Find(Outer: UObject, ResourceName: string): SkinWeightsBindingTool;
	static GetDefaultObject(): SkinWeightsBindingTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SkinWeightsBindingTool;
	static C(Other: UObject | any): SkinWeightsBindingTool;
}

declare class SkinWeightsPaintToolBuilder extends MeshSurfacePointMeshEditingToolBuilder { 
	static Load(ResourceName: string): SkinWeightsPaintToolBuilder;
	static Find(Outer: UObject, ResourceName: string): SkinWeightsPaintToolBuilder;
	static GetDefaultObject(): SkinWeightsPaintToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SkinWeightsPaintToolBuilder;
	static C(Other: UObject | any): SkinWeightsPaintToolBuilder;
}

declare class SkinWeightsPaintToolProperties extends InteractiveToolPropertySet { 
	CurrentBone: BoneReference;
	static Load(ResourceName: string): SkinWeightsPaintToolProperties;
	static Find(Outer: UObject, ResourceName: string): SkinWeightsPaintToolProperties;
	static GetDefaultObject(): SkinWeightsPaintToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SkinWeightsPaintToolProperties;
	static C(Other: UObject | any): SkinWeightsPaintToolProperties;
}

declare class SkinWeightsPaintTool extends DynamicMeshBrushTool { 
	ToolProps: SkinWeightsPaintToolProperties;
	static Load(ResourceName: string): SkinWeightsPaintTool;
	static Find(Outer: UObject, ResourceName: string): SkinWeightsPaintTool;
	static GetDefaultObject(): SkinWeightsPaintTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SkinWeightsPaintTool;
	static C(Other: UObject | any): SkinWeightsPaintTool;
}

declare type ESmoothMeshToolSmoothType = 'Iterative' | 'Implicit' | 'Diffusion' | 'ESmoothMeshToolSmoothType_MAX';
declare var ESmoothMeshToolSmoothType : { Iterative:'Iterative',Implicit:'Implicit',Diffusion:'Diffusion',ESmoothMeshToolSmoothType_MAX:'ESmoothMeshToolSmoothType_MAX', };
declare class SmoothMeshToolProperties extends InteractiveToolPropertySet { 
	SmoothingType: ESmoothMeshToolSmoothType;
	static Load(ResourceName: string): SmoothMeshToolProperties;
	static Find(Outer: UObject, ResourceName: string): SmoothMeshToolProperties;
	static GetDefaultObject(): SmoothMeshToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SmoothMeshToolProperties;
	static C(Other: UObject | any): SmoothMeshToolProperties;
}

declare class IterativeSmoothProperties extends InteractiveToolPropertySet { 
	SmoothingPerStep: number;
	Steps: number;
	bSmoothBoundary: boolean;
	static Load(ResourceName: string): IterativeSmoothProperties;
	static Find(Outer: UObject, ResourceName: string): IterativeSmoothProperties;
	static GetDefaultObject(): IterativeSmoothProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): IterativeSmoothProperties;
	static C(Other: UObject | any): IterativeSmoothProperties;
}

declare class DiffusionSmoothProperties extends InteractiveToolPropertySet { 
	SmoothingPerStep: number;
	Steps: number;
	bPreserveUVs: boolean;
	static Load(ResourceName: string): DiffusionSmoothProperties;
	static Find(Outer: UObject, ResourceName: string): DiffusionSmoothProperties;
	static GetDefaultObject(): DiffusionSmoothProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DiffusionSmoothProperties;
	static C(Other: UObject | any): DiffusionSmoothProperties;
}

declare class ImplicitSmoothProperties extends InteractiveToolPropertySet { 
	SmoothSpeed: number;
	Smoothness: number;
	bPreserveUVs: boolean;
	VolumeCorrection: number;
	static Load(ResourceName: string): ImplicitSmoothProperties;
	static Find(Outer: UObject, ResourceName: string): ImplicitSmoothProperties;
	static GetDefaultObject(): ImplicitSmoothProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ImplicitSmoothProperties;
	static C(Other: UObject | any): ImplicitSmoothProperties;
}

declare class SmoothWeightMapSetProperties extends WeightMapSetProperties { 
	MinSmoothMultiplier: number;
	static Load(ResourceName: string): SmoothWeightMapSetProperties;
	static Find(Outer: UObject, ResourceName: string): SmoothWeightMapSetProperties;
	static GetDefaultObject(): SmoothWeightMapSetProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SmoothWeightMapSetProperties;
	static C(Other: UObject | any): SmoothWeightMapSetProperties;
}

declare class SmoothMeshTool extends BaseMeshProcessingTool { 
	SmoothProperties: SmoothMeshToolProperties;
	IterativeProperties: IterativeSmoothProperties;
	DiffusionProperties: DiffusionSmoothProperties;
	ImplicitProperties: ImplicitSmoothProperties;
	WeightMapProperties: SmoothWeightMapSetProperties;
	static Load(ResourceName: string): SmoothMeshTool;
	static Find(Outer: UObject, ResourceName: string): SmoothMeshTool;
	static GetDefaultObject(): SmoothMeshTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SmoothMeshTool;
	static C(Other: UObject | any): SmoothMeshTool;
}

declare class SmoothMeshToolBuilder extends BaseMeshProcessingToolBuilder { 
	static Load(ResourceName: string): SmoothMeshToolBuilder;
	static Find(Outer: UObject, ResourceName: string): SmoothMeshToolBuilder;
	static GetDefaultObject(): SmoothMeshToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SmoothMeshToolBuilder;
	static C(Other: UObject | any): SmoothMeshToolBuilder;
}

declare class SplitMeshesToolBuilder extends MultiSelectionMeshEditingToolBuilder { 
	static Load(ResourceName: string): SplitMeshesToolBuilder;
	static Find(Outer: UObject, ResourceName: string): SplitMeshesToolBuilder;
	static GetDefaultObject(): SplitMeshesToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SplitMeshesToolBuilder;
	static C(Other: UObject | any): SplitMeshesToolBuilder;
}

declare class SplitMeshesToolProperties extends InteractiveToolPropertySet { 
	bTransferMaterials: boolean;
	static Load(ResourceName: string): SplitMeshesToolProperties;
	static Find(Outer: UObject, ResourceName: string): SplitMeshesToolProperties;
	static GetDefaultObject(): SplitMeshesToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SplitMeshesToolProperties;
	static C(Other: UObject | any): SplitMeshesToolProperties;
}

declare class SplitMeshesTool extends MultiSelectionMeshEditingTool { 
	BasicProperties: SplitMeshesToolProperties;
	OutputTypeProperties: CreateMeshObjectTypeProperties;
	static Load(ResourceName: string): SplitMeshesTool;
	static Find(Outer: UObject, ResourceName: string): SplitMeshesTool;
	static GetDefaultObject(): SplitMeshesTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SplitMeshesTool;
	static C(Other: UObject | any): SplitMeshesTool;
}

declare class TransferMeshToolBuilder extends MultiSelectionMeshEditingToolBuilder { 
	static Load(ResourceName: string): TransferMeshToolBuilder;
	static Find(Outer: UObject, ResourceName: string): TransferMeshToolBuilder;
	static GetDefaultObject(): TransferMeshToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TransferMeshToolBuilder;
	static C(Other: UObject | any): TransferMeshToolBuilder;
}

declare class TransferMeshToolProperties extends InteractiveToolPropertySet { 
	bTransferMaterials: boolean;
	SourceLOD: string;
	TargetLod: string;
	bIsStaticMeshSource: boolean;
	SourceLODNamesList: string[];
	TargetLODNamesList: string[];
	bIsStaticMeshTarget: boolean;
	static Load(ResourceName: string): TransferMeshToolProperties;
	static Find(Outer: UObject, ResourceName: string): TransferMeshToolProperties;
	static GetDefaultObject(): TransferMeshToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TransferMeshToolProperties;
	GetTargetLODNamesFunc(): string[];
	GetSourceLODNamesFunc(): string[];
	static C(Other: UObject | any): TransferMeshToolProperties;
}

declare class TransferMeshTool extends MultiSelectionMeshEditingTool { 
	BasicProperties: TransferMeshToolProperties;
	static Load(ResourceName: string): TransferMeshTool;
	static Find(Outer: UObject, ResourceName: string): TransferMeshTool;
	static GetDefaultObject(): TransferMeshTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TransferMeshTool;
	static C(Other: UObject | any): TransferMeshTool;
}

declare class TransformMeshesToolBuilder extends MultiSelectionMeshEditingToolBuilder { 
	static Load(ResourceName: string): TransformMeshesToolBuilder;
	static Find(Outer: UObject, ResourceName: string): TransformMeshesToolBuilder;
	static GetDefaultObject(): TransformMeshesToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TransformMeshesToolBuilder;
	static C(Other: UObject | any): TransformMeshesToolBuilder;
}

declare type ETransformMeshesTransformMode = 'SharedGizmo' | 'SharedGizmoLocal' | 'PerObjectGizmo' | 'LastValue' | 'ETransformMeshesTransformMode_MAX';
declare var ETransformMeshesTransformMode : { SharedGizmo:'SharedGizmo',SharedGizmoLocal:'SharedGizmoLocal',PerObjectGizmo:'PerObjectGizmo',LastValue:'LastValue',ETransformMeshesTransformMode_MAX:'ETransformMeshesTransformMode_MAX', };
declare type ETransformMeshesSnapDragSource = 'ClickPoint' | 'Pivot' | 'LastValue' | 'ETransformMeshesSnapDragSource_MAX';
declare var ETransformMeshesSnapDragSource : { ClickPoint:'ClickPoint',Pivot:'Pivot',LastValue:'LastValue',ETransformMeshesSnapDragSource_MAX:'ETransformMeshesSnapDragSource_MAX', };
declare type ETransformMeshesSnapDragRotationMode = 'Ignore' | 'Align' | 'AlignFlipped' | 'LastValue' | 'ETransformMeshesSnapDragRotationMode_MAX';
declare var ETransformMeshesSnapDragRotationMode : { Ignore:'Ignore',Align:'Align',AlignFlipped:'AlignFlipped',LastValue:'LastValue',ETransformMeshesSnapDragRotationMode_MAX:'ETransformMeshesSnapDragRotationMode_MAX', };
declare class TransformMeshesToolProperties extends InteractiveToolPropertySet { 
	TransformMode: ETransformMeshesTransformMode;
	bApplyToInstances: boolean;
	bSetPivotMode: boolean;
	bEnableSnapDragging: boolean;
	SnapDragSource: ETransformMeshesSnapDragSource;
	RotationMode: ETransformMeshesSnapDragRotationMode;
	bHaveInstances: boolean;
	static Load(ResourceName: string): TransformMeshesToolProperties;
	static Find(Outer: UObject, ResourceName: string): TransformMeshesToolProperties;
	static GetDefaultObject(): TransformMeshesToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TransformMeshesToolProperties;
	static C(Other: UObject | any): TransformMeshesToolProperties;
}

declare class TransformMeshesTarget { 
	TransformProxy: TransformProxy;
	TransformGizmo: CombinedTransformGizmo;
	clone() : TransformMeshesTarget;
	static C(Other: UObject | any): TransformMeshesTarget;
}

declare class TransformMeshesTool extends MultiSelectionMeshEditingTool { 
	TransformProps: TransformMeshesToolProperties;
	ActiveGizmos: TransformMeshesTarget[];
	DragAlignmentMechanic: DragAlignmentMechanic;
	static Load(ResourceName: string): TransformMeshesTool;
	static Find(Outer: UObject, ResourceName: string): TransformMeshesTool;
	static GetDefaultObject(): TransformMeshesTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): TransformMeshesTool;
	static C(Other: UObject | any): TransformMeshesTool;
}

declare class VolumeToMeshToolBuilder extends InteractiveToolBuilder { 
	static Load(ResourceName: string): VolumeToMeshToolBuilder;
	static Find(Outer: UObject, ResourceName: string): VolumeToMeshToolBuilder;
	static GetDefaultObject(): VolumeToMeshToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VolumeToMeshToolBuilder;
	static C(Other: UObject | any): VolumeToMeshToolBuilder;
}

declare class VolumeToMeshToolProperties extends InteractiveToolPropertySet { 
	bWeldEdges: boolean;
	bAutoRepair: boolean;
	bOptimizeMesh: boolean;
	bShowWireframe: boolean;
	static Load(ResourceName: string): VolumeToMeshToolProperties;
	static Find(Outer: UObject, ResourceName: string): VolumeToMeshToolProperties;
	static GetDefaultObject(): VolumeToMeshToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VolumeToMeshToolProperties;
	static C(Other: UObject | any): VolumeToMeshToolProperties;
}

declare class VolumeToMeshTool extends InteractiveTool { 
	Settings: VolumeToMeshToolProperties;
	OutputTypeProperties: CreateMeshObjectTypeProperties;
	PreviewMesh: PreviewMesh;
	TargetVolume: any;
	VolumeEdgesSet: LineSetComponent;
	static Load(ResourceName: string): VolumeToMeshTool;
	static Find(Outer: UObject, ResourceName: string): VolumeToMeshTool;
	static GetDefaultObject(): VolumeToMeshTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VolumeToMeshTool;
	static C(Other: UObject | any): VolumeToMeshTool;
}

declare type EVoxelBlendOperation = 'Union' | 'Subtract' | 'EVoxelBlendOperation_MAX';
declare var EVoxelBlendOperation : { Union:'Union',Subtract:'Subtract',EVoxelBlendOperation_MAX:'EVoxelBlendOperation_MAX', };
declare class VoxelBlendMeshesToolProperties extends InteractiveToolPropertySet { 
	BlendPower: any;
	BlendFalloff: any;
	Operation: EVoxelBlendOperation;
	bVoxWrap: boolean;
	bRemoveInternalsAfterVoxWrap: boolean;
	ThickenShells: any;
	static Load(ResourceName: string): VoxelBlendMeshesToolProperties;
	static Find(Outer: UObject, ResourceName: string): VoxelBlendMeshesToolProperties;
	static GetDefaultObject(): VoxelBlendMeshesToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VoxelBlendMeshesToolProperties;
	static C(Other: UObject | any): VoxelBlendMeshesToolProperties;
}

declare class VoxelBlendMeshesTool extends BaseVoxelTool { 
	BlendProperties: VoxelBlendMeshesToolProperties;
	static Load(ResourceName: string): VoxelBlendMeshesTool;
	static Find(Outer: UObject, ResourceName: string): VoxelBlendMeshesTool;
	static GetDefaultObject(): VoxelBlendMeshesTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VoxelBlendMeshesTool;
	static C(Other: UObject | any): VoxelBlendMeshesTool;
}

declare class VoxelBlendMeshesToolBuilder extends BaseCreateFromSelectedToolBuilder { 
	static Load(ResourceName: string): VoxelBlendMeshesToolBuilder;
	static Find(Outer: UObject, ResourceName: string): VoxelBlendMeshesToolBuilder;
	static GetDefaultObject(): VoxelBlendMeshesToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VoxelBlendMeshesToolBuilder;
	static C(Other: UObject | any): VoxelBlendMeshesToolBuilder;
}

declare type EMorphologyOperation = 'Dilate' | 'Contract' | 'Close' | 'Open' | 'EMorphologyOperation_MAX';
declare var EMorphologyOperation : { Dilate:'Dilate',Contract:'Contract',Close:'Close',Open:'Open',EMorphologyOperation_MAX:'EMorphologyOperation_MAX', };
declare class VoxelMorphologyMeshesToolProperties extends InteractiveToolPropertySet { 
	Operation: EMorphologyOperation;
	Distance: any;
	bVoxWrap: boolean;
	bRemoveInternalsAfterVoxWrap: boolean;
	ThickenShells: any;
	static Load(ResourceName: string): VoxelMorphologyMeshesToolProperties;
	static Find(Outer: UObject, ResourceName: string): VoxelMorphologyMeshesToolProperties;
	static GetDefaultObject(): VoxelMorphologyMeshesToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VoxelMorphologyMeshesToolProperties;
	static C(Other: UObject | any): VoxelMorphologyMeshesToolProperties;
}

declare class VoxelMorphologyMeshesTool extends BaseVoxelTool { 
	MorphologyProperties: VoxelMorphologyMeshesToolProperties;
	static Load(ResourceName: string): VoxelMorphologyMeshesTool;
	static Find(Outer: UObject, ResourceName: string): VoxelMorphologyMeshesTool;
	static GetDefaultObject(): VoxelMorphologyMeshesTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VoxelMorphologyMeshesTool;
	static C(Other: UObject | any): VoxelMorphologyMeshesTool;
}

declare class VoxelMorphologyMeshesToolBuilder extends BaseCreateFromSelectedToolBuilder { 
	static Load(ResourceName: string): VoxelMorphologyMeshesToolBuilder;
	static Find(Outer: UObject, ResourceName: string): VoxelMorphologyMeshesToolBuilder;
	static GetDefaultObject(): VoxelMorphologyMeshesToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VoxelMorphologyMeshesToolBuilder;
	static C(Other: UObject | any): VoxelMorphologyMeshesToolBuilder;
}

declare class VoxelSolidifyMeshesToolProperties extends InteractiveToolPropertySet { 
	WindingThreshold: any;
	ExtendBounds: any;
	SurfaceSearchSteps: number;
	bSolidAtBoundaries: boolean;
	bApplyThickenShells: boolean;
	ThickenShells: any;
	static Load(ResourceName: string): VoxelSolidifyMeshesToolProperties;
	static Find(Outer: UObject, ResourceName: string): VoxelSolidifyMeshesToolProperties;
	static GetDefaultObject(): VoxelSolidifyMeshesToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VoxelSolidifyMeshesToolProperties;
	static C(Other: UObject | any): VoxelSolidifyMeshesToolProperties;
}

declare class VoxelSolidifyMeshesTool extends BaseVoxelTool { 
	SolidifyProperties: VoxelSolidifyMeshesToolProperties;
	static Load(ResourceName: string): VoxelSolidifyMeshesTool;
	static Find(Outer: UObject, ResourceName: string): VoxelSolidifyMeshesTool;
	static GetDefaultObject(): VoxelSolidifyMeshesTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VoxelSolidifyMeshesTool;
	static C(Other: UObject | any): VoxelSolidifyMeshesTool;
}

declare class VoxelSolidifyMeshesToolBuilder extends BaseCreateFromSelectedToolBuilder { 
	static Load(ResourceName: string): VoxelSolidifyMeshesToolBuilder;
	static Find(Outer: UObject, ResourceName: string): VoxelSolidifyMeshesToolBuilder;
	static GetDefaultObject(): VoxelSolidifyMeshesToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VoxelSolidifyMeshesToolBuilder;
	static C(Other: UObject | any): VoxelSolidifyMeshesToolBuilder;
}

declare class WeldMeshEdgesToolBuilder extends SingleSelectionMeshEditingToolBuilder { 
	static Load(ResourceName: string): WeldMeshEdgesToolBuilder;
	static Find(Outer: UObject, ResourceName: string): WeldMeshEdgesToolBuilder;
	static GetDefaultObject(): WeldMeshEdgesToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WeldMeshEdgesToolBuilder;
	static C(Other: UObject | any): WeldMeshEdgesToolBuilder;
}

declare class WeldMeshEdgesToolProperties extends InteractiveToolPropertySet { 
	Tolerance: number;
	bOnlyUnique: boolean;
	static Load(ResourceName: string): WeldMeshEdgesToolProperties;
	static Find(Outer: UObject, ResourceName: string): WeldMeshEdgesToolProperties;
	static GetDefaultObject(): WeldMeshEdgesToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WeldMeshEdgesToolProperties;
	static C(Other: UObject | any): WeldMeshEdgesToolProperties;
}

declare class WeldMeshEdgesTool extends SingleSelectionMeshEditingTool { 
	Settings: WeldMeshEdgesToolProperties;
	PreviewCompute: MeshOpPreviewWithBackgroundCompute;
	MeshElementsDisplay: MeshElementsVisualizer;
	OperatorFactory: WeldMeshEdgesOperatorFactory;
	static Load(ResourceName: string): WeldMeshEdgesTool;
	static Find(Outer: UObject, ResourceName: string): WeldMeshEdgesTool;
	static GetDefaultObject(): WeldMeshEdgesTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WeldMeshEdgesTool;
	static C(Other: UObject | any): WeldMeshEdgesTool;
}

declare class WeldMeshEdgesOperatorFactory extends UObject { 
	WeldMeshEdgesTool: WeldMeshEdgesTool;
	static Load(ResourceName: string): WeldMeshEdgesOperatorFactory;
	static Find(Outer: UObject, ResourceName: string): WeldMeshEdgesOperatorFactory;
	static GetDefaultObject(): WeldMeshEdgesOperatorFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WeldMeshEdgesOperatorFactory;
	static C(Other: UObject | any): WeldMeshEdgesOperatorFactory;
}

declare type EParameterizeMeshUVMethod = 'PatchBuilder' | 'UVAtlas' | 'XAtlas' | 'EParameterizeMeshUVMethod_MAX';
declare var EParameterizeMeshUVMethod : { PatchBuilder:'PatchBuilder',UVAtlas:'UVAtlas',XAtlas:'XAtlas',EParameterizeMeshUVMethod_MAX:'EParameterizeMeshUVMethod_MAX', };
declare class ParameterizeMeshToolProperties extends InteractiveToolPropertySet { 
	Method: EParameterizeMeshUVMethod;
	static Load(ResourceName: string): ParameterizeMeshToolProperties;
	static Find(Outer: UObject, ResourceName: string): ParameterizeMeshToolProperties;
	static GetDefaultObject(): ParameterizeMeshToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParameterizeMeshToolProperties;
	static C(Other: UObject | any): ParameterizeMeshToolProperties;
}

declare class ParameterizeMeshToolUVAtlasProperties extends InteractiveToolPropertySet { 
	IslandStretch: number;
	NumIslands: number;
	TextureResolution: number;
	static Load(ResourceName: string): ParameterizeMeshToolUVAtlasProperties;
	static Find(Outer: UObject, ResourceName: string): ParameterizeMeshToolUVAtlasProperties;
	static GetDefaultObject(): ParameterizeMeshToolUVAtlasProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParameterizeMeshToolUVAtlasProperties;
	static C(Other: UObject | any): ParameterizeMeshToolUVAtlasProperties;
}

declare class ParameterizeMeshToolXAtlasProperties extends InteractiveToolPropertySet { 
	MaxIterations: number;
	static Load(ResourceName: string): ParameterizeMeshToolXAtlasProperties;
	static Find(Outer: UObject, ResourceName: string): ParameterizeMeshToolXAtlasProperties;
	static GetDefaultObject(): ParameterizeMeshToolXAtlasProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParameterizeMeshToolXAtlasProperties;
	static C(Other: UObject | any): ParameterizeMeshToolXAtlasProperties;
}

declare class ParameterizeMeshToolPatchBuilderProperties extends InteractiveToolPropertySet { 
	InitialPatches: number;
	CurvatureAlignment: number;
	MergingDistortionThreshold: number;
	MergingAngleThreshold: number;
	SmoothingSteps: number;
	SmoothingAlpha: number;
	bRepack: boolean;
	TextureResolution: number;
	static Load(ResourceName: string): ParameterizeMeshToolPatchBuilderProperties;
	static Find(Outer: UObject, ResourceName: string): ParameterizeMeshToolPatchBuilderProperties;
	static GetDefaultObject(): ParameterizeMeshToolPatchBuilderProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParameterizeMeshToolPatchBuilderProperties;
	static C(Other: UObject | any): ParameterizeMeshToolPatchBuilderProperties;
}

declare class ParameterizeMeshOperatorFactory extends UObject { 
	Settings: ParameterizeMeshToolProperties;
	UVAtlasProperties: ParameterizeMeshToolUVAtlasProperties;
	XAtlasProperties: ParameterizeMeshToolXAtlasProperties;
	PatchBuilderProperties: ParameterizeMeshToolPatchBuilderProperties;
	static Load(ResourceName: string): ParameterizeMeshOperatorFactory;
	static Find(Outer: UObject, ResourceName: string): ParameterizeMeshOperatorFactory;
	static GetDefaultObject(): ParameterizeMeshOperatorFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParameterizeMeshOperatorFactory;
	static C(Other: UObject | any): ParameterizeMeshOperatorFactory;
}

declare class ParameterizeMeshToolBuilder extends SingleSelectionMeshEditingToolBuilder { 
	static Load(ResourceName: string): ParameterizeMeshToolBuilder;
	static Find(Outer: UObject, ResourceName: string): ParameterizeMeshToolBuilder;
	static GetDefaultObject(): ParameterizeMeshToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParameterizeMeshToolBuilder;
	static C(Other: UObject | any): ParameterizeMeshToolBuilder;
}

declare class ParameterizeMeshToolPatchBuilderGroupLayerProperties extends PolygroupLayersProperties { 
	bConstrainToPolygroups: boolean;
	static Load(ResourceName: string): ParameterizeMeshToolPatchBuilderGroupLayerProperties;
	static Find(Outer: UObject, ResourceName: string): ParameterizeMeshToolPatchBuilderGroupLayerProperties;
	static GetDefaultObject(): ParameterizeMeshToolPatchBuilderGroupLayerProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParameterizeMeshToolPatchBuilderGroupLayerProperties;
	static C(Other: UObject | any): ParameterizeMeshToolPatchBuilderGroupLayerProperties;
}

declare class ParameterizeMeshTool extends SingleSelectionMeshEditingTool { 
	UVChannelProperties: MeshUVChannelProperties;
	Settings: ParameterizeMeshToolProperties;
	UVAtlasProperties: ParameterizeMeshToolUVAtlasProperties;
	XAtlasProperties: ParameterizeMeshToolXAtlasProperties;
	PatchBuilderProperties: ParameterizeMeshToolPatchBuilderProperties;
	PolygroupLayerProperties: ParameterizeMeshToolPatchBuilderGroupLayerProperties;
	MaterialSettings: ExistingMeshMaterialProperties;
	bCreateUVLayoutViewOnSetup: boolean;
	UVLayoutView: UVLayoutPreview;
	Preview: MeshOpPreviewWithBackgroundCompute;
	static Load(ResourceName: string): ParameterizeMeshTool;
	static Find(Outer: UObject, ResourceName: string): ParameterizeMeshTool;
	static GetDefaultObject(): ParameterizeMeshTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ParameterizeMeshTool;
	static C(Other: UObject | any): ParameterizeMeshTool;
}

declare class AddPivotActorToolBuilder extends MultiSelectionMeshEditingToolBuilder { 
	static Load(ResourceName: string): AddPivotActorToolBuilder;
	static Find(Outer: UObject, ResourceName: string): AddPivotActorToolBuilder;
	static GetDefaultObject(): AddPivotActorToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AddPivotActorToolBuilder;
	static C(Other: UObject | any): AddPivotActorToolBuilder;
}

declare class AddPivotActorTool extends MultiSelectionMeshEditingTool { 
	DragAlignmentMechanic: DragAlignmentMechanic;
	TransformGizmo: CombinedTransformGizmo;
	TransformProxy: TransformProxy;
	static Load(ResourceName: string): AddPivotActorTool;
	static Find(Outer: UObject, ResourceName: string): AddPivotActorTool;
	static GetDefaultObject(): AddPivotActorTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AddPivotActorTool;
	static C(Other: UObject | any): AddPivotActorTool;
}

declare class AttributeEditorToolBuilder extends MultiSelectionMeshEditingToolBuilder { 
	static Load(ResourceName: string): AttributeEditorToolBuilder;
	static Find(Outer: UObject, ResourceName: string): AttributeEditorToolBuilder;
	static GetDefaultObject(): AttributeEditorToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AttributeEditorToolBuilder;
	static C(Other: UObject | any): AttributeEditorToolBuilder;
}

declare class AttributeEditorAttribProperties extends InteractiveToolPropertySet { 
	VertexAttributes: string[];
	InstanceAttributes: string[];
	TriangleAttributes: string[];
	PolygonAttributes: string[];
	EdgeAttributes: string[];
	GroupAttributes: string[];
	static Load(ResourceName: string): AttributeEditorAttribProperties;
	static Find(Outer: UObject, ResourceName: string): AttributeEditorAttribProperties;
	static GetDefaultObject(): AttributeEditorAttribProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AttributeEditorAttribProperties;
	static C(Other: UObject | any): AttributeEditorAttribProperties;
}

declare class AttributeEditorActionPropertySet extends InteractiveToolPropertySet { 
	static Load(ResourceName: string): AttributeEditorActionPropertySet;
	static Find(Outer: UObject, ResourceName: string): AttributeEditorActionPropertySet;
	static GetDefaultObject(): AttributeEditorActionPropertySet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AttributeEditorActionPropertySet;
	static C(Other: UObject | any): AttributeEditorActionPropertySet;
}

declare class AttributeEditorNormalsActions extends AttributeEditorActionPropertySet { 
	static Load(ResourceName: string): AttributeEditorNormalsActions;
	static Find(Outer: UObject, ResourceName: string): AttributeEditorNormalsActions;
	static GetDefaultObject(): AttributeEditorNormalsActions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AttributeEditorNormalsActions;
	ResetHardNormals(): void;
	static C(Other: UObject | any): AttributeEditorNormalsActions;
}

declare class AttributeEditorUVActions extends AttributeEditorActionPropertySet { 
	UVLayer: string;
	UVLayerNamesList: string[];
	static Load(ResourceName: string): AttributeEditorUVActions;
	static Find(Outer: UObject, ResourceName: string): AttributeEditorUVActions;
	static GetDefaultObject(): AttributeEditorUVActions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AttributeEditorUVActions;
	GetUVLayerNamesFunc(): string[];
	DuplicateSelected(): void;
	DeleteSelected(): void;
	ClearAll(): void;
	AddNew(): void;
	static C(Other: UObject | any): AttributeEditorUVActions;
}

declare class AttributeEditorLightmapUVActions extends AttributeEditorActionPropertySet { 
	bGenerateLightmapUVs: boolean;
	SourceUVIndex: number;
	DestinationUVIndex: number;
	static Load(ResourceName: string): AttributeEditorLightmapUVActions;
	static Find(Outer: UObject, ResourceName: string): AttributeEditorLightmapUVActions;
	static GetDefaultObject(): AttributeEditorLightmapUVActions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AttributeEditorLightmapUVActions;
	Reset(): void;
	Enable(): void;
	Disable(): void;
	static C(Other: UObject | any): AttributeEditorLightmapUVActions;
}

declare type EAttributeEditorElementType = 'Vertex' | 'VertexInstance' | 'Triangle' | 'Polygon' | 'Edge' | 'PolygonGroup' | 'EAttributeEditorElementType_MAX';
declare var EAttributeEditorElementType : { Vertex:'Vertex',VertexInstance:'VertexInstance',Triangle:'Triangle',Polygon:'Polygon',Edge:'Edge',PolygonGroup:'PolygonGroup',EAttributeEditorElementType_MAX:'EAttributeEditorElementType_MAX', };
declare type EAttributeEditorAttribType = 'Int32' | 'Boolean' | 'Float' | 'Vector2' | 'Vector3' | 'Vector4' | 'String' | 'Unknown' | 'EAttributeEditorAttribType_MAX';
declare var EAttributeEditorAttribType : { Int32:'Int32',Boolean:'Boolean',Float:'Float',Vector2:'Vector2',Vector3:'Vector3',Vector4:'Vector4',String:'String',Unknown:'Unknown',EAttributeEditorAttribType_MAX:'EAttributeEditorAttribType_MAX', };
declare class AttributeEditorNewAttributeActions extends AttributeEditorActionPropertySet { 
	NewName: string;
	ElementType: EAttributeEditorElementType;
	DataType: EAttributeEditorAttribType;
	static Load(ResourceName: string): AttributeEditorNewAttributeActions;
	static Find(Outer: UObject, ResourceName: string): AttributeEditorNewAttributeActions;
	static GetDefaultObject(): AttributeEditorNewAttributeActions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AttributeEditorNewAttributeActions;
	AddWeightMapLayer(): void;
	AddPolyGroupLayer(): void;
	static C(Other: UObject | any): AttributeEditorNewAttributeActions;
}

declare class AttributeEditorModifyAttributeActions extends AttributeEditorActionPropertySet { 
	Attribute: string;
	AttributeNamesList: string[];
	static Load(ResourceName: string): AttributeEditorModifyAttributeActions;
	static Find(Outer: UObject, ResourceName: string): AttributeEditorModifyAttributeActions;
	static GetDefaultObject(): AttributeEditorModifyAttributeActions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AttributeEditorModifyAttributeActions;
	GetAttributeNamesFunc(): string[];
	DeleteSelected(): void;
	static C(Other: UObject | any): AttributeEditorModifyAttributeActions;
}

declare class AttributeEditorCopyAttributeActions extends AttributeEditorActionPropertySet { 
	FromAttribute: string[];
	ToAttribute: string[];
	static Load(ResourceName: string): AttributeEditorCopyAttributeActions;
	static Find(Outer: UObject, ResourceName: string): AttributeEditorCopyAttributeActions;
	static GetDefaultObject(): AttributeEditorCopyAttributeActions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AttributeEditorCopyAttributeActions;
	CopyFromTo(): void;
	static C(Other: UObject | any): AttributeEditorCopyAttributeActions;
}

declare class AttributeEditorTool extends MultiSelectionMeshEditingTool { 
	NormalsActions: AttributeEditorNormalsActions;
	UVActions: AttributeEditorUVActions;
	LightmapUVActions: AttributeEditorLightmapUVActions;
	AttributeProps: AttributeEditorAttribProperties;
	NewAttributeProps: AttributeEditorNewAttributeActions;
	ModifyAttributeProps: AttributeEditorModifyAttributeActions;
	CopyAttributeProps: AttributeEditorCopyAttributeActions;
	static Load(ResourceName: string): AttributeEditorTool;
	static Find(Outer: UObject, ResourceName: string): AttributeEditorTool;
	static GetDefaultObject(): AttributeEditorTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AttributeEditorTool;
	static C(Other: UObject | any): AttributeEditorTool;
}

declare class BspConversionToolBuilder extends InteractiveToolBuilder { 
	static Load(ResourceName: string): BspConversionToolBuilder;
	static Find(Outer: UObject, ResourceName: string): BspConversionToolBuilder;
	static GetDefaultObject(): BspConversionToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BspConversionToolBuilder;
	static C(Other: UObject | any): BspConversionToolBuilder;
}

declare type EBspConversionMode = 'ConvertFirst' | 'CombineFirst' | 'EBspConversionMode_MAX';
declare var EBspConversionMode : { ConvertFirst:'ConvertFirst',CombineFirst:'CombineFirst',EBspConversionMode_MAX:'EBspConversionMode_MAX', };
declare class BspConversionToolProperties extends InteractiveToolPropertySet { 
	ConversionMode: EBspConversionMode;
	bIncludeVolumes: boolean;
	bRemoveConvertedVolumes: boolean;
	bExplicitSubtractiveBrushSelection: boolean;
	bRemoveConvertedSubtractiveBrushes: boolean;
	bCacheBrushes: boolean;
	bShowPreview: boolean;
	static Load(ResourceName: string): BspConversionToolProperties;
	static Find(Outer: UObject, ResourceName: string): BspConversionToolProperties;
	static GetDefaultObject(): BspConversionToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BspConversionToolProperties;
	static C(Other: UObject | any): BspConversionToolProperties;
}

declare class BspConversionToolActionPropertySet extends InteractiveToolPropertySet { 
	static Load(ResourceName: string): BspConversionToolActionPropertySet;
	static Find(Outer: UObject, ResourceName: string): BspConversionToolActionPropertySet;
	static GetDefaultObject(): BspConversionToolActionPropertySet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BspConversionToolActionPropertySet;
	SelectAllValidBrushes(): void;
	DeselectVolumes(): void;
	DeselectNonValid(): void;
	static C(Other: UObject | any): BspConversionToolActionPropertySet;
}

declare class BspConversionTool extends InteractiveTool { 
	Settings: BspConversionToolProperties;
	ToolActions: BspConversionToolActionPropertySet;
	PreviewMesh: PreviewMesh;
	static Load(ResourceName: string): BspConversionTool;
	static Find(Outer: UObject, ResourceName: string): BspConversionTool;
	static GetDefaultObject(): BspConversionTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BspConversionTool;
	static C(Other: UObject | any): BspConversionTool;
}

declare class EditMeshMaterialsToolBuilder extends MeshSelectionToolBuilder { 
	static Load(ResourceName: string): EditMeshMaterialsToolBuilder;
	static Find(Outer: UObject, ResourceName: string): EditMeshMaterialsToolBuilder;
	static GetDefaultObject(): EditMeshMaterialsToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditMeshMaterialsToolBuilder;
	static C(Other: UObject | any): EditMeshMaterialsToolBuilder;
}

declare class EditMeshMaterialsToolProperties extends InteractiveToolPropertySet { 
	ActiveMaterial: string;
	MaterialNamesList: string[];
	Materials: MaterialInterface[];
	static Load(ResourceName: string): EditMeshMaterialsToolProperties;
	static Find(Outer: UObject, ResourceName: string): EditMeshMaterialsToolProperties;
	static GetDefaultObject(): EditMeshMaterialsToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditMeshMaterialsToolProperties;
	GetMaterialNamesFunc(): string[];
	static C(Other: UObject | any): EditMeshMaterialsToolProperties;
}

declare class EditMeshMaterialsEditActions extends MeshSelectionToolActionPropertySet { 
	static Load(ResourceName: string): EditMeshMaterialsEditActions;
	static Find(Outer: UObject, ResourceName: string): EditMeshMaterialsEditActions;
	static GetDefaultObject(): EditMeshMaterialsEditActions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditMeshMaterialsEditActions;
	AssignActiveMaterial(): void;
	static C(Other: UObject | any): EditMeshMaterialsEditActions;
}

declare class EditMeshMaterialsTool extends MeshSelectionTool { 
	MaterialProps: EditMeshMaterialsToolProperties;
	static Load(ResourceName: string): EditMeshMaterialsTool;
	static Find(Outer: UObject, ResourceName: string): EditMeshMaterialsTool;
	static GetDefaultObject(): EditMeshMaterialsTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EditMeshMaterialsTool;
	static C(Other: UObject | any): EditMeshMaterialsTool;
}

declare class MergeMeshesToolBuilder extends MultiSelectionMeshEditingToolBuilder { 
	static Load(ResourceName: string): MergeMeshesToolBuilder;
	static Find(Outer: UObject, ResourceName: string): MergeMeshesToolBuilder;
	static GetDefaultObject(): MergeMeshesToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MergeMeshesToolBuilder;
	static C(Other: UObject | any): MergeMeshesToolBuilder;
}

declare class MergeMeshesToolProperties extends InteractiveToolPropertySet { 
	VoxelCount: number;
	MeshAdaptivity: number;
	OffsetDistance: number;
	bAutoSimplify: boolean;
	static Load(ResourceName: string): MergeMeshesToolProperties;
	static Find(Outer: UObject, ResourceName: string): MergeMeshesToolProperties;
	static GetDefaultObject(): MergeMeshesToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MergeMeshesToolProperties;
	static C(Other: UObject | any): MergeMeshesToolProperties;
}

declare class MergeMeshesTool extends MultiSelectionMeshEditingTool { 
	MergeProps: MergeMeshesToolProperties;
	MeshStatisticsProperties: MeshStatisticsProperties;
	HandleSourcesProperties: OnAcceptHandleSourcesProperties;
	Preview: MeshOpPreviewWithBackgroundCompute;
	static Load(ResourceName: string): MergeMeshesTool;
	static Find(Outer: UObject, ResourceName: string): MergeMeshesTool;
	static GetDefaultObject(): MergeMeshesTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MergeMeshesTool;
	static C(Other: UObject | any): MergeMeshesTool;
}

declare class MeshTangentsToolBuilder extends SingleSelectionMeshEditingToolBuilder { 
	static Load(ResourceName: string): MeshTangentsToolBuilder;
	static Find(Outer: UObject, ResourceName: string): MeshTangentsToolBuilder;
	static GetDefaultObject(): MeshTangentsToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshTangentsToolBuilder;
	static C(Other: UObject | any): MeshTangentsToolBuilder;
}

declare type EMeshTangentsType = 'MikkTSpace' | 'FastMikkTSpace' | 'PerTriangle' | 'CopyExisting' | 'EMeshTangentsType_MAX';
declare var EMeshTangentsType : { MikkTSpace:'MikkTSpace',FastMikkTSpace:'FastMikkTSpace',PerTriangle:'PerTriangle',CopyExisting:'CopyExisting',EMeshTangentsType_MAX:'EMeshTangentsType_MAX', };
declare class MeshTangentsToolProperties extends InteractiveToolPropertySet { 
	CalculationMethod: EMeshTangentsType;
	bShowTangents: boolean;
	bShowNormals: boolean;
	LineLength: number;
	LineThickness: number;
	bShowDegenerates: boolean;
	bCompareWithMikkt: boolean;
	CompareWithMikktThreshold: number;
	static Load(ResourceName: string): MeshTangentsToolProperties;
	static Find(Outer: UObject, ResourceName: string): MeshTangentsToolProperties;
	static GetDefaultObject(): MeshTangentsToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshTangentsToolProperties;
	static C(Other: UObject | any): MeshTangentsToolProperties;
}

declare class MeshTangentsTool extends SingleSelectionMeshEditingTool { 
	Settings: MeshTangentsToolProperties;
	DefaultMaterial: MaterialInterface;
	PreviewMesh: PreviewMesh;
	PreviewGeometry: PreviewGeometry;
	static Load(ResourceName: string): MeshTangentsTool;
	static Find(Outer: UObject, ResourceName: string): MeshTangentsTool;
	static GetDefaultObject(): MeshTangentsTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshTangentsTool;
	static C(Other: UObject | any): MeshTangentsTool;
}

declare class MeshToVolumeToolBuilder extends SingleSelectionMeshEditingToolBuilder { 
	static Load(ResourceName: string): MeshToVolumeToolBuilder;
	static Find(Outer: UObject, ResourceName: string): MeshToVolumeToolBuilder;
	static GetDefaultObject(): MeshToVolumeToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshToVolumeToolBuilder;
	static C(Other: UObject | any): MeshToVolumeToolBuilder;
}

declare type EMeshToVolumeMode = 'TriangulatePolygons' | 'MinimalPolygons' | 'EMeshToVolumeMode_MAX';
declare var EMeshToVolumeMode : { TriangulatePolygons:'TriangulatePolygons',MinimalPolygons:'MinimalPolygons',EMeshToVolumeMode_MAX:'EMeshToVolumeMode_MAX', };
declare class MeshToVolumeToolProperties extends InteractiveToolPropertySet { 
	ConversionMode: EMeshToVolumeMode;
	NewVolumeType: UnrealEngineClass;
	TargetVolume: any;
	static Load(ResourceName: string): MeshToVolumeToolProperties;
	static Find(Outer: UObject, ResourceName: string): MeshToVolumeToolProperties;
	static GetDefaultObject(): MeshToVolumeToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshToVolumeToolProperties;
	static C(Other: UObject | any): MeshToVolumeToolProperties;
}

declare class MeshToVolumeTool extends SingleSelectionMeshEditingTool { 
	Settings: MeshToVolumeToolProperties;
	HandleSourcesProperties: OnAcceptHandleSourcesProperties;
	PreviewMesh: PreviewMesh;
	VolumeEdgesSet: LineSetComponent;
	static Load(ResourceName: string): MeshToVolumeTool;
	static Find(Outer: UObject, ResourceName: string): MeshToVolumeTool;
	static GetDefaultObject(): MeshToVolumeTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MeshToVolumeTool;
	static C(Other: UObject | any): MeshToVolumeTool;
}

declare class PolygonOnMeshToolBuilder extends SingleSelectionMeshEditingToolBuilder { 
	static Load(ResourceName: string): PolygonOnMeshToolBuilder;
	static Find(Outer: UObject, ResourceName: string): PolygonOnMeshToolBuilder;
	static GetDefaultObject(): PolygonOnMeshToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PolygonOnMeshToolBuilder;
	static C(Other: UObject | any): PolygonOnMeshToolBuilder;
}

declare type EEmbeddedPolygonOpMethod = 'TrimOutside' | 'TrimInside' | 'InsertPolygon' | 'CutThrough' | 'EEmbeddedPolygonOpMethod_MAX';
declare var EEmbeddedPolygonOpMethod : { TrimOutside:'TrimOutside',TrimInside:'TrimInside',InsertPolygon:'InsertPolygon',CutThrough:'CutThrough',EEmbeddedPolygonOpMethod_MAX:'EEmbeddedPolygonOpMethod_MAX', };
declare type EPolygonType = 'Circle' | 'Square' | 'Rectangle' | 'RoundRect' | 'Custom' | 'EPolygonType_MAX';
declare var EPolygonType : { Circle:'Circle',Square:'Square',Rectangle:'Rectangle',RoundRect:'RoundRect',Custom:'Custom',EPolygonType_MAX:'EPolygonType_MAX', };
declare class PolygonOnMeshToolProperties extends InteractiveToolPropertySet { 
	Operation: EEmbeddedPolygonOpMethod;
	Shape: EPolygonType;
	bCutWithBoolean: boolean;
	bTryToFixCracks: boolean;
	PolygonScale: number;
	Width: number;
	Height: number;
	CornerRatio: number;
	Subdivisions: number;
	static Load(ResourceName: string): PolygonOnMeshToolProperties;
	static Find(Outer: UObject, ResourceName: string): PolygonOnMeshToolProperties;
	static GetDefaultObject(): PolygonOnMeshToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PolygonOnMeshToolProperties;
	static C(Other: UObject | any): PolygonOnMeshToolProperties;
}

declare class PolygonOnMeshToolActionPropertySet extends InteractiveToolPropertySet { 
	static Load(ResourceName: string): PolygonOnMeshToolActionPropertySet;
	static Find(Outer: UObject, ResourceName: string): PolygonOnMeshToolActionPropertySet;
	static GetDefaultObject(): PolygonOnMeshToolActionPropertySet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PolygonOnMeshToolActionPropertySet;
	DrawPolygon(): void;
	static C(Other: UObject | any): PolygonOnMeshToolActionPropertySet;
}

declare class PolygonOnMeshTool extends SingleSelectionMeshEditingTool { 
	BasicProperties: PolygonOnMeshToolProperties;
	ActionProperties: PolygonOnMeshToolActionPropertySet;
	Preview: MeshOpPreviewWithBackgroundCompute;
	DrawnLineSet: LineSetComponent;
	PlaneMechanic: ConstructionPlaneMechanic;
	DrawPolygonMechanic: CollectSurfacePathMechanic;
	static Load(ResourceName: string): PolygonOnMeshTool;
	static Find(Outer: UObject, ResourceName: string): PolygonOnMeshTool;
	static GetDefaultObject(): PolygonOnMeshTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PolygonOnMeshTool;
	static C(Other: UObject | any): PolygonOnMeshTool;
}

declare class ShapeSprayToolBuilder extends MeshSurfacePointMeshEditingToolBuilder { 
	static Load(ResourceName: string): ShapeSprayToolBuilder;
	static Find(Outer: UObject, ResourceName: string): ShapeSprayToolBuilder;
	static GetDefaultObject(): ShapeSprayToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ShapeSprayToolBuilder;
	static C(Other: UObject | any): ShapeSprayToolBuilder;
}

declare class ShapeSprayToolProperties extends InteractiveToolPropertySet { 
	Color: LinearColor;
	bRandomColor: boolean;
	DropSpeed: number;
	ObjectSize: number;
	NumSplats: number;
	Material: MaterialInterface;
	static Load(ResourceName: string): ShapeSprayToolProperties;
	static Find(Outer: UObject, ResourceName: string): ShapeSprayToolProperties;
	static GetDefaultObject(): ShapeSprayToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ShapeSprayToolProperties;
	static C(Other: UObject | any): ShapeSprayToolProperties;
}

declare class ShapeSprayTool extends DynamicMeshBrushTool { 
	Settings: ShapeSprayToolProperties;
	AccumMeshComponent: DynamicMeshComponent;
	static Load(ResourceName: string): ShapeSprayTool;
	static Find(Outer: UObject, ResourceName: string): ShapeSprayTool;
	static GetDefaultObject(): ShapeSprayTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ShapeSprayTool;
	static C(Other: UObject | any): ShapeSprayTool;
}

declare class SimplifyMeshToolBuilder extends SingleSelectionMeshEditingToolBuilder { 
	static Load(ResourceName: string): SimplifyMeshToolBuilder;
	static Find(Outer: UObject, ResourceName: string): SimplifyMeshToolBuilder;
	static GetDefaultObject(): SimplifyMeshToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SimplifyMeshToolBuilder;
	static C(Other: UObject | any): SimplifyMeshToolBuilder;
}

declare type ESimplifyType = 'QEM' | 'Attribute' | 'UEStandard' | 'MinimalExistingVertex' | 'MinimalPlanar' | 'MinimalPolygroup' | 'ESimplifyType_MAX';
declare var ESimplifyType : { QEM:'QEM',Attribute:'Attribute',UEStandard:'UEStandard',MinimalExistingVertex:'MinimalExistingVertex',MinimalPlanar:'MinimalPlanar',MinimalPolygroup:'MinimalPolygroup',ESimplifyType_MAX:'ESimplifyType_MAX', };
declare type ESimplifyTargetType = 'Percentage' | 'TriangleCount' | 'VertexCount' | 'EdgeLength' | 'MinimalPlanar' | 'ESimplifyTargetType_MAX';
declare var ESimplifyTargetType : { Percentage:'Percentage',TriangleCount:'TriangleCount',VertexCount:'VertexCount',EdgeLength:'EdgeLength',MinimalPlanar:'MinimalPlanar',ESimplifyTargetType_MAX:'ESimplifyTargetType_MAX', };
declare class SimplifyMeshToolProperties extends MeshConstraintProperties { 
	SimplifierType: ESimplifyType;
	TargetMode: ESimplifyTargetType;
	TargetPercentage: number;
	TargetEdgeLength: number;
	TargetTriangleCount: number;
	TargetVertexCount: number;
	MinimalAngleThreshold: number;
	PolyEdgeAngleTolerance: number;
	bDiscardAttributes: boolean;
	bGeometricConstraint: boolean;
	GeometricTolerance: number;
	bShowGroupColors: boolean;
	bReproject: boolean;
	static Load(ResourceName: string): SimplifyMeshToolProperties;
	static Find(Outer: UObject, ResourceName: string): SimplifyMeshToolProperties;
	static GetDefaultObject(): SimplifyMeshToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SimplifyMeshToolProperties;
	static C(Other: UObject | any): SimplifyMeshToolProperties;
}

declare class SimplifyMeshTool extends SingleSelectionMeshEditingTool { 
	SimplifyProperties: SimplifyMeshToolProperties;
	MeshStatisticsProperties: MeshStatisticsProperties;
	Preview: MeshOpPreviewWithBackgroundCompute;
	MeshElementsDisplay: MeshElementsVisualizer;
	static Load(ResourceName: string): SimplifyMeshTool;
	static Find(Outer: UObject, ResourceName: string): SimplifyMeshTool;
	static GetDefaultObject(): SimplifyMeshTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SimplifyMeshTool;
	static C(Other: UObject | any): SimplifyMeshTool;
}

declare class SubdividePolyToolBuilder extends SingleSelectionMeshEditingToolBuilder { 
	static Load(ResourceName: string): SubdividePolyToolBuilder;
	static Find(Outer: UObject, ResourceName: string): SubdividePolyToolBuilder;
	static GetDefaultObject(): SubdividePolyToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SubdividePolyToolBuilder;
	static C(Other: UObject | any): SubdividePolyToolBuilder;
}

declare type ESubdivisionScheme = 'Bilinear' | 'CatmullClark' | 'Loop' | 'ESubdivisionScheme_MAX';
declare var ESubdivisionScheme : { Bilinear:'Bilinear',CatmullClark:'CatmullClark',Loop:'Loop',ESubdivisionScheme_MAX:'ESubdivisionScheme_MAX', };
declare type ESubdivisionOutputNormals = 'Interpolated' | 'Generated' | 'None' | 'ESubdivisionOutputNormals_MAX';
declare var ESubdivisionOutputNormals : { Interpolated:'Interpolated',Generated:'Generated',None:'None',ESubdivisionOutputNormals_MAX:'ESubdivisionOutputNormals_MAX', };
declare type ESubdivisionOutputUVs = 'Interpolated' | 'None' | 'ESubdivisionOutputUVs_MAX';
declare var ESubdivisionOutputUVs : { Interpolated:'Interpolated',None:'None',ESubdivisionOutputUVs_MAX:'ESubdivisionOutputUVs_MAX', };
declare class SubdividePolyToolProperties extends InteractiveToolPropertySet { 
	SubdivisionLevel: number;
	bCatmullClarkOK: boolean;
	SubdivisionScheme: ESubdivisionScheme;
	NormalComputationMethod: ESubdivisionOutputNormals;
	UVComputationMethod: ESubdivisionOutputUVs;
	bNewPolyGroups: boolean;
	bRenderGroups: boolean;
	bRenderCage: boolean;
	static Load(ResourceName: string): SubdividePolyToolProperties;
	static Find(Outer: UObject, ResourceName: string): SubdividePolyToolProperties;
	static GetDefaultObject(): SubdividePolyToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SubdividePolyToolProperties;
	static C(Other: UObject | any): SubdividePolyToolProperties;
}

declare class SubdividePolyTool extends SingleSelectionMeshEditingTool { 
	PreviewMesh: PreviewMesh;
	Properties: SubdividePolyToolProperties;
	PreviewGeometry: PreviewGeometry;
	static Load(ResourceName: string): SubdividePolyTool;
	static Find(Outer: UObject, ResourceName: string): SubdividePolyTool;
	static GetDefaultObject(): SubdividePolyTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SubdividePolyTool;
	static C(Other: UObject | any): SubdividePolyTool;
}

declare class VoxelCSGMeshesToolBuilder extends MultiSelectionMeshEditingToolBuilder { 
	static Load(ResourceName: string): VoxelCSGMeshesToolBuilder;
	static Find(Outer: UObject, ResourceName: string): VoxelCSGMeshesToolBuilder;
	static GetDefaultObject(): VoxelCSGMeshesToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VoxelCSGMeshesToolBuilder;
	static C(Other: UObject | any): VoxelCSGMeshesToolBuilder;
}

declare type EVoxelCSGOperation = 'DifferenceAB' | 'DifferenceBA' | 'Intersect' | 'Union' | 'EVoxelCSGOperation_MAX';
declare var EVoxelCSGOperation : { DifferenceAB:'DifferenceAB',DifferenceBA:'DifferenceBA',Intersect:'Intersect',Union:'Union',EVoxelCSGOperation_MAX:'EVoxelCSGOperation_MAX', };
declare class VoxelCSGMeshesToolProperties extends InteractiveToolPropertySet { 
	Operation: EVoxelCSGOperation;
	VoxelCount: number;
	MeshAdaptivity: number;
	OffsetDistance: number;
	bAutoSimplify: boolean;
	static Load(ResourceName: string): VoxelCSGMeshesToolProperties;
	static Find(Outer: UObject, ResourceName: string): VoxelCSGMeshesToolProperties;
	static GetDefaultObject(): VoxelCSGMeshesToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VoxelCSGMeshesToolProperties;
	static C(Other: UObject | any): VoxelCSGMeshesToolProperties;
}

declare class VoxelCSGMeshesTool extends MultiSelectionMeshEditingTool { 
	CSGProps: VoxelCSGMeshesToolProperties;
	MeshStatisticsProperties: MeshStatisticsProperties;
	HandleSourcesProperties: OnAcceptHandleSourcesProperties;
	Preview: MeshOpPreviewWithBackgroundCompute;
	static Load(ResourceName: string): VoxelCSGMeshesTool;
	static Find(Outer: UObject, ResourceName: string): VoxelCSGMeshesTool;
	static GetDefaultObject(): VoxelCSGMeshesTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VoxelCSGMeshesTool;
	static C(Other: UObject | any): VoxelCSGMeshesTool;
}

declare class GenerateStaticMeshLODAssetToolBuilder extends MultiSelectionMeshEditingToolBuilder { 
	static Load(ResourceName: string): GenerateStaticMeshLODAssetToolBuilder;
	static Find(Outer: UObject, ResourceName: string): GenerateStaticMeshLODAssetToolBuilder;
	static GetDefaultObject(): GenerateStaticMeshLODAssetToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GenerateStaticMeshLODAssetToolBuilder;
	static C(Other: UObject | any): GenerateStaticMeshLODAssetToolBuilder;
}

declare type EGenerateLODAssetOutputMode = 'CreateNewAsset' | 'UpdateExistingAsset' | 'EGenerateLODAssetOutputMode_MAX';
declare var EGenerateLODAssetOutputMode : { CreateNewAsset:'CreateNewAsset',UpdateExistingAsset:'UpdateExistingAsset',EGenerateLODAssetOutputMode_MAX:'EGenerateLODAssetOutputMode_MAX', };
declare class GenerateStaticMeshLODAssetToolOutputProperties extends InteractiveToolPropertySet { 
	OutputMode: EGenerateLODAssetOutputMode;
	NewAssetName: string;
	bSaveInputAsHiResSource: boolean;
	GeneratedSuffix: string;
	bShowOutputMode: boolean;
	static Load(ResourceName: string): GenerateStaticMeshLODAssetToolOutputProperties;
	static Find(Outer: UObject, ResourceName: string): GenerateStaticMeshLODAssetToolOutputProperties;
	static GetDefaultObject(): GenerateStaticMeshLODAssetToolOutputProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GenerateStaticMeshLODAssetToolOutputProperties;
	static C(Other: UObject | any): GenerateStaticMeshLODAssetToolOutputProperties;
}

declare class GenerateStaticMeshLODAssetToolPresetProperties extends InteractiveToolPropertySet { 
	Preset: any;
	static Load(ResourceName: string): GenerateStaticMeshLODAssetToolPresetProperties;
	static Find(Outer: UObject, ResourceName: string): GenerateStaticMeshLODAssetToolPresetProperties;
	static GetDefaultObject(): GenerateStaticMeshLODAssetToolPresetProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GenerateStaticMeshLODAssetToolPresetProperties;
	WriteToPreset(): void;
	ReadFromPreset(): void;
	static C(Other: UObject | any): GenerateStaticMeshLODAssetToolPresetProperties;
}

declare class GenerateStaticMeshLODProcess_PreprocessSettings { 
	FilterGroupLayer: string;
	ThickenWeightMapName: string;
	ThickenAmount: number;
	clone() : GenerateStaticMeshLODProcess_PreprocessSettings;
	static C(Other: UObject | any): GenerateStaticMeshLODProcess_PreprocessSettings;
}

declare type EGenerateStaticMeshLODProcess_MeshGeneratorModes = 'Solidify' | 'SolidifyAndClose' | 'CleanAndSimplify' | 'ConvexHull' | 'EGenerateStaticMeshLODProcess_MAX';
declare var EGenerateStaticMeshLODProcess_MeshGeneratorModes : { Solidify:'Solidify',SolidifyAndClose:'SolidifyAndClose',CleanAndSimplify:'CleanAndSimplify',ConvexHull:'ConvexHull',EGenerateStaticMeshLODProcess_MAX:'EGenerateStaticMeshLODProcess_MAX', };
declare class GenerateStaticMeshLODProcessSettings { 
	MeshGenerator: EGenerateStaticMeshLODProcess_MeshGeneratorModes;
	SolidifyVoxelResolution: number;
	WindingThreshold: number;
	ClosureDistance: number;
	bPrefilterVertices: boolean;
	PrefilterGridResolution: number;
	clone() : GenerateStaticMeshLODProcessSettings;
	static C(Other: UObject | any): GenerateStaticMeshLODProcessSettings;
}

declare type EGenerateStaticMeshLODProcess_SimplifyMethod = 'TriangleCount' | 'VertexCount' | 'TrianglePercentage' | 'GeometricTolerance' | 'EGenerateStaticMeshLODProcess_MAX';
declare var EGenerateStaticMeshLODProcess_SimplifyMethod : { TriangleCount:'TriangleCount',VertexCount:'VertexCount',TrianglePercentage:'TrianglePercentage',GeometricTolerance:'GeometricTolerance',EGenerateStaticMeshLODProcess_MAX:'EGenerateStaticMeshLODProcess_MAX', };
declare class GenerateStaticMeshLODProcess_SimplifySettings { 
	Method: EGenerateStaticMeshLODProcess_SimplifyMethod;
	TargetCount: number;
	TargetPercentage: number;
	Tolerance: number;
	clone() : GenerateStaticMeshLODProcess_SimplifySettings;
	static C(Other: UObject | any): GenerateStaticMeshLODProcess_SimplifySettings;
}

declare type EGenerateStaticMeshLODProcess_NormalsMethod = 'FromAngleThreshold' | 'PerVertex' | 'PerTriangle' | 'EGenerateStaticMeshLODProcess_MAX';
declare var EGenerateStaticMeshLODProcess_NormalsMethod : { FromAngleThreshold:'FromAngleThreshold',PerVertex:'PerVertex',PerTriangle:'PerTriangle',EGenerateStaticMeshLODProcess_MAX:'EGenerateStaticMeshLODProcess_MAX', };
declare class GenerateStaticMeshLODProcess_NormalsSettings { 
	Method: EGenerateStaticMeshLODProcess_NormalsMethod;
	Angle: number;
	clone() : GenerateStaticMeshLODProcess_NormalsSettings;
	static C(Other: UObject | any): GenerateStaticMeshLODProcess_NormalsSettings;
}

declare type EGenerateStaticMeshLODBakeResolution = 'Resolution16' | 'Resolution32' | 'Resolution64' | 'Resolution128' | 'Resolution256' | 'Resolution512' | 'Resolution1024' | 'Resolution2048' | 'Resolution4096' | 'Resolution8192' | 'EGenerateStaticMeshLODBakeResolution_MAX';
declare var EGenerateStaticMeshLODBakeResolution : { Resolution16:'Resolution16',Resolution32:'Resolution32',Resolution64:'Resolution64',Resolution128:'Resolution128',Resolution256:'Resolution256',Resolution512:'Resolution512',Resolution1024:'Resolution1024',Resolution2048:'Resolution2048',Resolution4096:'Resolution4096',Resolution8192:'Resolution8192',EGenerateStaticMeshLODBakeResolution_MAX:'EGenerateStaticMeshLODBakeResolution_MAX', };
declare class GenerateStaticMeshLODProcess_TextureSettings { 
	BakeResolution: EGenerateStaticMeshLODBakeResolution;
	BakeThickness: number;
	bCombineTextures: boolean;
	clone() : GenerateStaticMeshLODProcess_TextureSettings;
	static C(Other: UObject | any): GenerateStaticMeshLODProcess_TextureSettings;
}

declare type EGenerateStaticMeshLODProcess_AutoUVMethod = 'PatchBuilder' | 'UVAtlas' | 'XAtlas' | 'EGenerateStaticMeshLODProcess_MAX';
declare var EGenerateStaticMeshLODProcess_AutoUVMethod : { PatchBuilder:'PatchBuilder',UVAtlas:'UVAtlas',XAtlas:'XAtlas',EGenerateStaticMeshLODProcess_MAX:'EGenerateStaticMeshLODProcess_MAX', };
declare class GenerateStaticMeshLODProcess_UVSettings_PatchBuilder { 
	CurvatureAlignment: number;
	SmoothingSteps: number;
	SmoothingAlpha: number;
	clone() : GenerateStaticMeshLODProcess_UVSettings_PatchBuilder;
	static C(Other: UObject | any): GenerateStaticMeshLODProcess_UVSettings_PatchBuilder;
}

declare class GenerateStaticMeshLODProcess_UVSettings { 
	UVMethod: EGenerateStaticMeshLODProcess_AutoUVMethod;
	NumUVAtlasCharts: number;
	NumInitialPatches: number;
	MergingThreshold: number;
	MaxAngleDeviation: number;
	PatchBuilder: GenerateStaticMeshLODProcess_UVSettings_PatchBuilder;
	clone() : GenerateStaticMeshLODProcess_UVSettings;
	static C(Other: UObject | any): GenerateStaticMeshLODProcess_UVSettings;
}

declare type EGenerateStaticMeshLODSimpleCollisionGeometryType = 'AlignedBoxes' | 'OrientedBoxes' | 'MinimalSpheres' | 'Capsules' | 'ConvexHulls' | 'SweptHulls' | 'MinVolume' | 'None' | 'EGenerateStaticMeshLODSimpleCollisionGeometryType_MAX';
declare var EGenerateStaticMeshLODSimpleCollisionGeometryType : { AlignedBoxes:'AlignedBoxes',OrientedBoxes:'OrientedBoxes',MinimalSpheres:'MinimalSpheres',Capsules:'Capsules',ConvexHulls:'ConvexHulls',SweptHulls:'SweptHulls',MinVolume:'MinVolume',None:'None',EGenerateStaticMeshLODSimpleCollisionGeometryType_MAX:'EGenerateStaticMeshLODSimpleCollisionGeometryType_MAX', };
declare type EGenerateStaticMeshLODProjectedHullAxisMode = 'X' | 'Y' | 'Z' | 'SmallestBoxDimension' | 'SmallestVolume' | 'EGenerateStaticMeshLODProjectedHullAxisMode_MAX';
declare var EGenerateStaticMeshLODProjectedHullAxisMode : { X:'X',Y:'Y',Z:'Z',SmallestBoxDimension:'SmallestBoxDimension',SmallestVolume:'SmallestVolume',EGenerateStaticMeshLODProjectedHullAxisMode_MAX:'EGenerateStaticMeshLODProjectedHullAxisMode_MAX', };
declare class GenerateStaticMeshLODProcess_CollisionSettings { 
	CollisionGroupLayerName: string;
	CollisionType: EGenerateStaticMeshLODSimpleCollisionGeometryType;
	ConvexTriangleCount: number;
	bPrefilterVertices: boolean;
	PrefilterGridResolution: number;
	bSimplifyPolygons: boolean;
	HullTolerance: number;
	SweepAxis: EGenerateStaticMeshLODProjectedHullAxisMode;
	clone() : GenerateStaticMeshLODProcess_CollisionSettings;
	static C(Other: UObject | any): GenerateStaticMeshLODProcess_CollisionSettings;
}

declare class GenerateStaticMeshLODAssetToolProperties extends InteractiveToolPropertySet { 
	Preprocessing: GenerateStaticMeshLODProcess_PreprocessSettings;
	MeshGeneration: GenerateStaticMeshLODProcessSettings;
	Simplification: GenerateStaticMeshLODProcess_SimplifySettings;
	Normals: GenerateStaticMeshLODProcess_NormalsSettings;
	TextureBaking: GenerateStaticMeshLODProcess_TextureSettings;
	UVGeneration: GenerateStaticMeshLODProcess_UVSettings;
	SimpleCollision: GenerateStaticMeshLODProcess_CollisionSettings;
	CollisionGroupLayerName: string;
	GroupLayersList: string[];
	static Load(ResourceName: string): GenerateStaticMeshLODAssetToolProperties;
	static Find(Outer: UObject, ResourceName: string): GenerateStaticMeshLODAssetToolProperties;
	static GetDefaultObject(): GenerateStaticMeshLODAssetToolProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GenerateStaticMeshLODAssetToolProperties;
	GetGroupLayersFunc(): string[];
	static C(Other: UObject | any): GenerateStaticMeshLODAssetToolProperties;
}

declare type EGenerateStaticMeshLOD_BakeConstraint = 'NoConstraint' | 'DoNotBake' | 'EGenerateStaticMeshLOD_MAX';
declare var EGenerateStaticMeshLOD_BakeConstraint : { NoConstraint:'NoConstraint',DoNotBake:'DoNotBake',EGenerateStaticMeshLOD_MAX:'EGenerateStaticMeshLOD_MAX', };
declare class GenerateStaticMeshLOD_MaterialConfig { 
	Material: MaterialInterface;
	Constraint: EGenerateStaticMeshLOD_BakeConstraint;
	clone() : GenerateStaticMeshLOD_MaterialConfig;
	static C(Other: UObject | any): GenerateStaticMeshLOD_MaterialConfig;
}

declare class GenerateStaticMeshLOD_TextureConfig { 
	Texture: Texture2D;
	Constraint: EGenerateStaticMeshLOD_BakeConstraint;
	clone() : GenerateStaticMeshLOD_TextureConfig;
	static C(Other: UObject | any): GenerateStaticMeshLOD_TextureConfig;
}

declare class GenerateStaticMeshLODAssetToolTextureProperties extends InteractiveToolPropertySet { 
	Materials: GenerateStaticMeshLOD_MaterialConfig[];
	Textures: GenerateStaticMeshLOD_TextureConfig[];
	PreviewTextures: Texture2D[];
	static Load(ResourceName: string): GenerateStaticMeshLODAssetToolTextureProperties;
	static Find(Outer: UObject, ResourceName: string): GenerateStaticMeshLODAssetToolTextureProperties;
	static GetDefaultObject(): GenerateStaticMeshLODAssetToolTextureProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GenerateStaticMeshLODAssetToolTextureProperties;
	static C(Other: UObject | any): GenerateStaticMeshLODAssetToolTextureProperties;
}

declare class GenerateStaticMeshLODProcess extends UObject { 
	SourceStaticMesh: StaticMesh;
	AllDerivedTextures: any;
	DerivedNormalMapTex: Texture2D;
	DerivedMultiTextureBakeResult: Texture2D;
	static Load(ResourceName: string): GenerateStaticMeshLODProcess;
	static Find(Outer: UObject, ResourceName: string): GenerateStaticMeshLODProcess;
	static GetDefaultObject(): GenerateStaticMeshLODProcess;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GenerateStaticMeshLODProcess;
	static C(Other: UObject | any): GenerateStaticMeshLODProcess;
}

declare class GenerateStaticMeshLODAssetTool extends MultiSelectionMeshEditingTool { 
	OutputProperties: GenerateStaticMeshLODAssetToolOutputProperties;
	BasicProperties: GenerateStaticMeshLODAssetToolProperties;
	PresetProperties: GenerateStaticMeshLODAssetToolPresetProperties;
	TextureProperties: GenerateStaticMeshLODAssetToolTextureProperties;
	CollisionVizSettings: CollisionGeometryVisualizationProperties;
	PreviewWithBackgroundCompute: MeshOpPreviewWithBackgroundCompute;
	PreviewTextures: Texture2D[];
	PreviewMaterials: MaterialInterface[];
	ObjectData: PhysicsObjectToolPropertySet;
	LineMaterial: MaterialInterface;
	CollisionPreview: PreviewGeometry;
	GenerateProcess: GenerateStaticMeshLODProcess;
	static Load(ResourceName: string): GenerateStaticMeshLODAssetTool;
	static Find(Outer: UObject, ResourceName: string): GenerateStaticMeshLODAssetTool;
	static GetDefaultObject(): GenerateStaticMeshLODAssetTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GenerateStaticMeshLODAssetTool;
	static C(Other: UObject | any): GenerateStaticMeshLODAssetTool;
}

declare class StaticMeshLODGenerationSettings extends UObject { 
	Preprocessing: GenerateStaticMeshLODProcess_PreprocessSettings;
	MeshGeneration: GenerateStaticMeshLODProcessSettings;
	Simplification: GenerateStaticMeshLODProcess_SimplifySettings;
	Normals: GenerateStaticMeshLODProcess_NormalsSettings;
	TextureBaking: GenerateStaticMeshLODProcess_TextureSettings;
	UVGeneration: GenerateStaticMeshLODProcess_UVSettings;
	SimpleCollision: GenerateStaticMeshLODProcess_CollisionSettings;
	static Load(ResourceName: string): StaticMeshLODGenerationSettings;
	static Find(Outer: UObject, ResourceName: string): StaticMeshLODGenerationSettings;
	static GetDefaultObject(): StaticMeshLODGenerationSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): StaticMeshLODGenerationSettings;
	static C(Other: UObject | any): StaticMeshLODGenerationSettings;
}

declare class StaticMeshLODGenerationSettingsFactory extends Factory { 
	static Load(ResourceName: string): StaticMeshLODGenerationSettingsFactory;
	static Find(Outer: UObject, ResourceName: string): StaticMeshLODGenerationSettingsFactory;
	static GetDefaultObject(): StaticMeshLODGenerationSettingsFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): StaticMeshLODGenerationSettingsFactory;
	static C(Other: UObject | any): StaticMeshLODGenerationSettingsFactory;
}

declare class LODManagerToolBuilder extends MultiSelectionMeshEditingToolBuilder { 
	static Load(ResourceName: string): LODManagerToolBuilder;
	static Find(Outer: UObject, ResourceName: string): LODManagerToolBuilder;
	static GetDefaultObject(): LODManagerToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LODManagerToolBuilder;
	static C(Other: UObject | any): LODManagerToolBuilder;
}

declare class LODManagerLODInfo { 
	vertexcount: number;
	TriangleCount: number;
	clone() : LODManagerLODInfo;
	static C(Other: UObject | any): LODManagerLODInfo;
}

declare class LODManagerLODProperties extends InteractiveToolPropertySet { 
	SourceLODs: LODManagerLODInfo[];
	HiResSource: LODManagerLODInfo[];
	RenderLODs: LODManagerLODInfo[];
	bNaniteEnabled: boolean;
	PercentTriangles: number;
	Materials: StaticMaterial[];
	static Load(ResourceName: string): LODManagerLODProperties;
	static Find(Outer: UObject, ResourceName: string): LODManagerLODProperties;
	static GetDefaultObject(): LODManagerLODProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LODManagerLODProperties;
	static C(Other: UObject | any): LODManagerLODProperties;
}

declare class LODManagerPreviewLODProperties extends InteractiveToolPropertySet { 
	VisibleLOD: string;
	LODNamesList: string[];
	bShowSeams: boolean;
	static Load(ResourceName: string): LODManagerPreviewLODProperties;
	static Find(Outer: UObject, ResourceName: string): LODManagerPreviewLODProperties;
	static GetDefaultObject(): LODManagerPreviewLODProperties;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LODManagerPreviewLODProperties;
	GetLODNamesFunc(): string[];
	static C(Other: UObject | any): LODManagerPreviewLODProperties;
}

declare class LODManagerActionPropertySet extends InteractiveToolPropertySet { 
	static Load(ResourceName: string): LODManagerActionPropertySet;
	static Find(Outer: UObject, ResourceName: string): LODManagerActionPropertySet;
	static GetDefaultObject(): LODManagerActionPropertySet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LODManagerActionPropertySet;
	static C(Other: UObject | any): LODManagerActionPropertySet;
}

declare class LODManagerHiResSourceModelActions extends LODManagerActionPropertySet { 
	static Load(ResourceName: string): LODManagerHiResSourceModelActions;
	static Find(Outer: UObject, ResourceName: string): LODManagerHiResSourceModelActions;
	static GetDefaultObject(): LODManagerHiResSourceModelActions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LODManagerHiResSourceModelActions;
	MoveToLOD0(): void;
	Delete(): void;
	static C(Other: UObject | any): LODManagerHiResSourceModelActions;
}

declare class LODManagerMaterialActions extends LODManagerActionPropertySet { 
	static Load(ResourceName: string): LODManagerMaterialActions;
	static Find(Outer: UObject, ResourceName: string): LODManagerMaterialActions;
	static GetDefaultObject(): LODManagerMaterialActions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LODManagerMaterialActions;
	CleanMaterials(): void;
	static C(Other: UObject | any): LODManagerMaterialActions;
}

declare class LODManagerTool extends MultiSelectionMeshEditingTool { 
	LODInfoProperties: LODManagerLODProperties;
	LODPreviewProperties: LODManagerPreviewLODProperties;
	HiResSourceModelActions: LODManagerHiResSourceModelActions;
	MaterialActions: LODManagerMaterialActions;
	LODPreview: PreviewMesh;
	LODPreviewLines: PreviewGeometry;
	static Load(ResourceName: string): LODManagerTool;
	static Find(Outer: UObject, ResourceName: string): LODManagerTool;
	static GetDefaultObject(): LODManagerTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LODManagerTool;
	RemoveUnreferencedMaterials(): void;
	MoveHiResToLOD0(): void;
	DeleteHiResSourceModel(): void;
	static C(Other: UObject | any): LODManagerTool;
}

declare class StylusInputSubsystem extends EditorSubsystem { 
	static Load(ResourceName: string): StylusInputSubsystem;
	static Find(Outer: UObject, ResourceName: string): StylusInputSubsystem;
	static GetDefaultObject(): StylusInputSubsystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): StylusInputSubsystem;
	static C(Other: UObject | any): StylusInputSubsystem;
}

declare class ModelingToolsEditorMode extends BaseLegacyWidgetEdMode { 
	SceneSnappingManager: ModelingSceneSnappingManager;
	static Load(ResourceName: string): ModelingToolsEditorMode;
	static Find(Outer: UObject, ResourceName: string): ModelingToolsEditorMode;
	static GetDefaultObject(): ModelingToolsEditorMode;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ModelingToolsEditorMode;
	static C(Other: UObject | any): ModelingToolsEditorMode;
}

declare type EModelingModeDefaultMeshObjectType = 'StaticMeshAsset' | 'VolumeActor' | 'DynamicMeshActor' | 'EModelingModeDefaultMeshObjectType_MAX';
declare var EModelingModeDefaultMeshObjectType : { StaticMeshAsset:'StaticMeshAsset',VolumeActor:'VolumeActor',DynamicMeshActor:'DynamicMeshActor',EModelingModeDefaultMeshObjectType_MAX:'EModelingModeDefaultMeshObjectType_MAX', };
declare type EModelingModeAssetGenerationBehavior = 'AutoGenerateAndAutosave' | 'AutoGenerateButDoNotAutosave' | 'InteractivePromptToSave' | 'EModelingModeAssetGenerationBehavior_MAX';
declare var EModelingModeAssetGenerationBehavior : { AutoGenerateAndAutosave:'AutoGenerateAndAutosave',AutoGenerateButDoNotAutosave:'AutoGenerateButDoNotAutosave',InteractivePromptToSave:'InteractivePromptToSave',EModelingModeAssetGenerationBehavior_MAX:'EModelingModeAssetGenerationBehavior_MAX', };
declare type EModelingModeAssetGenerationLocation = 'AutoGeneratedWorldRelativeAssetPath' | 'AutoGeneratedGlobalAssetPath' | 'CurrentAssetBrowserPathIfAvailable' | 'EModelingModeAssetGenerationLocation_MAX';
declare var EModelingModeAssetGenerationLocation : { AutoGeneratedWorldRelativeAssetPath:'AutoGeneratedWorldRelativeAssetPath',AutoGeneratedGlobalAssetPath:'AutoGeneratedGlobalAssetPath',CurrentAssetBrowserPathIfAvailable:'CurrentAssetBrowserPathIfAvailable',EModelingModeAssetGenerationLocation_MAX:'EModelingModeAssetGenerationLocation_MAX', };
declare class ModelingToolsEditorModeSettings extends DeveloperSettings { 
	bEnableDynamicMeshActors: boolean;
	DefaultMeshObjectType: EModelingModeDefaultMeshObjectType;
	AssetGenerationMode: EModelingModeAssetGenerationBehavior;
	AssetGenerationLocation: EModelingModeAssetGenerationLocation;
	AutoGeneratedAssetPath: string;
	bStoreUnsavedLevelAssetsInTopLevelGameFolder: boolean;
	bUsePerUserAutogenSubfolder: boolean;
	AutogenSubfolderUserNameOverride: string;
	bAppendRandomStringToName: boolean;
	bEnablePersistentSelections: boolean;
	static Load(ResourceName: string): ModelingToolsEditorModeSettings;
	static Find(Outer: UObject, ResourceName: string): ModelingToolsEditorModeSettings;
	static GetDefaultObject(): ModelingToolsEditorModeSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ModelingToolsEditorModeSettings;
	static C(Other: UObject | any): ModelingToolsEditorModeSettings;
}

declare class ModelingModeCustomSectionColor { 
	SectionName: string;
	Color: LinearColor;
	clone() : ModelingModeCustomSectionColor;
	static C(Other: UObject | any): ModelingModeCustomSectionColor;
}

declare class ModelingModeCustomToolColor { 
	ToolName: string;
	Color: LinearColor;
	clone() : ModelingModeCustomToolColor;
	static C(Other: UObject | any): ModelingModeCustomToolColor;
}

declare class ModelingModeAssetCollectionSet { 
	Name: string;
	Collections: CollectionReference[];
	clone() : ModelingModeAssetCollectionSet;
	static C(Other: UObject | any): ModelingModeAssetCollectionSet;
}

declare class ModelingToolsModeCustomizationSettings extends DeveloperSettings { 
	ToolSectionOrder: string[];
	ToolFavorites: string[];
	SectionColors: ModelingModeCustomSectionColor[];
	ToolColors: ModelingModeCustomToolColor[];
	BrushAlphaSets: ModelingModeAssetCollectionSet[];
	static Load(ResourceName: string): ModelingToolsModeCustomizationSettings;
	static Find(Outer: UObject, ResourceName: string): ModelingToolsModeCustomizationSettings;
	static GetDefaultObject(): ModelingToolsModeCustomizationSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ModelingToolsModeCustomizationSettings;
	static C(Other: UObject | any): ModelingToolsModeCustomizationSettings;
}

declare class NewPluginDescriptorData extends UObject { 
	CreatedBy: string;
	CreatedByURL: string;
	Description: string;
	bIsBetaVersion: boolean;
	static Load(ResourceName: string): NewPluginDescriptorData;
	static Find(Outer: UObject, ResourceName: string): NewPluginDescriptorData;
	static GetDefaultObject(): NewPluginDescriptorData;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NewPluginDescriptorData;
	static C(Other: UObject | any): NewPluginDescriptorData;
}

declare class PluginReferenceMetadata { 
	Name: string;
	bOptional: boolean;
	bEnabled: boolean;
	clone() : PluginReferenceMetadata;
	static C(Other: UObject | any): PluginReferenceMetadata;
}

declare class PluginMetadataObject extends UObject { 
	Version: number;
	VersionName: string;
	FriendlyName: string;
	Description: string;
	Category: string;
	CreatedBy: string;
	CreatedByURL: string;
	DocsURL: string;
	MarketplaceURL: string;
	SupportURL: string;
	bCanContainContent: boolean;
	bIsBetaVersion: boolean;
	Plugins: PluginReferenceMetadata[];
	static Load(ResourceName: string): PluginMetadataObject;
	static Find(Outer: UObject, ResourceName: string): PluginMetadataObject;
	static GetDefaultObject(): PluginMetadataObject;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PluginMetadataObject;
	GetAvailablePluginDependencies(): string[];
	static C(Other: UObject | any): PluginMetadataObject;
}

declare class MovieSceneBindingExtensions extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): MovieSceneBindingExtensions;
	static Find(Outer: UObject, ResourceName: string): MovieSceneBindingExtensions;
	static GetDefaultObject(): MovieSceneBindingExtensions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneBindingExtensions;
	static SetParent(InBinding: SequencerBindingProxy,InParentBinding: SequencerBindingProxy): void;
	static SetName(InBinding: SequencerBindingProxy,InName: string): void;
	static SetDisplayName(InBinding: SequencerBindingProxy,InDisplayName: string): void;
	static RemoveTrack(InBinding: SequencerBindingProxy,TrackToRemove: MovieSceneTrack): void;
	static Remove(InBinding: SequencerBindingProxy): void;
	static MoveBindingContents(SourceBindingId: SequencerBindingProxy,DestinationBindingId: SequencerBindingProxy): void;
	static IsValid(InBinding: SequencerBindingProxy): boolean;
	static GetTracks(InBinding: SequencerBindingProxy): MovieSceneTrack[];
	static GetPossessedObjectClass(InBinding: SequencerBindingProxy): UnrealEngineClass;
	static GetParent(InBinding: SequencerBindingProxy): SequencerBindingProxy;
	static GetObjectTemplate(InBinding: SequencerBindingProxy): UObject;
	static GetName(InBinding: SequencerBindingProxy): string;
	static GetId(InBinding: SequencerBindingProxy): Guid;
	static GetDisplayName(InBinding: SequencerBindingProxy): string;
	static GetChildPossessables(InBinding: SequencerBindingProxy): SequencerBindingProxy[];
	static FindTracksByType(InBinding: SequencerBindingProxy,TrackType: UnrealEngineClass): MovieSceneTrack[];
	static FindTracksByExactType(InBinding: SequencerBindingProxy,TrackType: UnrealEngineClass): MovieSceneTrack[];
	static AddTrack(InBinding: SequencerBindingProxy,TrackType: UnrealEngineClass): MovieSceneTrack;
	static C(Other: UObject | any): MovieSceneBindingExtensions;
}

declare class MovieSceneEventTrackExtensions extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): MovieSceneEventTrackExtensions;
	static Find(Outer: UObject, ResourceName: string): MovieSceneEventTrackExtensions;
	static GetDefaultObject(): MovieSceneEventTrackExtensions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneEventTrackExtensions;
	static GetBoundObjectPropertyClass(EventKey: MovieSceneEvent): UnrealEngineClass;
	static AddEventTriggerSection(InTrack: MovieSceneEventTrack): MovieSceneEventTriggerSection;
	static AddEventRepeaterSection(InTrack: MovieSceneEventTrack): MovieSceneEventRepeaterSection;
	static C(Other: UObject | any): MovieSceneEventTrackExtensions;
}

declare class MovieSceneFolderExtensions extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): MovieSceneFolderExtensions;
	static Find(Outer: UObject, ResourceName: string): MovieSceneFolderExtensions;
	static GetDefaultObject(): MovieSceneFolderExtensions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneFolderExtensions;
	static SetFolderName(Folder: MovieSceneFolder,InFolderName: string): boolean;
	static SetFolderColor(Folder: MovieSceneFolder,InFolderColor: Color): boolean;
	static RemoveChildObjectBinding(Folder: MovieSceneFolder,InObjectBinding: SequencerBindingProxy): boolean;
	static RemoveChildMasterTrack(Folder: MovieSceneFolder,InMasterTrack: MovieSceneTrack): boolean;
	static RemoveChildFolder(TargetFolder: MovieSceneFolder,FolderToRemove: MovieSceneFolder): boolean;
	static GetFolderName(Folder: MovieSceneFolder): string;
	static GetFolderColor(Folder: MovieSceneFolder): Color;
	static GetChildObjectBindings(Folder: MovieSceneFolder): SequencerBindingProxy[];
	static GetChildMasterTracks(Folder: MovieSceneFolder): MovieSceneTrack[];
	static GetChildFolders(Folder: MovieSceneFolder): MovieSceneFolder[];
	static AddChildObjectBinding(Folder: MovieSceneFolder,InObjectBinding: SequencerBindingProxy): boolean;
	static AddChildMasterTrack(Folder: MovieSceneFolder,InMasterTrack: MovieSceneTrack): boolean;
	static AddChildFolder(TargetFolder: MovieSceneFolder,FolderToAdd: MovieSceneFolder): boolean;
	static C(Other: UObject | any): MovieSceneFolderExtensions;
}

declare class MovieScenePropertyTrackExtensions extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): MovieScenePropertyTrackExtensions;
	static Find(Outer: UObject, ResourceName: string): MovieScenePropertyTrackExtensions;
	static GetDefaultObject(): MovieScenePropertyTrackExtensions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieScenePropertyTrackExtensions;
	static SetPropertyNameAndPath(Track: MovieScenePropertyTrack,InPropertyName: string,InPropertyPath: string): void;
	static SetObjectPropertyClass(Track: MovieSceneObjectPropertyTrack,PropertyClass: UnrealEngineClass): void;
	static GetUniqueTrackName(Track: MovieScenePropertyTrack): string;
	static GetPropertyPath(Track: MovieScenePropertyTrack): string;
	static GetPropertyName(Track: MovieScenePropertyTrack): string;
	static GetObjectPropertyClass(Track: MovieSceneObjectPropertyTrack): UnrealEngineClass;
	static C(Other: UObject | any): MovieScenePropertyTrackExtensions;
}

declare class MovieSceneScriptingKey extends UObject { 
	static Load(ResourceName: string): MovieSceneScriptingKey;
	static Find(Outer: UObject, ResourceName: string): MovieSceneScriptingKey;
	static GetDefaultObject(): MovieSceneScriptingKey;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneScriptingKey;
	static C(Other: UObject | any): MovieSceneScriptingKey;
}

declare class MovieSceneScriptingActorReferenceKey extends MovieSceneScriptingKey { 
	static Load(ResourceName: string): MovieSceneScriptingActorReferenceKey;
	static Find(Outer: UObject, ResourceName: string): MovieSceneScriptingActorReferenceKey;
	static GetDefaultObject(): MovieSceneScriptingActorReferenceKey;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneScriptingActorReferenceKey;
	SetValue(InNewValue: MovieSceneObjectBindingID): void;
	SetTime(NewFrameNumber: FrameNumber,SubFrame: number,TimeUnit: ESequenceTimeUnit): void;
	GetValue(): MovieSceneObjectBindingID;
	GetTime(TimeUnit: ESequenceTimeUnit): FrameTime;
	static C(Other: UObject | any): MovieSceneScriptingActorReferenceKey;
}

declare class MovieSceneScriptingActorReferenceChannel extends MovieSceneScriptingChannel { 
	static Load(ResourceName: string): MovieSceneScriptingActorReferenceChannel;
	static Find(Outer: UObject, ResourceName: string): MovieSceneScriptingActorReferenceChannel;
	static GetDefaultObject(): MovieSceneScriptingActorReferenceChannel;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneScriptingActorReferenceChannel;
	SetDefault(InDefaultValue: MovieSceneObjectBindingID): void;
	RemoveKey(Key: MovieSceneScriptingKey): void;
	RemoveDefault(): void;
	HasDefault(): boolean;
	GetKeys(): MovieSceneScriptingKey[];
	GetDefault(): MovieSceneObjectBindingID;
	AddKey(InTime: FrameNumber,NewValue: MovieSceneObjectBindingID,SubFrame: number,TimeUnit: ESequenceTimeUnit): MovieSceneScriptingActorReferenceKey;
	static C(Other: UObject | any): MovieSceneScriptingActorReferenceChannel;
}

declare class MovieSceneScriptingBoolKey extends MovieSceneScriptingKey { 
	static Load(ResourceName: string): MovieSceneScriptingBoolKey;
	static Find(Outer: UObject, ResourceName: string): MovieSceneScriptingBoolKey;
	static GetDefaultObject(): MovieSceneScriptingBoolKey;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneScriptingBoolKey;
	SetValue(InNewValue: boolean): void;
	SetTime(NewFrameNumber: FrameNumber,SubFrame: number,TimeUnit: ESequenceTimeUnit): void;
	GetValue(): boolean;
	GetTime(TimeUnit: ESequenceTimeUnit): FrameTime;
	static C(Other: UObject | any): MovieSceneScriptingBoolKey;
}

declare class MovieSceneScriptingBoolChannel extends MovieSceneScriptingChannel { 
	static Load(ResourceName: string): MovieSceneScriptingBoolChannel;
	static Find(Outer: UObject, ResourceName: string): MovieSceneScriptingBoolChannel;
	static GetDefaultObject(): MovieSceneScriptingBoolChannel;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneScriptingBoolChannel;
	SetDefault(InDefaultValue: boolean): void;
	RemoveKey(Key: MovieSceneScriptingKey): void;
	RemoveDefault(): void;
	HasDefault(): boolean;
	GetNumKeys(): number;
	GetKeys(): MovieSceneScriptingKey[];
	GetDefault(): boolean;
	EvaluateKeys(Range: SequencerScriptingRange,FrameRate: FrameRate): boolean[];
	ComputeEffectiveRange(): SequencerScriptingRange;
	AddKey(InTime: FrameNumber,NewValue: boolean,SubFrame: number,TimeUnit: ESequenceTimeUnit): MovieSceneScriptingBoolKey;
	static C(Other: UObject | any): MovieSceneScriptingBoolChannel;
}

declare class MovieSceneScriptingByteKey extends MovieSceneScriptingKey { 
	static Load(ResourceName: string): MovieSceneScriptingByteKey;
	static Find(Outer: UObject, ResourceName: string): MovieSceneScriptingByteKey;
	static GetDefaultObject(): MovieSceneScriptingByteKey;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneScriptingByteKey;
	SetValue(InNewValue: number): void;
	SetTime(NewFrameNumber: FrameNumber,SubFrame: number,TimeUnit: ESequenceTimeUnit): void;
	GetValue(): number;
	GetTime(TimeUnit: ESequenceTimeUnit): FrameTime;
	static C(Other: UObject | any): MovieSceneScriptingByteKey;
}

declare class MovieSceneScriptingByteChannel extends MovieSceneScriptingChannel { 
	static Load(ResourceName: string): MovieSceneScriptingByteChannel;
	static Find(Outer: UObject, ResourceName: string): MovieSceneScriptingByteChannel;
	static GetDefaultObject(): MovieSceneScriptingByteChannel;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneScriptingByteChannel;
	SetDefault(InDefaultValue: number): void;
	RemoveKey(Key: MovieSceneScriptingKey): void;
	RemoveDefault(): void;
	HasDefault(): boolean;
	GetKeys(): MovieSceneScriptingKey[];
	GetDefault(): number;
	AddKey(InTime: FrameNumber,NewValue: number,SubFrame: number,TimeUnit: ESequenceTimeUnit,InInterpolation: EMovieSceneKeyInterpolation): MovieSceneScriptingByteKey;
	static C(Other: UObject | any): MovieSceneScriptingByteChannel;
}

declare class MovieSceneScriptingDoubleKey extends MovieSceneScriptingKey { 
	static Load(ResourceName: string): MovieSceneScriptingDoubleKey;
	static Find(Outer: UObject, ResourceName: string): MovieSceneScriptingDoubleKey;
	static GetDefaultObject(): MovieSceneScriptingDoubleKey;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneScriptingDoubleKey;
	SetValue(InNewValue: any): void;
	SetTime(NewFrameNumber: FrameNumber,SubFrame: number,TimeUnit: ESequenceTimeUnit): void;
	SetTangentWeightMode(InNewValue: ERichCurveTangentWeightMode): void;
	SetTangentMode(InNewValue: ERichCurveTangentMode): void;
	SetLeaveTangentWeight(InNewValue: number): void;
	SetLeaveTangent(InNewValue: number): void;
	SetInterpolationMode(InNewValue: ERichCurveInterpMode): void;
	SetArriveTangentWeight(InNewValue: number): void;
	SetArriveTangent(InNewValue: number): void;
	GetValue(): any;
	GetTime(TimeUnit: ESequenceTimeUnit): FrameTime;
	GetTangentWeightMode(): ERichCurveTangentWeightMode;
	GetTangentMode(): ERichCurveTangentMode;
	GetLeaveTangentWeight(): number;
	GetLeaveTangent(): number;
	GetInterpolationMode(): ERichCurveInterpMode;
	GetArriveTangentWeight(): number;
	GetArriveTangent(): number;
	static C(Other: UObject | any): MovieSceneScriptingDoubleKey;
}

declare class MovieSceneScriptingDoubleChannel extends MovieSceneScriptingChannel { 
	static Load(ResourceName: string): MovieSceneScriptingDoubleChannel;
	static Find(Outer: UObject, ResourceName: string): MovieSceneScriptingDoubleChannel;
	static GetDefaultObject(): MovieSceneScriptingDoubleChannel;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneScriptingDoubleChannel;
	SetPreInfinityExtrapolation(InExtrapolation: ERichCurveExtrapolation): void;
	SetPostInfinityExtrapolation(InExtrapolation: ERichCurveExtrapolation): void;
	SetDefault(InDefaultValue: any): void;
	RemoveKey(Key: MovieSceneScriptingKey): void;
	RemoveDefault(): void;
	HasDefault(): boolean;
	GetPreInfinityExtrapolation(): ERichCurveExtrapolation;
	GetPostInfinityExtrapolation(): ERichCurveExtrapolation;
	GetNumKeys(): number;
	GetKeys(): MovieSceneScriptingKey[];
	GetDefault(): any;
	EvaluateKeys(Range: SequencerScriptingRange,FrameRate: FrameRate): any[];
	ComputeEffectiveRange(): SequencerScriptingRange;
	AddKey(InTime: FrameNumber,NewValue: any,SubFrame: number,TimeUnit: ESequenceTimeUnit,InInterpolation: EMovieSceneKeyInterpolation): MovieSceneScriptingDoubleKey;
	static C(Other: UObject | any): MovieSceneScriptingDoubleChannel;
}

declare class MovieSceneScriptingEventKey extends MovieSceneScriptingKey { 
	static Load(ResourceName: string): MovieSceneScriptingEventKey;
	static Find(Outer: UObject, ResourceName: string): MovieSceneScriptingEventKey;
	static GetDefaultObject(): MovieSceneScriptingEventKey;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneScriptingEventKey;
	SetValue(InNewValue: MovieSceneEvent): void;
	SetTime(NewFrameNumber: FrameNumber,SubFrame: number,TimeUnit: ESequenceTimeUnit): void;
	GetValue(): MovieSceneEvent;
	GetTime(TimeUnit: ESequenceTimeUnit): FrameTime;
	static C(Other: UObject | any): MovieSceneScriptingEventKey;
}

declare class MovieSceneScriptingEventChannel extends MovieSceneScriptingChannel { 
	static Load(ResourceName: string): MovieSceneScriptingEventChannel;
	static Find(Outer: UObject, ResourceName: string): MovieSceneScriptingEventChannel;
	static GetDefaultObject(): MovieSceneScriptingEventChannel;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneScriptingEventChannel;
	RemoveKey(Key: MovieSceneScriptingKey): void;
	GetKeys(): MovieSceneScriptingKey[];
	AddKey(InTime: FrameNumber,NewValue: MovieSceneEvent,SubFrame: number,TimeUnit: ESequenceTimeUnit): MovieSceneScriptingEventKey;
	static C(Other: UObject | any): MovieSceneScriptingEventChannel;
}

declare class MovieSceneScriptingFloatKey extends MovieSceneScriptingKey { 
	static Load(ResourceName: string): MovieSceneScriptingFloatKey;
	static Find(Outer: UObject, ResourceName: string): MovieSceneScriptingFloatKey;
	static GetDefaultObject(): MovieSceneScriptingFloatKey;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneScriptingFloatKey;
	SetValue(InNewValue: number): void;
	SetTime(NewFrameNumber: FrameNumber,SubFrame: number,TimeUnit: ESequenceTimeUnit): void;
	SetTangentWeightMode(InNewValue: ERichCurveTangentWeightMode): void;
	SetTangentMode(InNewValue: ERichCurveTangentMode): void;
	SetLeaveTangentWeight(InNewValue: number): void;
	SetLeaveTangent(InNewValue: number): void;
	SetInterpolationMode(InNewValue: ERichCurveInterpMode): void;
	SetArriveTangentWeight(InNewValue: number): void;
	SetArriveTangent(InNewValue: number): void;
	GetValue(): number;
	GetTime(TimeUnit: ESequenceTimeUnit): FrameTime;
	GetTangentWeightMode(): ERichCurveTangentWeightMode;
	GetTangentMode(): ERichCurveTangentMode;
	GetLeaveTangentWeight(): number;
	GetLeaveTangent(): number;
	GetInterpolationMode(): ERichCurveInterpMode;
	GetArriveTangentWeight(): number;
	GetArriveTangent(): number;
	static C(Other: UObject | any): MovieSceneScriptingFloatKey;
}

declare class MovieSceneScriptingActualFloatKey extends MovieSceneScriptingFloatKey { 
	static Load(ResourceName: string): MovieSceneScriptingActualFloatKey;
	static Find(Outer: UObject, ResourceName: string): MovieSceneScriptingActualFloatKey;
	static GetDefaultObject(): MovieSceneScriptingActualFloatKey;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneScriptingActualFloatKey;
	static C(Other: UObject | any): MovieSceneScriptingActualFloatKey;
}

declare class MovieSceneScriptingDoubleAsFloatKey extends MovieSceneScriptingFloatKey { 
	static Load(ResourceName: string): MovieSceneScriptingDoubleAsFloatKey;
	static Find(Outer: UObject, ResourceName: string): MovieSceneScriptingDoubleAsFloatKey;
	static GetDefaultObject(): MovieSceneScriptingDoubleAsFloatKey;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneScriptingDoubleAsFloatKey;
	static C(Other: UObject | any): MovieSceneScriptingDoubleAsFloatKey;
}

declare class MovieSceneScriptingFloatChannel extends MovieSceneScriptingChannel { 
	static Load(ResourceName: string): MovieSceneScriptingFloatChannel;
	static Find(Outer: UObject, ResourceName: string): MovieSceneScriptingFloatChannel;
	static GetDefaultObject(): MovieSceneScriptingFloatChannel;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneScriptingFloatChannel;
	SetPreInfinityExtrapolation(InExtrapolation: ERichCurveExtrapolation): void;
	SetPostInfinityExtrapolation(InExtrapolation: ERichCurveExtrapolation): void;
	SetDefault(InDefaultValue: number): void;
	RemoveKey(Key: MovieSceneScriptingKey): void;
	RemoveDefault(): void;
	HasDefault(): boolean;
	GetPreInfinityExtrapolation(): ERichCurveExtrapolation;
	GetPostInfinityExtrapolation(): ERichCurveExtrapolation;
	GetNumKeys(): number;
	GetKeys(): MovieSceneScriptingKey[];
	GetDefault(): number;
	EvaluateKeys(Range: SequencerScriptingRange,FrameRate: FrameRate): number[];
	ComputeEffectiveRange(): SequencerScriptingRange;
	AddKey(InTime: FrameNumber,NewValue: number,SubFrame: number,TimeUnit: ESequenceTimeUnit,InInterpolation: EMovieSceneKeyInterpolation): MovieSceneScriptingFloatKey;
	static C(Other: UObject | any): MovieSceneScriptingFloatChannel;
}

declare class MovieSceneScriptingIntegerKey extends MovieSceneScriptingKey { 
	static Load(ResourceName: string): MovieSceneScriptingIntegerKey;
	static Find(Outer: UObject, ResourceName: string): MovieSceneScriptingIntegerKey;
	static GetDefaultObject(): MovieSceneScriptingIntegerKey;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneScriptingIntegerKey;
	SetValue(InNewValue: number): void;
	SetTime(NewFrameNumber: FrameNumber,SubFrame: number,TimeUnit: ESequenceTimeUnit): void;
	GetValue(): number;
	GetTime(TimeUnit: ESequenceTimeUnit): FrameTime;
	static C(Other: UObject | any): MovieSceneScriptingIntegerKey;
}

declare class MovieSceneScriptingIntegerChannel extends MovieSceneScriptingChannel { 
	static Load(ResourceName: string): MovieSceneScriptingIntegerChannel;
	static Find(Outer: UObject, ResourceName: string): MovieSceneScriptingIntegerChannel;
	static GetDefaultObject(): MovieSceneScriptingIntegerChannel;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneScriptingIntegerChannel;
	SetDefault(InDefaultValue: number): void;
	RemoveKey(Key: MovieSceneScriptingKey): void;
	RemoveDefault(): void;
	HasDefault(): boolean;
	GetKeys(): MovieSceneScriptingKey[];
	GetDefault(): number;
	AddKey(InTime: FrameNumber,NewValue: number,SubFrame: number,TimeUnit: ESequenceTimeUnit): MovieSceneScriptingIntegerKey;
	static C(Other: UObject | any): MovieSceneScriptingIntegerChannel;
}

declare class MovieSceneScriptingObjectPathKey extends MovieSceneScriptingKey { 
	static Load(ResourceName: string): MovieSceneScriptingObjectPathKey;
	static Find(Outer: UObject, ResourceName: string): MovieSceneScriptingObjectPathKey;
	static GetDefaultObject(): MovieSceneScriptingObjectPathKey;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneScriptingObjectPathKey;
	SetValue(InNewValue: UObject): void;
	SetTime(NewFrameNumber: FrameNumber,SubFrame: number,TimeUnit: ESequenceTimeUnit): void;
	GetValue(): UObject;
	GetTime(TimeUnit: ESequenceTimeUnit): FrameTime;
	static C(Other: UObject | any): MovieSceneScriptingObjectPathKey;
}

declare class MovieSceneScriptingObjectPathChannel extends MovieSceneScriptingChannel { 
	static Load(ResourceName: string): MovieSceneScriptingObjectPathChannel;
	static Find(Outer: UObject, ResourceName: string): MovieSceneScriptingObjectPathChannel;
	static GetDefaultObject(): MovieSceneScriptingObjectPathChannel;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneScriptingObjectPathChannel;
	SetDefault(InDefaultValue: UObject): void;
	RemoveKey(Key: MovieSceneScriptingKey): void;
	RemoveDefault(): void;
	HasDefault(): boolean;
	GetKeys(): MovieSceneScriptingKey[];
	GetDefault(): UObject;
	AddKey(InTime: FrameNumber,NewValue: UObject,SubFrame: number,TimeUnit: ESequenceTimeUnit): MovieSceneScriptingObjectPathKey;
	static C(Other: UObject | any): MovieSceneScriptingObjectPathChannel;
}

declare class MovieSceneScriptingStringKey extends MovieSceneScriptingKey { 
	static Load(ResourceName: string): MovieSceneScriptingStringKey;
	static Find(Outer: UObject, ResourceName: string): MovieSceneScriptingStringKey;
	static GetDefaultObject(): MovieSceneScriptingStringKey;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneScriptingStringKey;
	SetValue(InNewValue: string): void;
	SetTime(NewFrameNumber: FrameNumber,SubFrame: number,TimeUnit: ESequenceTimeUnit): void;
	GetValue(): string;
	GetTime(TimeUnit: ESequenceTimeUnit): FrameTime;
	static C(Other: UObject | any): MovieSceneScriptingStringKey;
}

declare class MovieSceneScriptingStringChannel extends MovieSceneScriptingChannel { 
	static Load(ResourceName: string): MovieSceneScriptingStringChannel;
	static Find(Outer: UObject, ResourceName: string): MovieSceneScriptingStringChannel;
	static GetDefaultObject(): MovieSceneScriptingStringChannel;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneScriptingStringChannel;
	SetDefault(InDefaultValue: string): void;
	RemoveKey(Key: MovieSceneScriptingKey): void;
	RemoveDefault(): void;
	HasDefault(): boolean;
	GetKeys(): MovieSceneScriptingKey[];
	GetDefault(): string;
	AddKey(InTime: FrameNumber,NewValue: string,SubFrame: number,TimeUnit: ESequenceTimeUnit): MovieSceneScriptingStringKey;
	static C(Other: UObject | any): MovieSceneScriptingStringChannel;
}

declare class MovieSceneSectionExtensions extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): MovieSceneSectionExtensions;
	static Find(Outer: UObject, ResourceName: string): MovieSceneSectionExtensions;
	static GetDefaultObject(): MovieSceneSectionExtensions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneSectionExtensions;
	static SetStartFrameSeconds(Section: MovieSceneSection,StartTime: number): void;
	static SetStartFrameBounded(Section: MovieSceneSection,bIsBounded: boolean): void;
	static SetStartFrame(Section: MovieSceneSection,StartFrame: number): void;
	static SetRangeSeconds(Section: MovieSceneSection,StartTime: number,EndTime: number): void;
	static SetRange(Section: MovieSceneSection,StartFrame: number,EndFrame: number): void;
	static SetEndFrameSeconds(Section: MovieSceneSection,EndTime: number): void;
	static SetEndFrameBounded(Section: MovieSceneSection,bIsBounded: boolean): void;
	static SetEndFrame(Section: MovieSceneSection,EndFrame: number): void;
	static HasStartFrame(Section: MovieSceneSection): boolean;
	static HasEndFrame(Section: MovieSceneSection): boolean;
	static GetStartFrameSeconds(Section: MovieSceneSection): number;
	static GetStartFrame(Section: MovieSceneSection): number;
	static GetParentSequenceFrame(Section: MovieSceneSubSection,InFrame: number,ParentSequence: MovieSceneSequence): number;
	static GetEndFrameSeconds(Section: MovieSceneSection): number;
	static GetEndFrame(Section: MovieSceneSection): number;
	static GetChannelsByType(Section: MovieSceneSection,ChannelType: UnrealEngineClass): MovieSceneScriptingChannel[];
	static GetChannels(Section: MovieSceneSection): MovieSceneScriptingChannel[];
	static GetAllChannels(Section: MovieSceneSection): MovieSceneScriptingChannel[];
	static FindChannelsByType(Section: MovieSceneSection,ChannelType: UnrealEngineClass): MovieSceneScriptingChannel[];
	static C(Other: UObject | any): MovieSceneSectionExtensions;
}

declare class MovieSceneSequenceExtensions extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): MovieSceneSequenceExtensions;
	static Find(Outer: UObject, ResourceName: string): MovieSceneSequenceExtensions;
	static GetDefaultObject(): MovieSceneSequenceExtensions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneSequenceExtensions;
	static SortMarkedFrames(Sequence: MovieSceneSequence): void;
	static SetWorkRangeStart(InSequence: MovieSceneSequence,StartTimeInSeconds: number): void;
	static SetWorkRangeEnd(InSequence: MovieSceneSequence,EndTimeInSeconds: number): void;
	static SetViewRangeStart(InSequence: MovieSceneSequence,StartTimeInSeconds: number): void;
	static SetViewRangeEnd(InSequence: MovieSceneSequence,EndTimeInSeconds: number): void;
	static SetTickResolutionDirectly(Sequence: MovieSceneSequence,TickResolution: FrameRate): void;
	static SetTickResolution(Sequence: MovieSceneSequence,TickResolution: FrameRate): void;
	static SetReadOnly(Sequence: MovieSceneSequence,bInReadOnly: boolean): void;
	static SetPlaybackStartSeconds(Sequence: MovieSceneSequence,StartTime: number): void;
	static SetPlaybackStart(Sequence: MovieSceneSequence,StartFrame: number): void;
	static SetPlaybackEndSeconds(Sequence: MovieSceneSequence,EndTime: number): void;
	static SetPlaybackEnd(Sequence: MovieSceneSequence,EndFrame: number): void;
	static SetMarkedFrame(Sequence: MovieSceneSequence,InMarkIndex: number,InFrameNumber: FrameNumber): void;
	static SetEvaluationType(InSequence: MovieSceneSequence,InEvaluationType: EMovieSceneEvaluationType): void;
	static SetDisplayRate(Sequence: MovieSceneSequence,DisplayRate: FrameRate): void;
	static SetClockSource(InSequence: MovieSceneSequence,InClockSource: EUpdateClockSource): void;
	static ResolveBindingID(MasterSequence: MovieSceneSequence,InObjectBindingID: MovieSceneObjectBindingID): SequencerBindingProxy;
	static RemoveMasterTrack(Sequence: MovieSceneSequence,MasterTrack: MovieSceneTrack): boolean;
	static MakeRangeSeconds(Sequence: MovieSceneSequence,StartTime: number,Duration: number): SequencerScriptingRange;
	static MakeRange(Sequence: MovieSceneSequence,StartFrame: number,Duration: number): SequencerScriptingRange;
	static MakeBindingID(MasterSequence: MovieSceneSequence,InBinding: SequencerBindingProxy,Space: EMovieSceneObjectBindingSpace): MovieSceneObjectBindingID;
	static LocateBoundObjects(Sequence: MovieSceneSequence,InBinding: SequencerBindingProxy,Context: UObject): UObject[];
	static IsReadOnly(Sequence: MovieSceneSequence): boolean;
	static GetWorkRangeStart(InSequence: MovieSceneSequence): number;
	static GetWorkRangeEnd(InSequence: MovieSceneSequence): number;
	static GetViewRangeStart(InSequence: MovieSceneSequence): number;
	static GetViewRangeEnd(InSequence: MovieSceneSequence): number;
	static GetTimecodeSource(Sequence: MovieSceneSequence): Timecode;
	static GetTickResolution(Sequence: MovieSceneSequence): FrameRate;
	static GetSpawnables(Sequence: MovieSceneSequence): SequencerBindingProxy[];
	static GetRootFoldersInSequence(Sequence: MovieSceneSequence): MovieSceneFolder[];
	static GetPossessables(Sequence: MovieSceneSequence): SequencerBindingProxy[];
	static GetPortableBindingID(MasterSequence: MovieSceneSequence,DestinationSequence: MovieSceneSequence,InBinding: SequencerBindingProxy): MovieSceneObjectBindingID;
	static GetPlaybackStartSeconds(Sequence: MovieSceneSequence): number;
	static GetPlaybackStart(Sequence: MovieSceneSequence): number;
	static GetPlaybackRange(Sequence: MovieSceneSequence): SequencerScriptingRange;
	static GetPlaybackEndSeconds(Sequence: MovieSceneSequence): number;
	static GetPlaybackEnd(Sequence: MovieSceneSequence): number;
	static GetMovieScene(Sequence: MovieSceneSequence): MovieScene;
	static GetMasterTracks(Sequence: MovieSceneSequence): MovieSceneTrack[];
	static GetMarkedFrames(Sequence: MovieSceneSequence): MovieSceneMarkedFrame[];
	static GetEvaluationType(InSequence: MovieSceneSequence): EMovieSceneEvaluationType;
	static GetDisplayRate(Sequence: MovieSceneSequence): FrameRate;
	static GetClockSource(InSequence: MovieSceneSequence): EUpdateClockSource;
	static GetBindings(Sequence: MovieSceneSequence): SequencerBindingProxy[];
	static GetBindingID(InBinding: SequencerBindingProxy): MovieSceneObjectBindingID;
	static FindNextMarkedFrame(Sequence: MovieSceneSequence,InFrameNumber: FrameNumber,bForward: boolean): number;
	static FindMasterTracksByType(Sequence: MovieSceneSequence,TrackType: UnrealEngineClass): MovieSceneTrack[];
	static FindMasterTracksByExactType(Sequence: MovieSceneSequence,TrackType: UnrealEngineClass): MovieSceneTrack[];
	static FindMarkedFrameByLabel(Sequence: MovieSceneSequence,InLabel: string): number;
	static FindMarkedFrameByFrameNumber(Sequence: MovieSceneSequence,InFrameNumber: FrameNumber): number;
	static FindBindingByName(Sequence: MovieSceneSequence,Name: string): SequencerBindingProxy;
	static FindBindingById(Sequence: MovieSceneSequence,BindingID: Guid): SequencerBindingProxy;
	static DeleteMarkedFrames(Sequence: MovieSceneSequence): void;
	static DeleteMarkedFrame(Sequence: MovieSceneSequence,DeleteIndex: number): void;
	static AddSpawnableFromInstance(Sequence: MovieSceneSequence,ObjectToSpawn: UObject): SequencerBindingProxy;
	static AddSpawnableFromClass(Sequence: MovieSceneSequence,ClassToSpawn: UnrealEngineClass): SequencerBindingProxy;
	static AddRootFolderToSequence(Sequence: MovieSceneSequence,NewFolderName: string): MovieSceneFolder;
	static AddPossessable(Sequence: MovieSceneSequence,ObjectToPossess: UObject): SequencerBindingProxy;
	static AddMasterTrack(Sequence: MovieSceneSequence,TrackType: UnrealEngineClass): MovieSceneTrack;
	static AddMarkedFrame(Sequence: MovieSceneSequence,InMarkedFrame: MovieSceneMarkedFrame): number;
	static C(Other: UObject | any): MovieSceneSequenceExtensions;
}

declare class MovieSceneTrackExtensions extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): MovieSceneTrackExtensions;
	static Find(Outer: UObject, ResourceName: string): MovieSceneTrackExtensions;
	static GetDefaultObject(): MovieSceneTrackExtensions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneTrackExtensions;
	static SetTrackRowDisplayName(Track: MovieSceneTrack,InName: string,RowIndex: number): void;
	static SetSortingOrder(Track: MovieSceneTrack,SortingOrder: number): void;
	static SetSectionToKey(Track: MovieSceneTrack,Section: MovieSceneSection): void;
	static SetDisplayName(Track: MovieSceneTrack,InName: string): void;
	static SetColorTint(Track: MovieSceneTrack,ColorTint: Color): void;
	static RemoveSection(Track: MovieSceneTrack,Section: MovieSceneSection): void;
	static GetTrackRowDisplayName(Track: MovieSceneTrack,RowIndex: number): string;
	static GetSortingOrder(Track: MovieSceneTrack): number;
	static GetSectionToKey(Track: MovieSceneTrack): MovieSceneSection;
	static GetSections(Track: MovieSceneTrack): MovieSceneSection[];
	static GetDisplayName(Track: MovieSceneTrack): string;
	static GetColorTint(Track: MovieSceneTrack): Color;
	static AddSection(Track: MovieSceneTrack): MovieSceneSection;
	static C(Other: UObject | any): MovieSceneTrackExtensions;
}

declare class MovieSceneFloatVectorTrackExtensions extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): MovieSceneFloatVectorTrackExtensions;
	static Find(Outer: UObject, ResourceName: string): MovieSceneFloatVectorTrackExtensions;
	static GetDefaultObject(): MovieSceneFloatVectorTrackExtensions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneFloatVectorTrackExtensions;
	static SetNumChannelsUsed(Track: MovieSceneFloatVectorTrack,InNumChannelsUsed: number): void;
	static GetNumChannelsUsed(Track: MovieSceneFloatVectorTrack): number;
	static C(Other: UObject | any): MovieSceneFloatVectorTrackExtensions;
}

declare class MovieSceneDoubleVectorTrackExtensions extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): MovieSceneDoubleVectorTrackExtensions;
	static Find(Outer: UObject, ResourceName: string): MovieSceneDoubleVectorTrackExtensions;
	static GetDefaultObject(): MovieSceneDoubleVectorTrackExtensions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneDoubleVectorTrackExtensions;
	static SetNumChannelsUsed(Track: MovieSceneDoubleVectorTrack,InNumChannelsUsed: number): void;
	static GetNumChannelsUsed(Track: MovieSceneDoubleVectorTrack): number;
	static C(Other: UObject | any): MovieSceneDoubleVectorTrackExtensions;
}

declare class SequencerScriptingRangeExtensions extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): SequencerScriptingRangeExtensions;
	static Find(Outer: UObject, ResourceName: string): SequencerScriptingRangeExtensions;
	static GetDefaultObject(): SequencerScriptingRangeExtensions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SequencerScriptingRangeExtensions;
	static SetStartSeconds(Range?: SequencerScriptingRange,Start?: number): {Range: SequencerScriptingRange};
	static SetStartFrame(Range?: SequencerScriptingRange,Start?: number): {Range: SequencerScriptingRange};
	static SetEndSeconds(Range?: SequencerScriptingRange,End?: number): {Range: SequencerScriptingRange};
	static SetEndFrame(Range?: SequencerScriptingRange,End?: number): {Range: SequencerScriptingRange};
	static RemoveStart(Range?: SequencerScriptingRange): {Range: SequencerScriptingRange};
	static RemoveEnd(Range?: SequencerScriptingRange): {Range: SequencerScriptingRange};
	static HasStart(Range: SequencerScriptingRange): boolean;
	static HasEnd(Range: SequencerScriptingRange): boolean;
	static GetStartSeconds(Range: SequencerScriptingRange): number;
	static GetStartFrame(Range: SequencerScriptingRange): number;
	static GetEndSeconds(Range: SequencerScriptingRange): number;
	static GetEndFrame(Range: SequencerScriptingRange): number;
	static C(Other: UObject | any): SequencerScriptingRangeExtensions;
}

declare class SequencerChannelProxy { 
	ChannelName: string;
	Section: MovieSceneSection;
	clone() : SequencerChannelProxy;
	static C(Other: UObject | any): SequencerChannelProxy;
}

declare class LevelSequenceEditorBlueprintLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): LevelSequenceEditorBlueprintLibrary;
	static Find(Outer: UObject, ResourceName: string): LevelSequenceEditorBlueprintLibrary;
	static GetDefaultObject(): LevelSequenceEditorBlueprintLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LevelSequenceEditorBlueprintLibrary;
	static SetTrackFilterEnabled(TrackFilterName: string,bEnabled: boolean): void;
	static SetSelectionRangeStart(NewFrame: number): void;
	static SetSelectionRangeEnd(NewFrame: number): void;
	static SetRandomColorForChannels(Class: UnrealEngineClass,Identifiers: string[]): void;
	static SetLockLevelSequence(bLock: boolean): void;
	static SetLockCameraCutToViewport(bLock: boolean): void;
	static SetCustomColorForChannels(Class: UnrealEngineClass,Identifiers: string[],NewColors: LinearColor[]): void;
	static SetCustomColorForChannel(Class: UnrealEngineClass,Identifier: string,NewColor: LinearColor): void;
	static SetCurrentTime(NewFrame: number): void;
	static SetCurrentLocalTime(NewFrame: number): void;
	static SelectTracks(Tracks: MovieSceneTrack[]): void;
	static SelectSections(Sections: MovieSceneSection[]): void;
	static SelectObjects(ObjectBinding: Guid[]): void;
	static SelectFolders(Folders: MovieSceneFolder[]): void;
	static SelectChannels(Channels: SequencerChannelProxy[]): void;
	static RefreshCurrentLevelSequence(): void;
	static PlayTo(PlaybackParams: MovieSceneSequencePlaybackParams): void;
	static Play(): void;
	static Pause(): void;
	static OpenLevelSequence(LevelSequence: LevelSequence): boolean;
	static IsTrackFilterEnabled(TrackFilterName: string): boolean;
	static IsPlaying(): boolean;
	static IsLevelSequenceLocked(): boolean;
	static IsCameraCutLockedToViewport(): boolean;
	static HasCustomColorForChannel(Class: UnrealEngineClass,Identifier: string): boolean;
	static GetTrackFilterNames(): string[];
	static GetSelectionRangeStart(): number;
	static GetSelectionRangeEnd(): number;
	static GetSelectedTracks(): MovieSceneTrack[];
	static GetSelectedSections(): MovieSceneSection[];
	static GetSelectedObjects(): Guid[];
	static GetSelectedFolders(): MovieSceneFolder[];
	static GetSelectedChannels(): SequencerChannelProxy[];
	static GetFocusedLevelSequence(): LevelSequence;
	static GetCustomColorForChannel(Class: UnrealEngineClass,Identifier: string): LinearColor;
	static GetCurrentTime(): number;
	static GetCurrentLocalTime(): number;
	static GetCurrentLevelSequence(): LevelSequence;
	static GetBoundObjects(ObjectBinding: MovieSceneObjectBindingID): UObject[];
	static EmptySelection(): void;
	static DeleteColorForChannels(Class: UnrealEngineClass,Identifier?: string): {Identifier: string};
	static CloseLevelSequence(): void;
	static C(Other: UObject | any): LevelSequenceEditorBlueprintLibrary;
}

declare class LevelSequencePropertyTrackSettings { 
	ComponentPath: string;
	PropertyPath: string;
	clone() : LevelSequencePropertyTrackSettings;
	static C(Other: UObject | any): LevelSequencePropertyTrackSettings;
}

declare class LevelSequenceTrackSettings { 
	MatchingActorClass: SoftClassPath;
	DefaultTracks: SoftClassPath[];
	ExcludeDefaultTracks: SoftClassPath[];
	DefaultPropertyTracks: LevelSequencePropertyTrackSettings[];
	ExcludeDefaultPropertyTracks: LevelSequencePropertyTrackSettings[];
	clone() : LevelSequenceTrackSettings;
	static C(Other: UObject | any): LevelSequenceTrackSettings;
}

declare class LevelSequenceEditorSettings extends UObject { 
	TrackSettings: LevelSequenceTrackSettings[];
	bAutoBindToPIE: boolean;
	bAutoBindToSimulate: boolean;
	static Load(ResourceName: string): LevelSequenceEditorSettings;
	static Find(Outer: UObject, ResourceName: string): LevelSequenceEditorSettings;
	static GetDefaultObject(): LevelSequenceEditorSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LevelSequenceEditorSettings;
	static C(Other: UObject | any): LevelSequenceEditorSettings;
}

declare class LevelSequenceMasterSequenceSettings extends UObject { 
	MasterSequenceName: string;
	MasterSequenceSuffix: string;
	MasterSequenceBasePath: DirectoryPath;
	MasterSequenceNumShots: any;
	MasterSequenceLevelSequenceToDuplicate: any;
	SubSequenceNames: string[];
	bInstanceSubSequences: boolean;
	static Load(ResourceName: string): LevelSequenceMasterSequenceSettings;
	static Find(Outer: UObject, ResourceName: string): LevelSequenceMasterSequenceSettings;
	static GetDefaultObject(): LevelSequenceMasterSequenceSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LevelSequenceMasterSequenceSettings;
	static C(Other: UObject | any): LevelSequenceMasterSequenceSettings;
}

declare class MovieSceneScriptingParams { 
	clone() : MovieSceneScriptingParams;
	static C(Other: UObject | any): MovieSceneScriptingParams;
}

declare class LevelSequenceEditorSubsystem extends EditorSubsystem { 
	static Load(ResourceName: string): LevelSequenceEditorSubsystem;
	static Find(Outer: UObject, ResourceName: string): LevelSequenceEditorSubsystem;
	static GetDefaultObject(): LevelSequenceEditorSubsystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LevelSequenceEditorSubsystem;
	SyncSectionsUsingSourceTimecode(Sections: MovieSceneSection[]): void;
	SnapSectionsToTimelineUsingSourceTimecode(Sections: MovieSceneSection[]): void;
	ReplaceBindingWithActors(Actors: Actor[],ObjectBinding: SequencerBindingProxy): void;
	RemoveInvalidBindings(ObjectBinding: SequencerBindingProxy): void;
	RemoveAllBindings(ObjectBinding: SequencerBindingProxy): void;
	RemoveActorsFromBinding(Actors: Actor[],ObjectBinding: SequencerBindingProxy): void;
	RebindComponent(ComponentBindings: SequencerBindingProxy[],ComponentName: string): void;
	FixActorReferences(): void;
	BakeTransform(ObjectBindings: SequencerBindingProxy[],BakeInTime: FrameTime,BakeOutTime: FrameTime,BakeInterval: FrameTime,Params: MovieSceneScriptingParams): void;
	AddActorsToBinding(Actors: Actor[],ObjectBinding: SequencerBindingProxy): void;
	static C(Other: UObject | any): LevelSequenceEditorSubsystem;
}

declare class LevelSequenceFactoryNew extends Factory { 
	static Load(ResourceName: string): LevelSequenceFactoryNew;
	static Find(Outer: UObject, ResourceName: string): LevelSequenceFactoryNew;
	static GetDefaultObject(): LevelSequenceFactoryNew;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LevelSequenceFactoryNew;
	static C(Other: UObject | any): LevelSequenceFactoryNew;
}

declare class AnimSequenceConverterFactory extends AnimSequenceFactory { 
	static Load(ResourceName: string): AnimSequenceConverterFactory;
	static Find(Outer: UObject, ResourceName: string): AnimSequenceConverterFactory;
	static GetDefaultObject(): AnimSequenceConverterFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AnimSequenceConverterFactory;
	static C(Other: UObject | any): AnimSequenceConverterFactory;
}

declare class BakeToControlRigSettings extends UObject { 
	bReduceKeys: boolean;
	Tolerance: number;
	static Load(ResourceName: string): BakeToControlRigSettings;
	static Find(Outer: UObject, ResourceName: string): BakeToControlRigSettings;
	static GetDefaultObject(): BakeToControlRigSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BakeToControlRigSettings;
	static C(Other: UObject | any): BakeToControlRigSettings;
}

declare class ControlRigArrayNodeSpawner extends BlueprintNodeSpawner { 
	static Load(ResourceName: string): ControlRigArrayNodeSpawner;
	static Find(Outer: UObject, ResourceName: string): ControlRigArrayNodeSpawner;
	static GetDefaultObject(): ControlRigArrayNodeSpawner;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ControlRigArrayNodeSpawner;
	static C(Other: UObject | any): ControlRigArrayNodeSpawner;
}

declare class ControlRigBlueprintEditorLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): ControlRigBlueprintEditorLibrary;
	static Find(Outer: UObject, ResourceName: string): ControlRigBlueprintEditorLibrary;
	static GetDefaultObject(): ControlRigBlueprintEditorLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ControlRigBlueprintEditorLibrary;
	static SetPreviewMesh(InRigBlueprint: ControlRigBlueprint,PreviewMesh: SkeletalMesh,bMarkAsDirty: boolean): void;
	static RequestControlRigInit(InRigBlueprint: ControlRigBlueprint): void;
	static RequestAutoVMRecompilation(InRigBlueprint: ControlRigBlueprint): void;
	static RecompileVMIfRequired(InRigBlueprint: ControlRigBlueprint): void;
	static RecompileVM(InRigBlueprint: ControlRigBlueprint): void;
	static GetPreviewMesh(InRigBlueprint: ControlRigBlueprint): SkeletalMesh;
	static GetModel(InRigBlueprint: ControlRigBlueprint): RigVMGraph;
	static GetHierarchyController(InRigBlueprint: ControlRigBlueprint): RigHierarchyController;
	static GetHierarchy(InRigBlueprint: ControlRigBlueprint): RigHierarchy;
	static GetCurrentlyOpenRigBlueprints(): ControlRigBlueprint[];
	static GetController(InRigBlueprint: ControlRigBlueprint): RigVMController;
	static GetAvailableRigUnits(): Struct[];
	static CastToControlRigBlueprint(UObject: UObject,Branches?: ECastToControlRigBlueprintCases,AsControlRigBlueprint?: ControlRigBlueprint): {Branches: ECastToControlRigBlueprintCases, AsControlRigBlueprint: ControlRigBlueprint};
	static C(Other: UObject | any): ControlRigBlueprintEditorLibrary;
}

declare class ControlRigBlueprintFactory extends Factory { 
	ParentClass: UnrealEngineClass;
	static Load(ResourceName: string): ControlRigBlueprintFactory;
	static Find(Outer: UObject, ResourceName: string): ControlRigBlueprintFactory;
	static GetDefaultObject(): ControlRigBlueprintFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ControlRigBlueprintFactory;
	static CreateNewControlRigAsset(InDesiredPackagePath: string): ControlRigBlueprint;
	static CreateControlRigFromSkeletalMeshOrSkeleton(InSelectedObject: UObject): ControlRigBlueprint;
	static C(Other: UObject | any): ControlRigBlueprintFactory;
}

declare class ControlRigBranchNodeSpawner extends BlueprintNodeSpawner { 
	static Load(ResourceName: string): ControlRigBranchNodeSpawner;
	static Find(Outer: UObject, ResourceName: string): ControlRigBranchNodeSpawner;
	static GetDefaultObject(): ControlRigBranchNodeSpawner;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ControlRigBranchNodeSpawner;
	static C(Other: UObject | any): ControlRigBranchNodeSpawner;
}

declare class ControlRigRigHierarchyToGraphDragAndDropContext { 
	DraggedElementKeys: RigElementKey[];
	clone() : ControlRigRigHierarchyToGraphDragAndDropContext;
	static C(Other: UObject | any): ControlRigRigHierarchyToGraphDragAndDropContext;
}

declare class ControlRigRigHierarchyDragAndDropContext { 
	DraggedElementKeys: RigElementKey[];
	TargetElementKey: RigElementKey;
	clone() : ControlRigRigHierarchyDragAndDropContext;
	static C(Other: UObject | any): ControlRigRigHierarchyDragAndDropContext;
}

declare class ControlRigGraphNodeContextMenuContext { 
	Graph: RigVMGraph;
	UNode: RigVMNode;
	Pin: RigVMPin;
	clone() : ControlRigGraphNodeContextMenuContext;
	static C(Other: UObject | any): ControlRigGraphNodeContextMenuContext;
}

declare class ControlRigContextMenuContext extends UObject { 
	static Load(ResourceName: string): ControlRigContextMenuContext;
	static Find(Outer: UObject, ResourceName: string): ControlRigContextMenuContext;
	static GetDefaultObject(): ControlRigContextMenuContext;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ControlRigContextMenuContext;
	IsAltDown(): boolean;
	GetRigHierarchyToGraphDragAndDropContext(): ControlRigRigHierarchyToGraphDragAndDropContext;
	GetRigHierarchyDragAndDropContext(): ControlRigRigHierarchyDragAndDropContext;
	GetGraphNodeContextMenuContext(): ControlRigGraphNodeContextMenuContext;
	GetControlRigBlueprint(): ControlRigBlueprint;
	GetControlRig(): ControlRig;
	static C(Other: UObject | any): ControlRigContextMenuContext;
}

declare class ControlRigControlsProxy extends UObject { 
	bSelected: boolean;
	ControlName: string;
	static Load(ResourceName: string): ControlRigControlsProxy;
	static Find(Outer: UObject, ResourceName: string): ControlRigControlsProxy;
	static GetDefaultObject(): ControlRigControlsProxy;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ControlRigControlsProxy;
	static C(Other: UObject | any): ControlRigControlsProxy;
}

declare class ControlRigTransformControlProxy extends ControlRigControlsProxy { 
	Transform: EulerTransform;
	static Load(ResourceName: string): ControlRigTransformControlProxy;
	static Find(Outer: UObject, ResourceName: string): ControlRigTransformControlProxy;
	static GetDefaultObject(): ControlRigTransformControlProxy;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ControlRigTransformControlProxy;
	static C(Other: UObject | any): ControlRigTransformControlProxy;
}

declare class ControlRigEulerTransformControlProxy extends ControlRigControlsProxy { 
	Transform: EulerTransform;
	static Load(ResourceName: string): ControlRigEulerTransformControlProxy;
	static Find(Outer: UObject, ResourceName: string): ControlRigEulerTransformControlProxy;
	static GetDefaultObject(): ControlRigEulerTransformControlProxy;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ControlRigEulerTransformControlProxy;
	static C(Other: UObject | any): ControlRigEulerTransformControlProxy;
}

declare class ControlRigTransformNoScaleControlProxy extends ControlRigControlsProxy { 
	Transform: TransformNoScale;
	static Load(ResourceName: string): ControlRigTransformNoScaleControlProxy;
	static Find(Outer: UObject, ResourceName: string): ControlRigTransformNoScaleControlProxy;
	static GetDefaultObject(): ControlRigTransformNoScaleControlProxy;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ControlRigTransformNoScaleControlProxy;
	static C(Other: UObject | any): ControlRigTransformNoScaleControlProxy;
}

declare class ControlRigFloatControlProxy extends ControlRigControlsProxy { 
	float: number;
	static Load(ResourceName: string): ControlRigFloatControlProxy;
	static Find(Outer: UObject, ResourceName: string): ControlRigFloatControlProxy;
	static GetDefaultObject(): ControlRigFloatControlProxy;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ControlRigFloatControlProxy;
	static C(Other: UObject | any): ControlRigFloatControlProxy;
}

declare class ControlRigIntegerControlProxy extends ControlRigControlsProxy { 
	Integer: number;
	static Load(ResourceName: string): ControlRigIntegerControlProxy;
	static Find(Outer: UObject, ResourceName: string): ControlRigIntegerControlProxy;
	static GetDefaultObject(): ControlRigIntegerControlProxy;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ControlRigIntegerControlProxy;
	static C(Other: UObject | any): ControlRigIntegerControlProxy;
}

declare class ControlRigEnumControlProxyValue { 
	EnumType: Enum;
	EnumIndex: number;
	clone() : ControlRigEnumControlProxyValue;
	static C(Other: UObject | any): ControlRigEnumControlProxyValue;
}

declare class ControlRigEnumControlProxy extends ControlRigControlsProxy { 
	Enum: ControlRigEnumControlProxyValue;
	static Load(ResourceName: string): ControlRigEnumControlProxy;
	static Find(Outer: UObject, ResourceName: string): ControlRigEnumControlProxy;
	static GetDefaultObject(): ControlRigEnumControlProxy;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ControlRigEnumControlProxy;
	static C(Other: UObject | any): ControlRigEnumControlProxy;
}

declare class ControlRigVectorControlProxy extends ControlRigControlsProxy { 
	Vector: Vector;
	static Load(ResourceName: string): ControlRigVectorControlProxy;
	static Find(Outer: UObject, ResourceName: string): ControlRigVectorControlProxy;
	static GetDefaultObject(): ControlRigVectorControlProxy;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ControlRigVectorControlProxy;
	static C(Other: UObject | any): ControlRigVectorControlProxy;
}

declare class ControlRigVector2DControlProxy extends ControlRigControlsProxy { 
	Vector2D: Vector2D;
	static Load(ResourceName: string): ControlRigVector2DControlProxy;
	static Find(Outer: UObject, ResourceName: string): ControlRigVector2DControlProxy;
	static GetDefaultObject(): ControlRigVector2DControlProxy;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ControlRigVector2DControlProxy;
	static C(Other: UObject | any): ControlRigVector2DControlProxy;
}

declare class ControlRigBoolControlProxy extends ControlRigControlsProxy { 
	bool: boolean;
	static Load(ResourceName: string): ControlRigBoolControlProxy;
	static Find(Outer: UObject, ResourceName: string): ControlRigBoolControlProxy;
	static GetDefaultObject(): ControlRigBoolControlProxy;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ControlRigBoolControlProxy;
	static C(Other: UObject | any): ControlRigBoolControlProxy;
}

declare class ControlRigDetailPanelControlProxies extends UObject { 
	AllProxies: any;
	SelectedProxies: ControlRigControlsProxy[];
	static Load(ResourceName: string): ControlRigDetailPanelControlProxies;
	static Find(Outer: UObject, ResourceName: string): ControlRigDetailPanelControlProxies;
	static GetDefaultObject(): ControlRigDetailPanelControlProxies;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ControlRigDetailPanelControlProxies;
	static C(Other: UObject | any): ControlRigDetailPanelControlProxies;
}

declare class ControlRigEditModeDelegateHelper extends UObject { 
	static Load(ResourceName: string): ControlRigEditModeDelegateHelper;
	static Find(Outer: UObject, ResourceName: string): ControlRigEditModeDelegateHelper;
	static GetDefaultObject(): ControlRigEditModeDelegateHelper;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ControlRigEditModeDelegateHelper;
	PostPoseUpdate(): void;
	OnPoseInitialized(): void;
	static C(Other: UObject | any): ControlRigEditModeDelegateHelper;
}

declare class ControlRigEditModeSettings extends UObject { 
	bDisplayHierarchy: boolean;
	bDisplayNulls: boolean;
	bHideControlShapes: boolean;
	bDisplayAxesOnSelection: boolean;
	AxisScale: number;
	bCoordSystemPerWidgetMode: boolean;
	bOnlySelectRigControls: boolean;
	bLocalTransformsInEachLocalSpace: boolean;
	GizmoScale: number;
	LastInViewportTweenWidgetLocation: Vector2D;
	static Load(ResourceName: string): ControlRigEditModeSettings;
	static Find(Outer: UObject, ResourceName: string): ControlRigEditModeSettings;
	static GetDefaultObject(): ControlRigEditModeSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ControlRigEditModeSettings;
	static C(Other: UObject | any): ControlRigEditModeSettings;
}

declare class ControlRigEnumNodeSpawner extends BlueprintNodeSpawner { 
	static Load(ResourceName: string): ControlRigEnumNodeSpawner;
	static Find(Outer: UObject, ResourceName: string): ControlRigEnumNodeSpawner;
	static GetDefaultObject(): ControlRigEnumNodeSpawner;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ControlRigEnumNodeSpawner;
	static C(Other: UObject | any): ControlRigEnumNodeSpawner;
}

declare class ControlRigFunctionRefNodeSpawner extends BlueprintNodeSpawner { 
	ReferencedFunctionPtr: any;
	ReferencedAssetObjectPath: string;
	ReferencedPublicFunctionData: ControlRigPublicFunctionData;
	bIsLocalFunction: boolean;
	static Load(ResourceName: string): ControlRigFunctionRefNodeSpawner;
	static Find(Outer: UObject, ResourceName: string): ControlRigFunctionRefNodeSpawner;
	static GetDefaultObject(): ControlRigFunctionRefNodeSpawner;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ControlRigFunctionRefNodeSpawner;
	static C(Other: UObject | any): ControlRigFunctionRefNodeSpawner;
}

declare class ControlRigShapeLibraryFactory extends Factory { 
	static Load(ResourceName: string): ControlRigShapeLibraryFactory;
	static Find(Outer: UObject, ResourceName: string): ControlRigShapeLibraryFactory;
	static GetDefaultObject(): ControlRigShapeLibraryFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ControlRigShapeLibraryFactory;
	static C(Other: UObject | any): ControlRigShapeLibraryFactory;
}

declare class ControlRigIfNodeSpawner extends BlueprintNodeSpawner { 
	static Load(ResourceName: string): ControlRigIfNodeSpawner;
	static Find(Outer: UObject, ResourceName: string): ControlRigIfNodeSpawner;
	static GetDefaultObject(): ControlRigIfNodeSpawner;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ControlRigIfNodeSpawner;
	static C(Other: UObject | any): ControlRigIfNodeSpawner;
}

declare class ControlRigPoseThumbnailRenderer extends DefaultSizedThumbnailRenderer { 
	static Load(ResourceName: string): ControlRigPoseThumbnailRenderer;
	static Find(Outer: UObject, ResourceName: string): ControlRigPoseThumbnailRenderer;
	static GetDefaultObject(): ControlRigPoseThumbnailRenderer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ControlRigPoseThumbnailRenderer;
	static C(Other: UObject | any): ControlRigPoseThumbnailRenderer;
}

declare class ControlRigPrototypeNodeSpawner extends BlueprintNodeSpawner { 
	PrototypeNotation: string;
	static Load(ResourceName: string): ControlRigPrototypeNodeSpawner;
	static Find(Outer: UObject, ResourceName: string): ControlRigPrototypeNodeSpawner;
	static GetDefaultObject(): ControlRigPrototypeNodeSpawner;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ControlRigPrototypeNodeSpawner;
	static C(Other: UObject | any): ControlRigPrototypeNodeSpawner;
}

declare class ControlRigRerouteNodeSpawner extends BlueprintNodeSpawner { 
	static Load(ResourceName: string): ControlRigRerouteNodeSpawner;
	static Find(Outer: UObject, ResourceName: string): ControlRigRerouteNodeSpawner;
	static GetDefaultObject(): ControlRigRerouteNodeSpawner;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ControlRigRerouteNodeSpawner;
	static C(Other: UObject | any): ControlRigRerouteNodeSpawner;
}

declare class ControlRigSelectNodeSpawner extends BlueprintNodeSpawner { 
	static Load(ResourceName: string): ControlRigSelectNodeSpawner;
	static Find(Outer: UObject, ResourceName: string): ControlRigSelectNodeSpawner;
	static GetDefaultObject(): ControlRigSelectNodeSpawner;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ControlRigSelectNodeSpawner;
	static C(Other: UObject | any): ControlRigSelectNodeSpawner;
}

declare class ControlRigSequenceFactory extends Factory { 
	static Load(ResourceName: string): ControlRigSequenceFactory;
	static Find(Outer: UObject, ResourceName: string): ControlRigSequenceFactory;
	static GetDefaultObject(): ControlRigSequenceFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ControlRigSequenceFactory;
	static C(Other: UObject | any): ControlRigSequenceFactory;
}

declare class ControlRigSequencerEditorLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): ControlRigSequencerEditorLibrary;
	static Find(Outer: UObject, ResourceName: string): ControlRigSequencerEditorLibrary;
	static GetDefaultObject(): ControlRigSequencerEditorLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ControlRigSequencerEditorLibrary;
	static TweenControlRig(LevelSequence: LevelSequence,ControlRig: ControlRig,TweenValue: number): boolean;
	static SnapControlRig(LevelSequence: LevelSequence,StartFrame: FrameNumber,EndFrame: FrameNumber,ChildrenToSnap: ControlRigSnapperSelection,ParentToSnap: ControlRigSnapperSelection,SnapSettings: ControlRigSnapSettings,TimeUnit: ESequenceTimeUnit): boolean;
	static SetLocalControlRigVector2Ds(LevelSequence: LevelSequence,ControlRig: ControlRig,ControlName: string,Frames: FrameNumber[],Values: Vector2D[],TimeUnit: ESequenceTimeUnit): void;
	static SetLocalControlRigVector2D(LevelSequence: LevelSequence,ControlRig: ControlRig,ControlName: string,Frame: FrameNumber,Value: Vector2D,TimeUnit: ESequenceTimeUnit,bSetKey: boolean): void;
	static SetLocalControlRigTransforms(LevelSequence: LevelSequence,ControlRig: ControlRig,ControlName: string,Frames: FrameNumber[],Values: Transform[],TimeUnit: ESequenceTimeUnit): void;
	static SetLocalControlRigTransformNoScales(LevelSequence: LevelSequence,ControlRig: ControlRig,ControlName: string,Frames: FrameNumber[],Values: TransformNoScale[],TimeUnit: ESequenceTimeUnit): void;
	static SetLocalControlRigTransformNoScale(LevelSequence: LevelSequence,ControlRig: ControlRig,ControlName: string,Frame: FrameNumber,Value: TransformNoScale,TimeUnit: ESequenceTimeUnit,bSetKey: boolean): void;
	static SetLocalControlRigTransform(LevelSequence: LevelSequence,ControlRig: ControlRig,ControlName: string,Frame: FrameNumber,Value: Transform,TimeUnit: ESequenceTimeUnit,bSetKey: boolean): void;
	static SetLocalControlRigScales(LevelSequence: LevelSequence,ControlRig: ControlRig,ControlName: string,Frames: FrameNumber[],Values: Vector[],TimeUnit: ESequenceTimeUnit): void;
	static SetLocalControlRigScale(LevelSequence: LevelSequence,ControlRig: ControlRig,ControlName: string,Frame: FrameNumber,Value: Vector,TimeUnit: ESequenceTimeUnit,bSetKey: boolean): void;
	static SetLocalControlRigRotators(LevelSequence: LevelSequence,ControlRig: ControlRig,ControlName: string,Frames: FrameNumber[],Values: Rotator[],TimeUnit: ESequenceTimeUnit): void;
	static SetLocalControlRigRotator(LevelSequence: LevelSequence,ControlRig: ControlRig,ControlName: string,Frame: FrameNumber,Value: Rotator,TimeUnit: ESequenceTimeUnit,bSetKey: boolean): void;
	static SetLocalControlRigPositions(LevelSequence: LevelSequence,ControlRig: ControlRig,ControlName: string,Frames: FrameNumber[],Values: Vector[],TimeUnit: ESequenceTimeUnit): void;
	static SetLocalControlRigPosition(LevelSequence: LevelSequence,ControlRig: ControlRig,ControlName: string,Frame: FrameNumber,Value: Vector,TimeUnit: ESequenceTimeUnit,bSetKey: boolean): void;
	static SetLocalControlRigInts(LevelSequence: LevelSequence,ControlRig: ControlRig,ControlName: string,Frames: FrameNumber[],Values: number[],TimeUnit: ESequenceTimeUnit): void;
	static SetLocalControlRigInt(LevelSequence: LevelSequence,ControlRig: ControlRig,ControlName: string,Frame: FrameNumber,Value: number,TimeUnit: ESequenceTimeUnit,bSetKey: boolean): void;
	static SetLocalControlRigFloats(LevelSequence: LevelSequence,ControlRig: ControlRig,ControlName: string,Frames: FrameNumber[],Values: number[],TimeUnit: ESequenceTimeUnit): void;
	static SetLocalControlRigFloat(LevelSequence: LevelSequence,ControlRig: ControlRig,ControlName: string,Frame: FrameNumber,Value: number,TimeUnit: ESequenceTimeUnit,bSetKey: boolean): void;
	static SetLocalControlRigEulerTransforms(LevelSequence: LevelSequence,ControlRig: ControlRig,ControlName: string,Frames: FrameNumber[],Values: EulerTransform[],TimeUnit: ESequenceTimeUnit): void;
	static SetLocalControlRigEulerTransform(LevelSequence: LevelSequence,ControlRig: ControlRig,ControlName: string,Frame: FrameNumber,Value: EulerTransform,TimeUnit: ESequenceTimeUnit,bSetKey: boolean): void;
	static SetLocalControlRigBools(LevelSequence: LevelSequence,ControlRig: ControlRig,ControlName: string,Frames: FrameNumber[],Values: boolean[],TimeUnit: ESequenceTimeUnit): void;
	static SetLocalControlRigBool(LevelSequence: LevelSequence,ControlRig: ControlRig,ControlName: string,Frame: FrameNumber,Value: boolean,TimeUnit: ESequenceTimeUnit,bSetKey: boolean): void;
	static SetControlRigWorldTransforms(LevelSequence: LevelSequence,ControlRig: ControlRig,ControlName: string,Frames: FrameNumber[],WorldTransforms: Transform[],TimeUnit: ESequenceTimeUnit): void;
	static SetControlRigWorldTransform(LevelSequence: LevelSequence,ControlRig: ControlRig,ControlName: string,Frame: FrameNumber,WorldTransform: Transform,TimeUnit: ESequenceTimeUnit,bSetKey: boolean): void;
	static SetControlRigSpace(InSequence: LevelSequence,InControlRig: ControlRig,InControlName: string,InSpaceKey: RigElementKey,InTime: FrameNumber,TimeUnit: ESequenceTimeUnit): boolean;
	RenameControlRigControlChannels(InSequence: LevelSequence,InControlRig: ControlRig,InOldControlNames: string[],InNewControlNames: string[]): boolean;
	static MoveControlRigSpace(InSequence: LevelSequence,InControlRig: ControlRig,InControlName: string,InTime: FrameNumber,InNewTime: FrameNumber,TimeUnit: ESequenceTimeUnit): boolean;
	static LoadAnimSequenceIntoControlRigSection(MovieSceneSection: MovieSceneSection,AnimSequence: AnimSequence,SkelMeshComp: SkeletalMeshComponent,InStartFrame: FrameNumber,TimeUnit: ESequenceTimeUnit,bKeyReduce: boolean,Tolerance: number): boolean;
	static ImportFBXToControlRigTrack(World: World,InSequence: LevelSequence,InTrack: MovieSceneControlRigParameterTrack,InSection: MovieSceneControlRigParameterSection,SelectedControlRigNames: string[],ImportFBXControlRigSettings: MovieSceneUserImportFBXControlRigSettings,ImportFilename: string): boolean;
	static GetWorldSpaceReferenceKey(): RigElementKey;
	static GetVisibleControlRigs(): ControlRig[];
	static GetSkeletalMeshComponentWorldTransforms(LevelSequence: LevelSequence,SkeletalMeshComponent: SkeletalMeshComponent,Frames: FrameNumber[],TimeUnit: ESequenceTimeUnit,ReferenceName: string): Transform[];
	static GetSkeletalMeshComponentWorldTransform(LevelSequence: LevelSequence,SkeletalMeshComponent: SkeletalMeshComponent,Frame: FrameNumber,TimeUnit: ESequenceTimeUnit,ReferenceName: string): Transform;
	static GetLocalControlRigVector2Ds(LevelSequence: LevelSequence,ControlRig: ControlRig,ControlName: string,Frames: FrameNumber[],TimeUnit: ESequenceTimeUnit): Vector2D[];
	static GetLocalControlRigVector2D(LevelSequence: LevelSequence,ControlRig: ControlRig,ControlName: string,Frame: FrameNumber,TimeUnit: ESequenceTimeUnit): Vector2D;
	static GetLocalControlRigTransforms(LevelSequence: LevelSequence,ControlRig: ControlRig,ControlName: string,Frames: FrameNumber[],TimeUnit: ESequenceTimeUnit): Transform[];
	static GetLocalControlRigTransformNoScales(LevelSequence: LevelSequence,ControlRig: ControlRig,ControlName: string,Frames: FrameNumber[],TimeUnit: ESequenceTimeUnit): TransformNoScale[];
	static GetLocalControlRigTransformNoScale(LevelSequence: LevelSequence,ControlRig: ControlRig,ControlName: string,Frame: FrameNumber,TimeUnit: ESequenceTimeUnit): TransformNoScale;
	static GetLocalControlRigTransform(LevelSequence: LevelSequence,ControlRig: ControlRig,ControlName: string,Frame: FrameNumber,TimeUnit: ESequenceTimeUnit): Transform;
	static GetLocalControlRigScales(LevelSequence: LevelSequence,ControlRig: ControlRig,ControlName: string,Frames: FrameNumber[],TimeUnit: ESequenceTimeUnit): Vector[];
	static GetLocalControlRigScale(LevelSequence: LevelSequence,ControlRig: ControlRig,ControlName: string,Frame: FrameNumber,TimeUnit: ESequenceTimeUnit): Vector;
	static GetLocalControlRigRotators(LevelSequence: LevelSequence,ControlRig: ControlRig,ControlName: string,Frames: FrameNumber[],TimeUnit: ESequenceTimeUnit): Rotator[];
	static GetLocalControlRigRotator(LevelSequence: LevelSequence,ControlRig: ControlRig,ControlName: string,Frame: FrameNumber,TimeUnit: ESequenceTimeUnit): Rotator;
	static GetLocalControlRigPositions(LevelSequence: LevelSequence,ControlRig: ControlRig,ControlName: string,Frames: FrameNumber[],TimeUnit: ESequenceTimeUnit): Vector[];
	static GetLocalControlRigPosition(LevelSequence: LevelSequence,ControlRig: ControlRig,ControlName: string,Frame: FrameNumber,TimeUnit: ESequenceTimeUnit): Vector;
	static GetLocalControlRigInts(LevelSequence: LevelSequence,ControlRig: ControlRig,ControlName: string,Frames: FrameNumber[],TimeUnit: ESequenceTimeUnit): number[];
	static GetLocalControlRigInt(LevelSequence: LevelSequence,ControlRig: ControlRig,ControlName: string,Frame: FrameNumber,TimeUnit: ESequenceTimeUnit): number;
	static GetLocalControlRigFloats(LevelSequence: LevelSequence,ControlRig: ControlRig,ControlName: string,Frames: FrameNumber[],TimeUnit: ESequenceTimeUnit): number[];
	static GetLocalControlRigFloat(LevelSequence: LevelSequence,ControlRig: ControlRig,ControlName: string,Frame: FrameNumber,TimeUnit: ESequenceTimeUnit): number;
	static GetLocalControlRigEulerTransforms(LevelSequence: LevelSequence,ControlRig: ControlRig,ControlName: string,Frames: FrameNumber[],TimeUnit: ESequenceTimeUnit): EulerTransform[];
	static GetLocalControlRigEulerTransform(LevelSequence: LevelSequence,ControlRig: ControlRig,ControlName: string,Frame: FrameNumber,TimeUnit: ESequenceTimeUnit): EulerTransform;
	static GetLocalControlRigBools(LevelSequence: LevelSequence,ControlRig: ControlRig,ControlName: string,Frames: FrameNumber[],TimeUnit: ESequenceTimeUnit): boolean[];
	static GetLocalControlRigBool(LevelSequence: LevelSequence,ControlRig: ControlRig,ControlName: string,Frame: FrameNumber,TimeUnit: ESequenceTimeUnit): boolean;
	static GetDefaultParentKey(): RigElementKey;
	static GetControlRigWorldTransforms(LevelSequence: LevelSequence,ControlRig: ControlRig,ControlName: string,Frames: FrameNumber[],TimeUnit: ESequenceTimeUnit): Transform[];
	static GetControlRigWorldTransform(LevelSequence: LevelSequence,ControlRig: ControlRig,ControlName: string,Frame: FrameNumber,TimeUnit: ESequenceTimeUnit): Transform;
	static GetControlRigs(LevelSequence: LevelSequence): ControlRigSequencerBindingProxy[];
	static GetActorWorldTransforms(LevelSequence: LevelSequence,Actor: Actor,Frames: FrameNumber[],TimeUnit: ESequenceTimeUnit): Transform[];
	static GetActorWorldTransform(LevelSequence: LevelSequence,Actor: Actor,Frame: FrameNumber,TimeUnit: ESequenceTimeUnit): Transform;
	static FindOrCreateControlRigTrack(World: World,LevelSequence: LevelSequence,ControlRigClass: UnrealEngineClass,InBinding: SequencerBindingProxy): MovieSceneTrack;
	static FindOrCreateControlRigComponentTrack(World: World,LevelSequence: LevelSequence,InBinding: SequencerBindingProxy): MovieSceneTrack[];
	static DeleteControlRigSpace(InSequence: LevelSequence,InControlRig: ControlRig,InControlName: string,InTime: FrameNumber,TimeUnit: ESequenceTimeUnit): boolean;
	static CollapseControlRigAnimLayers(InSequence: LevelSequence,InTrack: MovieSceneControlRigParameterTrack,bKeyReduce: boolean,Tolerance: number): boolean;
	static BakeToControlRig(World: World,LevelSequence: LevelSequence,ControlRigClass: UnrealEngineClass,ExportOptions: AnimSeqExportOption,bReduceKeys: boolean,Tolerance: number,Binding: SequencerBindingProxy): boolean;
	static BakeControlRigSpace(InSequence: LevelSequence,InControlRig: ControlRig,InControlNames: string[],InSettings: RigSpacePickerBakeSettings,TimeUnit: ESequenceTimeUnit): boolean;
	static C(Other: UObject | any): ControlRigSequencerEditorLibrary;
}

declare class ControlRigTrackFilter extends SequencerTrackFilterExtension { 
	static Load(ResourceName: string): ControlRigTrackFilter;
	static Find(Outer: UObject, ResourceName: string): ControlRigTrackFilter;
	static GetDefaultObject(): ControlRigTrackFilter;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ControlRigTrackFilter;
	static C(Other: UObject | any): ControlRigTrackFilter;
}

declare class ControlRigSkeletalMeshComponent extends DebugSkelMeshComponent { 
	static Load(ResourceName: string): ControlRigSkeletalMeshComponent;
	static Find(Outer: UObject, ResourceName: string): ControlRigSkeletalMeshComponent;
	static GetDefaultObject(): ControlRigSkeletalMeshComponent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ControlRigSkeletalMeshComponent;
	static C(Other: UObject | any): ControlRigSkeletalMeshComponent;
}

declare class ControlRigThumbnailRenderer extends SkeletalMeshThumbnailRenderer { 
	static Load(ResourceName: string): ControlRigThumbnailRenderer;
	static Find(Outer: UObject, ResourceName: string): ControlRigThumbnailRenderer;
	static GetDefaultObject(): ControlRigThumbnailRenderer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ControlRigThumbnailRenderer;
	static C(Other: UObject | any): ControlRigThumbnailRenderer;
}

declare class ControlRigUnitNodeSpawner extends BlueprintNodeSpawner { 
	StructTemplate: ScriptStruct;
	static Load(ResourceName: string): ControlRigUnitNodeSpawner;
	static Find(Outer: UObject, ResourceName: string): ControlRigUnitNodeSpawner;
	static GetDefaultObject(): ControlRigUnitNodeSpawner;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ControlRigUnitNodeSpawner;
	static C(Other: UObject | any): ControlRigUnitNodeSpawner;
}

declare class ControlRigVariableNodeSpawner extends BlueprintNodeSpawner { 
	static Load(ResourceName: string): ControlRigVariableNodeSpawner;
	static Find(Outer: UObject, ResourceName: string): ControlRigVariableNodeSpawner;
	static GetDefaultObject(): ControlRigVariableNodeSpawner;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ControlRigVariableNodeSpawner;
	static C(Other: UObject | any): ControlRigVariableNodeSpawner;
}

declare class CreateControlPoseAssetRigSettings extends UObject { 
	AssetName: string;
	static Load(ResourceName: string): CreateControlPoseAssetRigSettings;
	static Find(Outer: UObject, ResourceName: string): CreateControlPoseAssetRigSettings;
	static GetDefaultObject(): CreateControlPoseAssetRigSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CreateControlPoseAssetRigSettings;
	static C(Other: UObject | any): CreateControlPoseAssetRigSettings;
}

declare class DetailsViewWrapperObject extends UObject { 
	static Load(ResourceName: string): DetailsViewWrapperObject;
	static Find(Outer: UObject, ResourceName: string): DetailsViewWrapperObject;
	static GetDefaultObject(): DetailsViewWrapperObject;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): DetailsViewWrapperObject;
	static C(Other: UObject | any): DetailsViewWrapperObject;
}

declare class BaseSequencerAnimTool extends Interface { 
	static Load(ResourceName: string): BaseSequencerAnimTool;
	static Find(Outer: UObject, ResourceName: string): BaseSequencerAnimTool;
	static GetDefaultObject(): BaseSequencerAnimTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BaseSequencerAnimTool;
	static C(Other: UObject | any): BaseSequencerAnimTool;
}

declare class MotionTrailToolBuilder extends InteractiveToolBuilder { 
	static Load(ResourceName: string): MotionTrailToolBuilder;
	static Find(Outer: UObject, ResourceName: string): MotionTrailToolBuilder;
	static GetDefaultObject(): MotionTrailToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MotionTrailToolBuilder;
	static C(Other: UObject | any): MotionTrailToolBuilder;
}

declare class MotionTrailTool extends MultiSelectionTool { 
	TransformProxy: TransformProxy;
	TransformGizmo: CombinedTransformGizmo;
	LeftClickBehavior: SingleClickInputBehavior;
	RightClickBehavior: SingleClickInputBehavior;
	static Load(ResourceName: string): MotionTrailTool;
	static Find(Outer: UObject, ResourceName: string): MotionTrailTool;
	static GetDefaultObject(): MotionTrailTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MotionTrailTool;
	static C(Other: UObject | any): MotionTrailTool;
}

declare class SequencerPivotToolBuilder extends InteractiveToolBuilder { 
	static Load(ResourceName: string): SequencerPivotToolBuilder;
	static Find(Outer: UObject, ResourceName: string): SequencerPivotToolBuilder;
	static GetDefaultObject(): SequencerPivotToolBuilder;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SequencerPivotToolBuilder;
	static C(Other: UObject | any): SequencerPivotToolBuilder;
}

declare class SequencerPivotTool extends MultiSelectionTool { 
	ClickBehavior: SingleClickInputBehavior;
	TransformProxy: TransformProxy;
	TransformGizmo: CombinedTransformGizmo;
	static Load(ResourceName: string): SequencerPivotTool;
	static Find(Outer: UObject, ResourceName: string): SequencerPivotTool;
	static GetDefaultObject(): SequencerPivotTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SequencerPivotTool;
	static C(Other: UObject | any): SequencerPivotTool;
}

declare class SequencerToolsEditMode extends BaseLegacyWidgetEdMode { 
	static Load(ResourceName: string): SequencerToolsEditMode;
	static Find(Outer: UObject, ResourceName: string): SequencerToolsEditMode;
	static GetDefaultObject(): SequencerToolsEditMode;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SequencerToolsEditMode;
	static C(Other: UObject | any): SequencerToolsEditMode;
}

declare class SpeedTreeImportFactory extends Factory { 
	static Load(ResourceName: string): SpeedTreeImportFactory;
	static Find(Outer: UObject, ResourceName: string): SpeedTreeImportFactory;
	static GetDefaultObject(): SpeedTreeImportFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SpeedTreeImportFactory;
	static C(Other: UObject | any): SpeedTreeImportFactory;
}

declare class ReimportSpeedTreeFactory extends SpeedTreeImportFactory { 
	static Load(ResourceName: string): ReimportSpeedTreeFactory;
	static Find(Outer: UObject, ResourceName: string): ReimportSpeedTreeFactory;
	static GetDefaultObject(): ReimportSpeedTreeFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ReimportSpeedTreeFactory;
	static C(Other: UObject | any): ReimportSpeedTreeFactory;
}

declare type EImportGeometryType = 'IGT_3D' | 'IGT_Billboards' | 'IGT_Both' | 'IGT_MAX';
declare var EImportGeometryType : { IGT_3D:'IGT_3D',IGT_Billboards:'IGT_Billboards',IGT_Both:'IGT_Both',IGT_MAX:'IGT_MAX', };
declare type EImportLODType = 'ILT_PaintedFoliage' | 'ILT_IndividualActors' | 'ILT_MAX';
declare var EImportLODType : { ILT_PaintedFoliage:'ILT_PaintedFoliage',ILT_IndividualActors:'ILT_IndividualActors',ILT_MAX:'ILT_MAX', };
declare class SpeedTreeImportData extends AssetImportData { 
	TreeScale: number;
	ImportGeometryType: EImportGeometryType;
	LODType: EImportLODType;
	IncludeCollision: boolean;
	MakeMaterialsCheck: boolean;
	IncludeNormalMapCheck: boolean;
	IncludeDetailMapCheck: boolean;
	IncludeSpecularMapCheck: boolean;
	IncludeBranchSeamSmoothing: boolean;
	IncludeSpeedTreeAO: boolean;
	IncludeColorAdjustment: boolean;
	IncludeSubsurface: boolean;
	IncludeVertexProcessingCheck: boolean;
	IncludeWindCheck: boolean;
	IncludeSmoothLODCheck: boolean;
	static Load(ResourceName: string): SpeedTreeImportData;
	static Find(Outer: UObject, ResourceName: string): SpeedTreeImportData;
	static GetDefaultObject(): SpeedTreeImportData;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SpeedTreeImportData;
	static C(Other: UObject | any): SpeedTreeImportData;
}

declare class HLODBuilderInstancing extends HLODBuilder { 
	static Load(ResourceName: string): HLODBuilderInstancing;
	static Find(Outer: UObject, ResourceName: string): HLODBuilderInstancing;
	static GetDefaultObject(): HLODBuilderInstancing;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): HLODBuilderInstancing;
	static C(Other: UObject | any): HLODBuilderInstancing;
}

declare class HLODBuilderMeshApproximateSettings extends HLODBuilderSettings { 
	MeshApproximationSettings: MeshApproximationSettings;
	HLODMaterial: Material;
	static Load(ResourceName: string): HLODBuilderMeshApproximateSettings;
	static Find(Outer: UObject, ResourceName: string): HLODBuilderMeshApproximateSettings;
	static GetDefaultObject(): HLODBuilderMeshApproximateSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): HLODBuilderMeshApproximateSettings;
	static C(Other: UObject | any): HLODBuilderMeshApproximateSettings;
}

declare class HLODBuilderMeshApproximate extends HLODBuilder { 
	static Load(ResourceName: string): HLODBuilderMeshApproximate;
	static Find(Outer: UObject, ResourceName: string): HLODBuilderMeshApproximate;
	static GetDefaultObject(): HLODBuilderMeshApproximate;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): HLODBuilderMeshApproximate;
	static C(Other: UObject | any): HLODBuilderMeshApproximate;
}

declare class HLODBuilderMeshMergeSettings extends HLODBuilderSettings { 
	MeshMergeSettings: MeshMergingSettings;
	HLODMaterial: Material;
	static Load(ResourceName: string): HLODBuilderMeshMergeSettings;
	static Find(Outer: UObject, ResourceName: string): HLODBuilderMeshMergeSettings;
	static GetDefaultObject(): HLODBuilderMeshMergeSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): HLODBuilderMeshMergeSettings;
	static C(Other: UObject | any): HLODBuilderMeshMergeSettings;
}

declare class HLODBuilderMeshMerge extends HLODBuilder { 
	static Load(ResourceName: string): HLODBuilderMeshMerge;
	static Find(Outer: UObject, ResourceName: string): HLODBuilderMeshMerge;
	static GetDefaultObject(): HLODBuilderMeshMerge;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): HLODBuilderMeshMerge;
	static C(Other: UObject | any): HLODBuilderMeshMerge;
}

declare class HLODBuilderMeshSimplifySettings extends HLODBuilderSettings { 
	MeshSimplifySettings: MeshProxySettings;
	HLODMaterial: Material;
	static Load(ResourceName: string): HLODBuilderMeshSimplifySettings;
	static Find(Outer: UObject, ResourceName: string): HLODBuilderMeshSimplifySettings;
	static GetDefaultObject(): HLODBuilderMeshSimplifySettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): HLODBuilderMeshSimplifySettings;
	static C(Other: UObject | any): HLODBuilderMeshSimplifySettings;
}

declare class HLODBuilderMeshSimplify extends HLODBuilder { 
	static Load(ResourceName: string): HLODBuilderMeshSimplify;
	static Find(Outer: UObject, ResourceName: string): HLODBuilderMeshSimplify;
	static GetDefaultObject(): HLODBuilderMeshSimplify;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): HLODBuilderMeshSimplify;
	static C(Other: UObject | any): HLODBuilderMeshSimplify;
}

declare class AutomationUtilsBlueprintLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): AutomationUtilsBlueprintLibrary;
	static Find(Outer: UObject, ResourceName: string): AutomationUtilsBlueprintLibrary;
	static GetDefaultObject(): AutomationUtilsBlueprintLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AutomationUtilsBlueprintLibrary;
	static TakeGameplayAutomationScreenshot(ScreenShotName: string,MaxGlobalError: number,MaxLocalError: number,MapNameOverride: string): void;
	static C(Other: UObject | any): AutomationUtilsBlueprintLibrary;
}

declare class ScreenshotComparisonCommandlet extends Commandlet { 
	static Load(ResourceName: string): ScreenshotComparisonCommandlet;
	static Find(Outer: UObject, ResourceName: string): ScreenshotComparisonCommandlet;
	static GetDefaultObject(): ScreenshotComparisonCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ScreenshotComparisonCommandlet;
	static C(Other: UObject | any): ScreenshotComparisonCommandlet;
}

declare type EChaosCollisionSortMethod = 'SortNone' | 'SortByHighestMass' | 'SortByHighestSpeed' | 'SortByHighestImpulse' | 'SortByNearestFirst' | 'Count' | 'EChaosCollisionSortMethod_MAX';
declare var EChaosCollisionSortMethod : { SortNone:'SortNone',SortByHighestMass:'SortByHighestMass',SortByHighestSpeed:'SortByHighestSpeed',SortByHighestImpulse:'SortByHighestImpulse',SortByNearestFirst:'SortByNearestFirst',Count:'Count',EChaosCollisionSortMethod_MAX:'EChaosCollisionSortMethod_MAX', };
declare class ChaosCollisionEventRequestSettings { 
	MaxNumberResults: number;
	MinMass: number;
	MinSpeed: number;
	MinImpulse: number;
	MaxDistance: number;
	SortMethod: EChaosCollisionSortMethod;
	clone() : ChaosCollisionEventRequestSettings;
	static C(Other: UObject | any): ChaosCollisionEventRequestSettings;
}

declare type EChaosBreakingSortMethod = 'SortNone' | 'SortByHighestMass' | 'SortByHighestSpeed' | 'SortByNearestFirst' | 'Count' | 'EChaosBreakingSortMethod_MAX';
declare var EChaosBreakingSortMethod : { SortNone:'SortNone',SortByHighestMass:'SortByHighestMass',SortByHighestSpeed:'SortByHighestSpeed',SortByNearestFirst:'SortByNearestFirst',Count:'Count',EChaosBreakingSortMethod_MAX:'EChaosBreakingSortMethod_MAX', };
declare class ChaosBreakingEventRequestSettings { 
	MaxNumberOfResults: number;
	MinRadius: number;
	MinSpeed: number;
	MinMass: number;
	MaxDistance: number;
	SortMethod: EChaosBreakingSortMethod;
	clone() : ChaosBreakingEventRequestSettings;
	static C(Other: UObject | any): ChaosBreakingEventRequestSettings;
}

declare type EChaosTrailingSortMethod = 'SortNone' | 'SortByHighestMass' | 'SortByHighestSpeed' | 'SortByNearestFirst' | 'Count' | 'EChaosTrailingSortMethod_MAX';
declare var EChaosTrailingSortMethod : { SortNone:'SortNone',SortByHighestMass:'SortByHighestMass',SortByHighestSpeed:'SortByHighestSpeed',SortByNearestFirst:'SortByNearestFirst',Count:'Count',EChaosTrailingSortMethod_MAX:'EChaosTrailingSortMethod_MAX', };
declare class ChaosTrailingEventRequestSettings { 
	MaxNumberOfResults: number;
	MinMass: number;
	MinSpeed: number;
	MinAngularSpeed: number;
	MaxDistance: number;
	SortMethod: EChaosTrailingSortMethod;
	clone() : ChaosTrailingEventRequestSettings;
	static C(Other: UObject | any): ChaosTrailingEventRequestSettings;
}

declare type EChaosRemovalSortMethod = 'SortNone' | 'SortByHighestMass' | 'SortByNearestFirst' | 'Count' | 'EChaosRemovalSortMethod_MAX';
declare var EChaosRemovalSortMethod : { SortNone:'SortNone',SortByHighestMass:'SortByHighestMass',SortByNearestFirst:'SortByNearestFirst',Count:'Count',EChaosRemovalSortMethod_MAX:'EChaosRemovalSortMethod_MAX', };
declare class ChaosRemovalEventRequestSettings { 
	MaxNumberOfResults: number;
	MinMass: number;
	MaxDistance: number;
	SortMethod: EChaosRemovalSortMethod;
	clone() : ChaosRemovalEventRequestSettings;
	static C(Other: UObject | any): ChaosRemovalEventRequestSettings;
}

declare class ChaosCollisionEventData { 
	Location: Vector;
	Normal: Vector;
	Velocity1: Vector;
	Velocity2: Vector;
	Mass1: number;
	Mass2: number;
	Impulse: Vector;
	clone() : ChaosCollisionEventData;
	static C(Other: UObject | any): ChaosCollisionEventData;
}

declare class ChaosBreakingEventData { 
	Location: Vector;
	Velocity: Vector;
	Mass: number;
	clone() : ChaosBreakingEventData;
	static C(Other: UObject | any): ChaosBreakingEventData;
}

declare class ChaosTrailingEventData { 
	Location: Vector;
	Velocity: Vector;
	AngularVelocity: Vector;
	Mass: number;
	ParticleIndex: number;
	clone() : ChaosTrailingEventData;
	static C(Other: UObject | any): ChaosTrailingEventData;
}

declare class ChaosRemovalEventData { 
	Location: Vector;
	Mass: number;
	ParticleIndex: number;
	clone() : ChaosRemovalEventData;
	static C(Other: UObject | any): ChaosRemovalEventData;
}

declare class GeometryCollectionSource { 
	SourceGeometryObject: SoftObjectPath;
	LocalTransform: Transform;
	SourceMaterial: MaterialInterface[];
	clone() : GeometryCollectionSource;
	static C(Other: UObject | any): GeometryCollectionSource;
}

declare class GeometryCollectionEmbeddedExemplar { 
	StaticMeshExemplar: SoftObjectPath;
	StartCullDistance: number;
	EndCullDistance: number;
	InstanceCount: number;
	clone() : GeometryCollectionEmbeddedExemplar;
	static C(Other: UObject | any): GeometryCollectionEmbeddedExemplar;
}

declare type ECollisionTypeEnum = 'Chaos_Volumetric' | 'Chaos_Surface_Volumetric' | 'Chaos_Max';
declare var ECollisionTypeEnum : { Chaos_Volumetric:'Chaos_Volumetric',Chaos_Surface_Volumetric:'Chaos_Surface_Volumetric',Chaos_Max:'Chaos_Max', };
declare type EImplicitTypeEnum = 'Chaos_Implicit_Box' | 'Chaos_Implicit_Sphere' | 'Chaos_Implicit_Capsule' | 'Chaos_Implicit_LevelSet' | 'Chaos_Implicit_None' | 'Chaos_Implicit_Convex' | 'Chaos_Max';
declare var EImplicitTypeEnum : { Chaos_Implicit_Box:'Chaos_Implicit_Box',Chaos_Implicit_Sphere:'Chaos_Implicit_Sphere',Chaos_Implicit_Capsule:'Chaos_Implicit_Capsule',Chaos_Implicit_LevelSet:'Chaos_Implicit_LevelSet',Chaos_Implicit_None:'Chaos_Implicit_None',Chaos_Implicit_Convex:'Chaos_Implicit_Convex',Chaos_Max:'Chaos_Max', };
declare class GeometryCollectionLevelSetData { 
	MinLevelSetResolution: number;
	MaxLevelSetResolution: number;
	MinClusterLevelSetResolution: number;
	MaxClusterLevelSetResolution: number;
	clone() : GeometryCollectionLevelSetData;
	static C(Other: UObject | any): GeometryCollectionLevelSetData;
}

declare class GeometryCollectionCollisionParticleData { 
	CollisionParticlesFraction: number;
	MaximumCollisionParticles: number;
	clone() : GeometryCollectionCollisionParticleData;
	static C(Other: UObject | any): GeometryCollectionCollisionParticleData;
}

declare class GeometryCollectionCollisionTypeData { 
	CollisionType: ECollisionTypeEnum;
	ImplicitType: EImplicitTypeEnum;
	LevelSet: GeometryCollectionLevelSetData;
	CollisionParticles: GeometryCollectionCollisionParticleData;
	CollisionObjectReductionPercentage: number;
	CollisionMarginFraction: number;
	clone() : GeometryCollectionCollisionTypeData;
	static C(Other: UObject | any): GeometryCollectionCollisionTypeData;
}

declare class GeometryCollectionSizeSpecificData { 
	MaxSize: number;
	CollisionShapes: GeometryCollectionCollisionTypeData[];
	CollisionType: ECollisionTypeEnum;
	ImplicitType: EImplicitTypeEnum;
	MinLevelSetResolution: number;
	MaxLevelSetResolution: number;
	MinClusterLevelSetResolution: number;
	MaxClusterLevelSetResolution: number;
	CollisionObjectReductionPercentage: number;
	CollisionParticlesFraction: number;
	MaximumCollisionParticles: number;
	DamageThreshold: number;
	clone() : GeometryCollectionSizeSpecificData;
	static C(Other: UObject | any): GeometryCollectionSizeSpecificData;
}

declare class GeometryCollection extends UObject { 
	EnableClustering: boolean;
	ClusterGroupIndex: number;
	MaxClusterLevel: number;
	DamageThreshold: number[];
	ClusterConnectionType: EClusterConnectionTypeEnum;
	GeometrySource: GeometryCollectionSource[];
	Materials: MaterialInterface[];
	EmbeddedGeometryExemplar: GeometryCollectionEmbeddedExemplar[];
	bUseFullPrecisionUVs: boolean;
	bStripOnCook: boolean;
	EnableNanite: boolean;
	CollisionType: ECollisionTypeEnum;
	ImplicitType: EImplicitTypeEnum;
	MinLevelSetResolution: number;
	MaxLevelSetResolution: number;
	MinClusterLevelSetResolution: number;
	MaxClusterLevelSetResolution: number;
	CollisionObjectReductionPercentage: number;
	bMassAsDensity: boolean;
	Mass: number;
	MinimumMassClamp: number;
	CollisionParticlesFraction: number;
	MaximumCollisionParticles: number;
	bRemoveOnMaxSleep: boolean;
	MaximumSleepTime: Vector2D;
	RemovalDuration: Vector2D;
	SizeSpecificData: GeometryCollectionSizeSpecificData[];
	EnableRemovePiecesOnFracture: boolean;
	RemoveOnFractureMaterials: MaterialInterface[];
	ThumbnailInfo: ThumbnailInfo;
	PersistentGuid: Guid;
	StateGuid: Guid;
	BoneSelectedMaterialIndex: number;
	static Load(ResourceName: string): GeometryCollection;
	static Find(Outer: UObject, ResourceName: string): GeometryCollection;
	static GetDefaultObject(): GeometryCollection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GeometryCollection;
	static C(Other: UObject | any): GeometryCollection;
}

declare type EObjectStateTypeEnum = 'Chaos_NONE' | 'Chaos_Object_Sleeping' | 'Chaos_Object_Kinematic' | 'Chaos_Object_Static' | 'Chaos_Object_Dynamic' | 'Chaos_Object_UserDefined' | 'Chaos_Max';
declare var EObjectStateTypeEnum : { Chaos_NONE:'Chaos_NONE',Chaos_Object_Sleeping:'Chaos_Object_Sleeping',Chaos_Object_Kinematic:'Chaos_Object_Kinematic',Chaos_Object_Static:'Chaos_Object_Static',Chaos_Object_Dynamic:'Chaos_Object_Dynamic',Chaos_Object_UserDefined:'Chaos_Object_UserDefined',Chaos_Max:'Chaos_Max', };
declare type EInitialVelocityTypeEnum = 'Chaos_Initial_Velocity_User_Defined' | 'Chaos_Initial_Velocity_None' | 'Chaos_Max';
declare var EInitialVelocityTypeEnum : { Chaos_Initial_Velocity_User_Defined:'Chaos_Initial_Velocity_User_Defined',Chaos_Initial_Velocity_None:'Chaos_Initial_Velocity_None',Chaos_Max:'Chaos_Max', };
declare type EGeometryCollectionCacheType = 'None' | 'Record' | 'Play' | 'RecordAndPlay' | 'EGeometryCollectionCacheType_MAX';
declare var EGeometryCollectionCacheType : { None:'None',Record:'Record',Play:'Play',RecordAndPlay:'RecordAndPlay',EGeometryCollectionCacheType_MAX:'EGeometryCollectionCacheType_MAX', };
declare class SolverCollisionData { 
	Location: Vector;
	AccumulatedImpulse: Vector;
	Normal: Vector;
	Velocity1: Vector;
	Velocity2: Vector;
	AngularVelocity1: Vector;
	AngularVelocity2: Vector;
	Mass1: number;
	Mass2: number;
	ParticleIndex: number;
	LevelsetIndex: number;
	ParticleIndexMesh: number;
	LevelsetIndexMesh: number;
	clone() : SolverCollisionData;
	static C(Other: UObject | any): SolverCollisionData;
}

declare class SolverBreakingData { 
	Location: Vector;
	Velocity: Vector;
	AngularVelocity: Vector;
	Mass: number;
	ParticleIndex: number;
	ParticleIndexMesh: number;
	clone() : SolverBreakingData;
	static C(Other: UObject | any): SolverBreakingData;
}

declare class RecordedFrame { 
	Transforms: Transform[];
	TransformIndices: number[];
	PreviousTransformIndices: number[];
	DisabledFlags: boolean[];
	Collisions: SolverCollisionData[];
	Breakings: SolverBreakingData[];
	Trailings: any;
	Timestamp: number;
	clone() : RecordedFrame;
	static C(Other: UObject | any): RecordedFrame;
}

declare class RecordedTransformTrack { 
	Records: RecordedFrame[];
	clone() : RecordedTransformTrack;
	static C(Other: UObject | any): RecordedTransformTrack;
}

declare class GeometryCollectionCache extends UObject { 
	RecordedData: RecordedTransformTrack;
	SupportedCollection: GeometryCollection;
	CompatibleCollectionState: Guid;
	static Load(ResourceName: string): GeometryCollectionCache;
	static Find(Outer: UObject, ResourceName: string): GeometryCollectionCache;
	static GetDefaultObject(): GeometryCollectionCache;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GeometryCollectionCache;
	static C(Other: UObject | any): GeometryCollectionCache;
}

declare class GeomComponentCacheParameters { 
	CacheMode: EGeometryCollectionCacheType;
	TargetCache: GeometryCollectionCache;
	ReverseCacheBeginTime: number;
	SaveCollisionData: boolean;
	DoGenerateCollisionData: boolean;
	CollisionDataSizeMax: number;
	DoCollisionDataSpatialHash: boolean;
	CollisionDataSpatialHashRadius: number;
	MaxCollisionPerCell: number;
	SaveBreakingData: boolean;
	DoGenerateBreakingData: boolean;
	BreakingDataSizeMax: number;
	DoBreakingDataSpatialHash: boolean;
	BreakingDataSpatialHashRadius: number;
	MaxBreakingPerCell: number;
	SaveTrailingData: boolean;
	DoGenerateTrailingData: boolean;
	TrailingDataSizeMax: number;
	TrailingMinSpeedThreshold: number;
	TrailingMinVolumeThreshold: number;
	clone() : GeomComponentCacheParameters;
	static C(Other: UObject | any): GeomComponentCacheParameters;
}

declare class ChaosBreakEvent { 
	Component: PrimitiveComponent;
	Location: Vector;
	Velocity: Vector;
	AngularVelocity: Vector;
	Mass: number;
	clone() : ChaosBreakEvent;
	static C(Other: UObject | any): ChaosBreakEvent;
}

declare class ChaosRemovalEvent { 
	Component: PrimitiveComponent;
	Location: Vector;
	Mass: number;
	clone() : ChaosRemovalEvent;
	static C(Other: UObject | any): ChaosRemovalEvent;
}

declare class GeometryCollectionRepData { 
	clone() : GeometryCollectionRepData;
	static C(Other: UObject | any): GeometryCollectionRepData;
}

declare type EGeometryCollectionPhysicsTypeEnum = 'Chaos_AngularVelocity' | 'Chaos_DynamicState' | 'Chaos_LinearVelocity' | 'Chaos_InitialAngularVelocity' | 'Chaos_InitialLinearVelocity' | 'Chaos_CollisionGroup' | 'Chaos_LinearForce' | 'Chaos_AngularTorque' | 'Chaos_DisableThreshold' | 'Chaos_SleepingThreshold' | 'Chaos_Max';
declare var EGeometryCollectionPhysicsTypeEnum : { Chaos_AngularVelocity:'Chaos_AngularVelocity',Chaos_DynamicState:'Chaos_DynamicState',Chaos_LinearVelocity:'Chaos_LinearVelocity',Chaos_InitialAngularVelocity:'Chaos_InitialAngularVelocity',Chaos_InitialLinearVelocity:'Chaos_InitialLinearVelocity',Chaos_CollisionGroup:'Chaos_CollisionGroup',Chaos_LinearForce:'Chaos_LinearForce',Chaos_AngularTorque:'Chaos_AngularTorque',Chaos_DisableThreshold:'Chaos_DisableThreshold',Chaos_SleepingThreshold:'Chaos_SleepingThreshold',Chaos_Max:'Chaos_Max', };
declare class GeometryCollectionComponent extends MeshComponent { 
	ChaosSolverActor: ChaosSolverActor;
	RestCollection: GeometryCollection;
	InitializationFields: FieldSystemActor[];
	Simulating: boolean;
	ObjectType: EObjectStateTypeEnum;
	bForceMotionBlur: boolean;
	EnableClustering: boolean;
	ClusterGroupIndex: number;
	MaxClusterLevel: number;
	DamageThreshold: number[];
	bUseSizeSpecificDamageThreshold: boolean;
	ClusterConnectionType: EClusterConnectionTypeEnum;
	CollisionGroup: number;
	CollisionSampleFraction: number;
	LinearEtherDrag: number;
	AngularEtherDrag: number;
	PhysicalMaterial: ChaosPhysicalMaterial;
	InitialVelocityType: EInitialVelocityTypeEnum;
	InitialLinearVelocity: Vector;
	InitialAngularVelocity: Vector;
	PhysicalMaterialOverride: PhysicalMaterial;
	CacheParameters: GeomComponentCacheParameters;
	RestTransforms: Transform[];
	NotifyGeometryCollectionPhysicsStateChange: UnrealEngineMulticastDelegate<(FracturedComponent: GeometryCollectionComponent) => void>;
	NotifyGeometryCollectionPhysicsLoadingStateChange: UnrealEngineMulticastDelegate<(FracturedComponent: GeometryCollectionComponent) => void>;
	OnChaosBreakEvent: UnrealEngineMulticastDelegate<(BreakEvent: ChaosBreakEvent) => void>;
	OnChaosRemovalEvent: UnrealEngineMulticastDelegate<(RemovalEvent: ChaosRemovalEvent) => void>;
	DesiredCacheTime: number;
	CachePlayback: boolean;
	OnChaosPhysicsCollision: UnrealEngineMulticastDelegate<(CollisionInfo: ChaosPhysicsCollisionInfo) => void>;
	bNotifyBreaks: boolean;
	bNotifyCollisions: boolean;
	bNotifyTrailing: boolean;
	bNotifyRemovals: boolean;
	bStoreVelocities: boolean;
	bShowBoneColors: boolean;
	bEnableReplication: boolean;
	bEnableAbandonAfterLevel: boolean;
	ReplicationAbandonClusterLevel: number;
	RepData: GeometryCollectionRepData;
	SelectedBones: number[];
	HighlightedBones: number[];
	DummyBodySetup: BodySetup;
	EditorActor: Actor;
	EmbeddedGeometryComponents: InstancedStaticMeshComponent[];
	static Load(ResourceName: string): GeometryCollectionComponent;
	static Find(Outer: UObject, ResourceName: string): GeometryCollectionComponent;
	static GetDefaultObject(): GeometryCollectionComponent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GeometryCollectionComponent;
	SetNotifyRemovals(bNewNotifyRemovals: boolean): void;
	SetNotifyBreaks(bNewNotifyBreaks: boolean): void;
	ReceivePhysicsCollision(CollisionInfo: ChaosPhysicsCollisionInfo): void;
	OnRep_RepData(OldData: GeometryCollectionRepData): void;
	NetAbandonCluster(TransformIndex: number): void;
	ApplyPhysicsField(Enabled: boolean,Target: EGeometryCollectionPhysicsTypeEnum,MetaData: FieldSystemMetaData,Field: FieldNodeBase): void;
	ApplyKinematicField(Radius: number,position: Vector): void;
	static C(Other: UObject | any): GeometryCollectionComponent;
}

declare class GeometryCollectionDebugDrawWarningMessage { 
	clone() : GeometryCollectionDebugDrawWarningMessage;
	static C(Other: UObject | any): GeometryCollectionDebugDrawWarningMessage;
}

declare class GeometryCollectionDebugDrawActorSelectedRigidBody { 
	ID: number;
	Solver: ChaosSolverActor;
	GeometryCollection: GeometryCollectionActor;
	clone() : GeometryCollectionDebugDrawActorSelectedRigidBody;
	static C(Other: UObject | any): GeometryCollectionDebugDrawActorSelectedRigidBody;
}

declare type EGeometryCollectionDebugDrawActorHideGeometry = 'HideNone' | 'HideWithCollision' | 'HideSelected' | 'HideWholeCollection' | 'HideAll' | 'EGeometryCollectionDebugDrawActorHideGeometry_MAX';
declare var EGeometryCollectionDebugDrawActorHideGeometry : { HideNone:'HideNone',HideWithCollision:'HideWithCollision',HideSelected:'HideSelected',HideWholeCollection:'HideWholeCollection',HideAll:'HideAll',EGeometryCollectionDebugDrawActorHideGeometry_MAX:'EGeometryCollectionDebugDrawActorHideGeometry_MAX', };
declare class GeometryCollectionDebugDrawActor extends Actor { 
	WarningMessage: GeometryCollectionDebugDrawWarningMessage;
	SelectedRigidBody: GeometryCollectionDebugDrawActorSelectedRigidBody;
	bDebugDrawWholeCollection: boolean;
	bDebugDrawHierarchy: boolean;
	bDebugDrawClustering: boolean;
	HideGeometry: EGeometryCollectionDebugDrawActorHideGeometry;
	bShowRigidBodyId: boolean;
	bShowRigidBodyCollision: boolean;
	bCollisionAtOrigin: boolean;
	bShowRigidBodyTransform: boolean;
	bShowRigidBodyInertia: boolean;
	bShowRigidBodyVelocity: boolean;
	bShowRigidBodyForce: boolean;
	bShowRigidBodyInfos: boolean;
	bShowTransformIndex: boolean;
	bShowTransform: boolean;
	bShowParent: boolean;
	bShowLevel: boolean;
	bShowConnectivityEdges: boolean;
	bShowGeometryIndex: boolean;
	bShowGeometryTransform: boolean;
	bShowBoundingBox: boolean;
	bShowFaces: boolean;
	bShowFaceIndices: boolean;
	bShowFaceNormals: boolean;
	bShowSingleFace: boolean;
	SingleFaceIndex: number;
	bShowVertices: boolean;
	bShowVertexIndices: boolean;
	bShowVertexNormals: boolean;
	bUseActiveVisualization: boolean;
	PointThickness: number;
	LineThickness: number;
	bTextShadow: boolean;
	TextScale: number;
	NormalScale: number;
	AxisScale: number;
	ArrowScale: number;
	RigidBodyIdColor: Color;
	RigidBodyTransformScale: number;
	RigidBodyCollisionColor: Color;
	RigidBodyInertiaColor: Color;
	RigidBodyVelocityColor: Color;
	RigidBodyForceColor: Color;
	RigidBodyInfoColor: Color;
	TransformIndexColor: Color;
	TransformScale: number;
	LevelColor: Color;
	ParentColor: Color;
	ConnectivityEdgeThickness: number;
	GeometryIndexColor: Color;
	GeometryTransformScale: number;
	BoundingBoxColor: Color;
	FaceColor: Color;
	FaceIndexColor: Color;
	FaceNormalColor: Color;
	SingleFaceColor: Color;
	VertexColor: Color;
	VertexIndexColor: Color;
	VertexNormalColor: Color;
	SpriteComponent: BillboardComponent;
	static GetDefaultObject(): GeometryCollectionDebugDrawActor;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GeometryCollectionDebugDrawActor;
	static C(Other: UObject | any): GeometryCollectionDebugDrawActor;
}

declare class GeometryCollectionRenderLevelSetActor extends Actor { 
	TargetVolumeTexture: VolumeTexture;
	RayMarchMaterial: Material;
	SurfaceTolerance: number;
	Isovalue: number;
	Enabled: boolean;
	RenderVolumeBoundingBox: boolean;
	static GetDefaultObject(): GeometryCollectionRenderLevelSetActor;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GeometryCollectionRenderLevelSetActor;
	static C(Other: UObject | any): GeometryCollectionRenderLevelSetActor;
}

declare class GeometryCollectionDebugDrawComponent extends ActorComponent { 
	GeometryCollectionDebugDrawActor: GeometryCollectionDebugDrawActor;
	GeometryCollectionRenderLevelSetActor: GeometryCollectionRenderLevelSetActor;
	static Load(ResourceName: string): GeometryCollectionDebugDrawComponent;
	static Find(Outer: UObject, ResourceName: string): GeometryCollectionDebugDrawComponent;
	static GetDefaultObject(): GeometryCollectionDebugDrawComponent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GeometryCollectionDebugDrawComponent;
	static C(Other: UObject | any): GeometryCollectionDebugDrawComponent;
}

declare class GeometryCollectionActor extends Actor { 
	GeometryCollectionComponent: GeometryCollectionComponent;
	GeometryCollectionDebugDrawComponent: GeometryCollectionDebugDrawComponent;
	static GetDefaultObject(): GeometryCollectionActor;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GeometryCollectionActor;
	RaycastSingle(Start: Vector,End: Vector,OutHit?: HitResult): {OutHit: HitResult, $: boolean};
	static C(Other: UObject | any): GeometryCollectionActor;
}

declare class ChaosDestructionListener extends SceneComponent { 
	bIsCollisionEventListeningEnabled: boolean;
	bIsBreakingEventListeningEnabled: boolean;
	bIsTrailingEventListeningEnabled: boolean;
	bIsRemovalEventListeningEnabled: boolean;
	CollisionEventRequestSettings: ChaosCollisionEventRequestSettings;
	BreakingEventRequestSettings: ChaosBreakingEventRequestSettings;
	TrailingEventRequestSettings: ChaosTrailingEventRequestSettings;
	RemovalEventRequestSettings: ChaosRemovalEventRequestSettings;
	ChaosSolverActors: any;
	GeometryCollectionActors: any;
	OnCollisionEvents: UnrealEngineMulticastDelegate<(CollisionEvents: ChaosCollisionEventData[]) => void>;
	OnBreakingEvents: UnrealEngineMulticastDelegate<(BreakingEvents: ChaosBreakingEventData[]) => void>;
	OnTrailingEvents: UnrealEngineMulticastDelegate<(TrailingEvents: ChaosTrailingEventData[]) => void>;
	OnRemovalEvents: UnrealEngineMulticastDelegate<(RemovalEvents: ChaosRemovalEventData[]) => void>;
	static Load(ResourceName: string): ChaosDestructionListener;
	static Find(Outer: UObject, ResourceName: string): ChaosDestructionListener;
	static GetDefaultObject(): ChaosDestructionListener;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ChaosDestructionListener;
	SortTrailingEvents(TrailingEvents?: ChaosTrailingEventData[],SortMethod?: EChaosTrailingSortMethod): {TrailingEvents: ChaosTrailingEventData[]};
	SortRemovalEvents(RemovalEvents?: ChaosRemovalEventData[],SortMethod?: EChaosRemovalSortMethod): {RemovalEvents: ChaosRemovalEventData[]};
	SortCollisionEvents(CollisionEvents?: ChaosCollisionEventData[],SortMethod?: EChaosCollisionSortMethod): {CollisionEvents: ChaosCollisionEventData[]};
	SortBreakingEvents(BreakingEvents?: ChaosBreakingEventData[],SortMethod?: EChaosBreakingSortMethod): {BreakingEvents: ChaosBreakingEventData[]};
	SetTrailingEventRequestSettings(InSettings: ChaosTrailingEventRequestSettings): void;
	SetTrailingEventEnabled(bIsEnabled: boolean): void;
	SetRemovalEventRequestSettings(InSettings: ChaosRemovalEventRequestSettings): void;
	SetRemovalEventEnabled(bIsEnabled: boolean): void;
	SetCollisionEventRequestSettings(InSettings: ChaosCollisionEventRequestSettings): void;
	SetCollisionEventEnabled(bIsEnabled: boolean): void;
	SetBreakingEventRequestSettings(InSettings: ChaosBreakingEventRequestSettings): void;
	SetBreakingEventEnabled(bIsEnabled: boolean): void;
	RemoveGeometryCollectionActor(GeometryCollectionActor: GeometryCollectionActor): void;
	RemoveChaosSolverActor(ChaosSolverActor: ChaosSolverActor): void;
	IsEventListening(): boolean;
	AddGeometryCollectionActor(GeometryCollectionActor: GeometryCollectionActor): void;
	AddChaosSolverActor(ChaosSolverActor: ChaosSolverActor): void;
	static C(Other: UObject | any): ChaosDestructionListener;
}

declare class ActorFactoryGeometryCollection extends ActorFactory { 
	static Load(ResourceName: string): ActorFactoryGeometryCollection;
	static Find(Outer: UObject, ResourceName: string): ActorFactoryGeometryCollection;
	static GetDefaultObject(): ActorFactoryGeometryCollection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorFactoryGeometryCollection;
	static C(Other: UObject | any): ActorFactoryGeometryCollection;
}

declare class GeometryCollectionCacheFactory extends Factory { 
	TargetCollection: GeometryCollection;
	static Load(ResourceName: string): GeometryCollectionCacheFactory;
	static Find(Outer: UObject, ResourceName: string): GeometryCollectionCacheFactory;
	static GetDefaultObject(): GeometryCollectionCacheFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GeometryCollectionCacheFactory;
	static C(Other: UObject | any): GeometryCollectionCacheFactory;
}

declare class GeometryCollectionFactory extends Factory { 
	static Load(ResourceName: string): GeometryCollectionFactory;
	static Find(Outer: UObject, ResourceName: string): GeometryCollectionFactory;
	static GetDefaultObject(): GeometryCollectionFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GeometryCollectionFactory;
	static C(Other: UObject | any): GeometryCollectionFactory;
}

declare class GeometryCollectionThumbnailRenderer extends DefaultSizedThumbnailRenderer { 
	static Load(ResourceName: string): GeometryCollectionThumbnailRenderer;
	static Find(Outer: UObject, ResourceName: string): GeometryCollectionThumbnailRenderer;
	static GetDefaultObject(): GeometryCollectionThumbnailRenderer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GeometryCollectionThumbnailRenderer;
	static C(Other: UObject | any): GeometryCollectionThumbnailRenderer;
}

declare class FractureEditorMode extends BaseLegacyWidgetEdMode { 
	static Load(ResourceName: string): FractureEditorMode;
	static Find(Outer: UObject, ResourceName: string): FractureEditorMode;
	static GetDefaultObject(): FractureEditorMode;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureEditorMode;
	static C(Other: UObject | any): FractureEditorMode;
}

declare class FractureModeCustomSectionColor { 
	SectionName: string;
	Color: LinearColor;
	clone() : FractureModeCustomSectionColor;
	static C(Other: UObject | any): FractureModeCustomSectionColor;
}

declare class FractureModeCustomToolColor { 
	ToolName: string;
	Color: LinearColor;
	clone() : FractureModeCustomToolColor;
	static C(Other: UObject | any): FractureModeCustomToolColor;
}

declare class FractureModeCustomizationSettings extends DeveloperSettings { 
	ToolSectionOrder: string[];
	ToolFavorites: string[];
	SectionColors: FractureModeCustomSectionColor[];
	ToolColors: FractureModeCustomToolColor[];
	static Load(ResourceName: string): FractureModeCustomizationSettings;
	static Find(Outer: UObject, ResourceName: string): FractureModeCustomizationSettings;
	static GetDefaultObject(): FractureModeCustomizationSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureModeCustomizationSettings;
	static C(Other: UObject | any): FractureModeCustomizationSettings;
}

declare class FractureSettings extends UObject { 
	ExplodeAmount: number;
	FractureLevel: number;
	bHideUnselected: boolean;
	static Load(ResourceName: string): FractureSettings;
	static Find(Outer: UObject, ResourceName: string): FractureSettings;
	static GetDefaultObject(): FractureSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureSettings;
	static C(Other: UObject | any): FractureSettings;
}

declare class FractureActionTool extends UObject { 
	static Load(ResourceName: string): FractureActionTool;
	static Find(Outer: UObject, ResourceName: string): FractureActionTool;
	static GetDefaultObject(): FractureActionTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureActionTool;
	static C(Other: UObject | any): FractureActionTool;
}

declare class FractureModalTool extends FractureActionTool { 
	VisualizedCollections: GeometryCollectionComponent[];
	static Load(ResourceName: string): FractureModalTool;
	static Find(Outer: UObject, ResourceName: string): FractureModalTool;
	static GetDefaultObject(): FractureModalTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureModalTool;
	static C(Other: UObject | any): FractureModalTool;
}

declare class FractureToolSettings extends UObject { 
	OwnerTool: FractureModalTool;
	static Load(ResourceName: string): FractureToolSettings;
	static Find(Outer: UObject, ResourceName: string): FractureToolSettings;
	static GetDefaultObject(): FractureToolSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureToolSettings;
	static C(Other: UObject | any): FractureToolSettings;
}

declare class FractureInteractiveTool extends FractureModalTool { 
	static Load(ResourceName: string): FractureInteractiveTool;
	static Find(Outer: UObject, ResourceName: string): FractureInteractiveTool;
	static GetDefaultObject(): FractureInteractiveTool;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureInteractiveTool;
	static C(Other: UObject | any): FractureInteractiveTool;
}

declare type EFractureAutoClusterMode = 'BoundingBox' | 'Proximity' | 'Distance' | 'Voronoi' | 'EFractureAutoClusterMode_MAX';
declare var EFractureAutoClusterMode : { BoundingBox:'BoundingBox',Proximity:'Proximity',Distance:'Distance',Voronoi:'Voronoi',EFractureAutoClusterMode_MAX:'EFractureAutoClusterMode_MAX', };
declare class FractureAutoClusterSettings extends FractureToolSettings { 
	AutoClusterMode: EFractureAutoClusterMode;
	SiteCount: any;
	bEnforceConnectivity: boolean;
	static Load(ResourceName: string): FractureAutoClusterSettings;
	static Find(Outer: UObject, ResourceName: string): FractureAutoClusterSettings;
	static GetDefaultObject(): FractureAutoClusterSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureAutoClusterSettings;
	static C(Other: UObject | any): FractureAutoClusterSettings;
}

declare class FractureToolAutoCluster extends FractureModalTool { 
	AutoClusterSettings: FractureAutoClusterSettings;
	static Load(ResourceName: string): FractureToolAutoCluster;
	static Find(Outer: UObject, ResourceName: string): FractureToolAutoCluster;
	static GetDefaultObject(): FractureToolAutoCluster;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureToolAutoCluster;
	static C(Other: UObject | any): FractureToolAutoCluster;
}

declare type EFractureBrickBond = 'Stretcher' | 'Stack' | 'English' | 'Header' | 'Flemish' | 'EFractureBrickBond_MAX';
declare var EFractureBrickBond : { Stretcher:'Stretcher',Stack:'Stack',English:'English',Header:'Header',Flemish:'Flemish',EFractureBrickBond_MAX:'EFractureBrickBond_MAX', };
declare class FractureBrickSettings extends FractureToolSettings { 
	Bond: EFractureBrickBond;
	BrickLength: number;
	BrickHeight: number;
	BrickDepth: number;
	static Load(ResourceName: string): FractureBrickSettings;
	static Find(Outer: UObject, ResourceName: string): FractureBrickSettings;
	static GetDefaultObject(): FractureBrickSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureBrickSettings;
	static C(Other: UObject | any): FractureBrickSettings;
}

declare class FractureCutterSettings extends FractureToolSettings { 
	RandomSeed: number;
	ChanceToFracture: number;
	bGroupFracture: boolean;
	bGroupFractureToggleEnabled: boolean;
	bDrawSites: boolean;
	bDrawSitesToggleEnabled: boolean;
	bDrawDiagram: boolean;
	Grout: number;
	Amplitude: number;
	Frequency: number;
	Persistence: number;
	Lacunarity: number;
	OctaveNumber: number;
	PointSpacing: number;
	static Load(ResourceName: string): FractureCutterSettings;
	static Find(Outer: UObject, ResourceName: string): FractureCutterSettings;
	static GetDefaultObject(): FractureCutterSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureCutterSettings;
	static C(Other: UObject | any): FractureCutterSettings;
}

declare class FractureCollisionSettings extends FractureToolSettings { 
	bAddSamplesForCollision: boolean;
	PointSpacing: number;
	static Load(ResourceName: string): FractureCollisionSettings;
	static Find(Outer: UObject, ResourceName: string): FractureCollisionSettings;
	static GetDefaultObject(): FractureCollisionSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureCollisionSettings;
	static C(Other: UObject | any): FractureCollisionSettings;
}

declare class FractureToolCutterBase extends FractureInteractiveTool { 
	CutterSettings: FractureCutterSettings;
	CollisionSettings: FractureCollisionSettings;
	static Load(ResourceName: string): FractureToolCutterBase;
	static Find(Outer: UObject, ResourceName: string): FractureToolCutterBase;
	static GetDefaultObject(): FractureToolCutterBase;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureToolCutterBase;
	static C(Other: UObject | any): FractureToolCutterBase;
}

declare class FractureToolBrick extends FractureToolCutterBase { 
	BrickSettings: FractureBrickSettings;
	static Load(ResourceName: string): FractureToolBrick;
	static Find(Outer: UObject, ResourceName: string): FractureToolBrick;
	static GetDefaultObject(): FractureToolBrick;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureToolBrick;
	static C(Other: UObject | any): FractureToolBrick;
}

declare class FractureClusterCutterSettings extends FractureToolSettings { 
	NumberClustersMin: number;
	NumberClustersMax: number;
	SitesPerClusterMin: number;
	SitesPerClusterMax: number;
	ClusterRadiusFractionMin: number;
	ClusterRadiusFractionMax: number;
	ClusterRadiusOffset: number;
	static Load(ResourceName: string): FractureClusterCutterSettings;
	static Find(Outer: UObject, ResourceName: string): FractureClusterCutterSettings;
	static GetDefaultObject(): FractureClusterCutterSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureClusterCutterSettings;
	static C(Other: UObject | any): FractureClusterCutterSettings;
}

declare class FractureToolVoronoiCutterBase extends FractureToolCutterBase { 
	VoronoiLineSets: LineSetComponent[];
	static Load(ResourceName: string): FractureToolVoronoiCutterBase;
	static Find(Outer: UObject, ResourceName: string): FractureToolVoronoiCutterBase;
	static GetDefaultObject(): FractureToolVoronoiCutterBase;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureToolVoronoiCutterBase;
	static C(Other: UObject | any): FractureToolVoronoiCutterBase;
}

declare class FractureToolClusterCutter extends FractureToolVoronoiCutterBase { 
	ClusterSettings: FractureClusterCutterSettings;
	static Load(ResourceName: string): FractureToolClusterCutter;
	static Find(Outer: UObject, ResourceName: string): FractureToolClusterCutter;
	static GetDefaultObject(): FractureToolClusterCutter;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureToolClusterCutter;
	static C(Other: UObject | any): FractureToolClusterCutter;
}

declare class FractureToolFlattenAll extends FractureActionTool { 
	static Load(ResourceName: string): FractureToolFlattenAll;
	static Find(Outer: UObject, ResourceName: string): FractureToolFlattenAll;
	static GetDefaultObject(): FractureToolFlattenAll;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureToolFlattenAll;
	static C(Other: UObject | any): FractureToolFlattenAll;
}

declare class FractureToolCluster extends FractureActionTool { 
	static Load(ResourceName: string): FractureToolCluster;
	static Find(Outer: UObject, ResourceName: string): FractureToolCluster;
	static GetDefaultObject(): FractureToolCluster;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureToolCluster;
	static C(Other: UObject | any): FractureToolCluster;
}

declare class FractureToolUncluster extends FractureActionTool { 
	static Load(ResourceName: string): FractureToolUncluster;
	static Find(Outer: UObject, ResourceName: string): FractureToolUncluster;
	static GetDefaultObject(): FractureToolUncluster;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureToolUncluster;
	static C(Other: UObject | any): FractureToolUncluster;
}

declare class FractureToolMoveUp extends FractureActionTool { 
	static Load(ResourceName: string): FractureToolMoveUp;
	static Find(Outer: UObject, ResourceName: string): FractureToolMoveUp;
	static GetDefaultObject(): FractureToolMoveUp;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureToolMoveUp;
	static C(Other: UObject | any): FractureToolMoveUp;
}

declare class FractureToolClusterMerge extends FractureActionTool { 
	static Load(ResourceName: string): FractureToolClusterMerge;
	static Find(Outer: UObject, ResourceName: string): FractureToolClusterMerge;
	static GetDefaultObject(): FractureToolClusterMerge;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureToolClusterMerge;
	static C(Other: UObject | any): FractureToolClusterMerge;
}

declare class FractureClusterMagnetSettings extends FractureToolSettings { 
	Iterations: any;
	static Load(ResourceName: string): FractureClusterMagnetSettings;
	static Find(Outer: UObject, ResourceName: string): FractureClusterMagnetSettings;
	static GetDefaultObject(): FractureClusterMagnetSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureClusterMagnetSettings;
	static C(Other: UObject | any): FractureClusterMagnetSettings;
}

declare class FractureToolClusterMagnet extends FractureModalTool { 
	ClusterMagnetSettings: FractureClusterMagnetSettings;
	static Load(ResourceName: string): FractureToolClusterMagnet;
	static Find(Outer: UObject, ResourceName: string): FractureToolClusterMagnet;
	static GetDefaultObject(): FractureToolClusterMagnet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureToolClusterMagnet;
	static C(Other: UObject | any): FractureToolClusterMagnet;
}

declare class FractureConvertSettings extends FractureToolSettings { 
	bPromptForBaseName: boolean;
	bPerBone: boolean;
	bCenterPivots: boolean;
	bPlaceInWorld: boolean;
	bSelectNewActors: boolean;
	static Load(ResourceName: string): FractureConvertSettings;
	static Find(Outer: UObject, ResourceName: string): FractureConvertSettings;
	static GetDefaultObject(): FractureConvertSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureConvertSettings;
	static C(Other: UObject | any): FractureConvertSettings;
}

declare class FractureToolConvert extends FractureModalTool { 
	ConvertSettings: FractureConvertSettings;
	static Load(ResourceName: string): FractureToolConvert;
	static Find(Outer: UObject, ResourceName: string): FractureToolConvert;
	static GetDefaultObject(): FractureToolConvert;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureToolConvert;
	static C(Other: UObject | any): FractureToolConvert;
}

declare class FractureConvexSettings extends FractureToolSettings { 
	FractionAllowRemove: any;
	CanExceedFraction: any;
	SimplificationDistanceThreshold: any;
	static Load(ResourceName: string): FractureConvexSettings;
	static Find(Outer: UObject, ResourceName: string): FractureConvexSettings;
	static GetDefaultObject(): FractureConvexSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureConvexSettings;
	DeleteFromSelected(): void;
	ClearCustomConvex(): void;
	static C(Other: UObject | any): FractureConvexSettings;
}

declare class FractureToolConvex extends FractureModalTool { 
	ConvexSettings: FractureConvexSettings;
	static Load(ResourceName: string): FractureToolConvex;
	static Find(Outer: UObject, ResourceName: string): FractureToolConvex;
	static GetDefaultObject(): FractureToolConvex;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureToolConvex;
	static C(Other: UObject | any): FractureToolConvex;
}

declare type EVoronoiPattern = 'Centered' | 'Uniform' | 'Grid' | 'MeshVertices' | 'SelectedBones' | 'EVoronoiPattern_MAX';
declare var EVoronoiPattern : { Centered:'Centered',Uniform:'Uniform',Grid:'Grid',MeshVertices:'MeshVertices',SelectedBones:'SelectedBones',EVoronoiPattern_MAX:'EVoronoiPattern_MAX', };
declare type EDownsamplingMode = 'Random' | 'UniformSpacing' | 'KeepSharp' | 'EDownsamplingMode_MAX';
declare var EDownsamplingMode : { Random:'Random',UniformSpacing:'UniformSpacing',KeepSharp:'KeepSharp',EDownsamplingMode_MAX:'EDownsamplingMode_MAX', };
declare class FractureCustomVoronoiSettings extends FractureToolSettings { 
	VoronoiPattern: EVoronoiPattern;
	NormalOffset: number;
	Variability: number;
	SitesToAdd: number;
	GridX: number;
	GridY: number;
	GridZ: number;
	SkipFraction: number;
	SkipMode: EDownsamplingMode;
	ReferenceMesh: any;
	bStartAtActor: boolean;
	static Load(ResourceName: string): FractureCustomVoronoiSettings;
	static Find(Outer: UObject, ResourceName: string): FractureCustomVoronoiSettings;
	static GetDefaultObject(): FractureCustomVoronoiSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureCustomVoronoiSettings;
	UnfreezeSites(): void;
	RegenerateLiveSites(): void;
	FreezeLiveSites(): void;
	ClearFrozenSites(): void;
	static C(Other: UObject | any): FractureCustomVoronoiSettings;
}

declare class FractureTransformGizmoSettings extends FractureToolSettings { 
	bUseGizmo: boolean;
	bCenterOnSelection: boolean;
	bShowUseGizmoOption: boolean;
	TransformGizmo: CombinedTransformGizmo;
	TransformProxy: TransformProxy;
	AttachedCutter: FractureToolCutterBase;
	UsedToolsContext: InteractiveToolsContext;
	static Load(ResourceName: string): FractureTransformGizmoSettings;
	static Find(Outer: UObject, ResourceName: string): FractureTransformGizmoSettings;
	static GetDefaultObject(): FractureTransformGizmoSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureTransformGizmoSettings;
	static C(Other: UObject | any): FractureTransformGizmoSettings;
}

declare class FractureToolCustomVoronoi extends FractureToolVoronoiCutterBase { 
	CustomVoronoiSettings: FractureCustomVoronoiSettings;
	GizmoSettings: FractureTransformGizmoSettings;
	static Load(ResourceName: string): FractureToolCustomVoronoi;
	static Find(Outer: UObject, ResourceName: string): FractureToolCustomVoronoi;
	static GetDefaultObject(): FractureToolCustomVoronoi;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureToolCustomVoronoi;
	static C(Other: UObject | any): FractureToolCustomVoronoi;
}

declare class FractureToolDeleteBranch extends FractureActionTool { 
	static Load(ResourceName: string): FractureToolDeleteBranch;
	static Find(Outer: UObject, ResourceName: string): FractureToolDeleteBranch;
	static GetDefaultObject(): FractureToolDeleteBranch;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureToolDeleteBranch;
	static C(Other: UObject | any): FractureToolDeleteBranch;
}

declare class FractureToolHide extends FractureActionTool { 
	static Load(ResourceName: string): FractureToolHide;
	static Find(Outer: UObject, ResourceName: string): FractureToolHide;
	static GetDefaultObject(): FractureToolHide;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureToolHide;
	static C(Other: UObject | any): FractureToolHide;
}

declare class FractureToolUnhide extends FractureActionTool { 
	static Load(ResourceName: string): FractureToolUnhide;
	static Find(Outer: UObject, ResourceName: string): FractureToolUnhide;
	static GetDefaultObject(): FractureToolUnhide;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureToolUnhide;
	static C(Other: UObject | any): FractureToolUnhide;
}

declare class FractureToolValidate extends FractureActionTool { 
	static Load(ResourceName: string): FractureToolValidate;
	static Find(Outer: UObject, ResourceName: string): FractureToolValidate;
	static GetDefaultObject(): FractureToolValidate;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureToolValidate;
	static C(Other: UObject | any): FractureToolValidate;
}

declare class FractureToolAddEmbeddedGeometry extends FractureActionTool { 
	static Load(ResourceName: string): FractureToolAddEmbeddedGeometry;
	static Find(Outer: UObject, ResourceName: string): FractureToolAddEmbeddedGeometry;
	static GetDefaultObject(): FractureToolAddEmbeddedGeometry;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureToolAddEmbeddedGeometry;
	static C(Other: UObject | any): FractureToolAddEmbeddedGeometry;
}

declare class FractureToolAutoEmbedGeometry extends FractureActionTool { 
	static Load(ResourceName: string): FractureToolAutoEmbedGeometry;
	static Find(Outer: UObject, ResourceName: string): FractureToolAutoEmbedGeometry;
	static GetDefaultObject(): FractureToolAutoEmbedGeometry;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureToolAutoEmbedGeometry;
	static C(Other: UObject | any): FractureToolAutoEmbedGeometry;
}

declare class FractureToolFlushEmbeddedGeometrySettings extends FractureToolSettings { 
	bExtractAsStaticMeshActors: boolean;
	static Load(ResourceName: string): FractureToolFlushEmbeddedGeometrySettings;
	static Find(Outer: UObject, ResourceName: string): FractureToolFlushEmbeddedGeometrySettings;
	static GetDefaultObject(): FractureToolFlushEmbeddedGeometrySettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureToolFlushEmbeddedGeometrySettings;
	static C(Other: UObject | any): FractureToolFlushEmbeddedGeometrySettings;
}

declare class FractureToolFlushEmbeddedGeometry extends FractureModalTool { 
	FlushEmbeddedGeometrySettings: FractureToolFlushEmbeddedGeometrySettings;
	static Load(ResourceName: string): FractureToolFlushEmbeddedGeometry;
	static Find(Outer: UObject, ResourceName: string): FractureToolFlushEmbeddedGeometry;
	static GetDefaultObject(): FractureToolFlushEmbeddedGeometry;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureToolFlushEmbeddedGeometry;
	static C(Other: UObject | any): FractureToolFlushEmbeddedGeometry;
}

declare type ENeighborSelectionMethod = 'LargestNeighbor' | 'NearestCenter' | 'ENeighborSelectionMethod_MAX';
declare var ENeighborSelectionMethod : { LargestNeighbor:'LargestNeighbor',NearestCenter:'NearestCenter',ENeighborSelectionMethod_MAX:'ENeighborSelectionMethod_MAX', };
declare type EGeometrySelectionMethod = 'VolumeCubeRoot' | 'RelativeVolume' | 'EGeometrySelectionMethod_MAX';
declare var EGeometrySelectionMethod : { VolumeCubeRoot:'VolumeCubeRoot',RelativeVolume:'RelativeVolume',EGeometrySelectionMethod_MAX:'EGeometrySelectionMethod_MAX', };
declare class FractureTinyGeoSettings extends FractureToolSettings { 
	NeighborSelection: ENeighborSelectionMethod;
	bAlsoMergeSelected: boolean;
	SelectionMethod: EGeometrySelectionMethod;
	MinVolumeCubeRoot: any;
	RelativeVolume: any;
	static Load(ResourceName: string): FractureTinyGeoSettings;
	static Find(Outer: UObject, ResourceName: string): FractureTinyGeoSettings;
	static GetDefaultObject(): FractureTinyGeoSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureTinyGeoSettings;
	static C(Other: UObject | any): FractureTinyGeoSettings;
}

declare class FractureToolFixTinyGeo extends FractureToolCutterBase { 
	TinyGeoSettings: FractureTinyGeoSettings;
	static Load(ResourceName: string): FractureToolFixTinyGeo;
	static Find(Outer: UObject, ResourceName: string): FractureToolFixTinyGeo;
	static GetDefaultObject(): FractureToolFixTinyGeo;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureToolFixTinyGeo;
	static C(Other: UObject | any): FractureToolFixTinyGeo;
}

declare class FractureToolGenerateAsset extends FractureActionTool { 
	AssetPath: string;
	static Load(ResourceName: string): FractureToolGenerateAsset;
	static Find(Outer: UObject, ResourceName: string): FractureToolGenerateAsset;
	static GetDefaultObject(): FractureToolGenerateAsset;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureToolGenerateAsset;
	static C(Other: UObject | any): FractureToolGenerateAsset;
}

declare class FractureToolResetAsset extends FractureToolGenerateAsset { 
	static Load(ResourceName: string): FractureToolResetAsset;
	static Find(Outer: UObject, ResourceName: string): FractureToolResetAsset;
	static GetDefaultObject(): FractureToolResetAsset;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureToolResetAsset;
	static C(Other: UObject | any): FractureToolResetAsset;
}

declare type EMeshCutDistribution = 'SingleCut' | 'UniformRandom' | 'Grid' | 'EMeshCutDistribution_MAX';
declare var EMeshCutDistribution : { SingleCut:'SingleCut',UniformRandom:'UniformRandom',Grid:'Grid',EMeshCutDistribution_MAX:'EMeshCutDistribution_MAX', };
declare class FractureMeshCutSettings extends FractureToolSettings { 
	CuttingActor: any;
	CutDistribution: EMeshCutDistribution;
	NumberToScatter: number;
	GridX: number;
	GridY: number;
	GridZ: number;
	Variability: number;
	MinScaleFactor: number;
	MaxScaleFactor: number;
	bRandomOrientation: boolean;
	RollRange: number;
	PitchRange: number;
	YawRange: number;
	static Load(ResourceName: string): FractureMeshCutSettings;
	static Find(Outer: UObject, ResourceName: string): FractureMeshCutSettings;
	static GetDefaultObject(): FractureMeshCutSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureMeshCutSettings;
	static C(Other: UObject | any): FractureMeshCutSettings;
}

declare class FractureToolMeshCut extends FractureToolCutterBase { 
	MeshCutSettings: FractureMeshCutSettings;
	static Load(ResourceName: string): FractureToolMeshCut;
	static Find(Outer: UObject, ResourceName: string): FractureToolMeshCut;
	static GetDefaultObject(): FractureToolMeshCut;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureToolMeshCut;
	static C(Other: UObject | any): FractureToolMeshCut;
}

declare class FracturePlaneCutSettings extends FractureToolSettings { 
	NumberPlanarCuts: number;
	bCanCutWithMultiplePlanes: boolean;
	static Load(ResourceName: string): FracturePlaneCutSettings;
	static Find(Outer: UObject, ResourceName: string): FracturePlaneCutSettings;
	static GetDefaultObject(): FracturePlaneCutSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FracturePlaneCutSettings;
	static C(Other: UObject | any): FracturePlaneCutSettings;
}

declare class FractureToolPlaneCut extends FractureToolCutterBase { 
	PlaneCutSettings: FracturePlaneCutSettings;
	GizmoSettings: FractureTransformGizmoSettings;
	static Load(ResourceName: string): FractureToolPlaneCut;
	static Find(Outer: UObject, ResourceName: string): FractureToolPlaneCut;
	static GetDefaultObject(): FractureToolPlaneCut;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureToolPlaneCut;
	static C(Other: UObject | any): FractureToolPlaneCut;
}

declare type EDynamicStateOverrideEnum = 'NoOverride' | 'Sleeping' | 'Kinematic' | 'Static' | 'EDynamicStateOverrideEnum_MAX';
declare var EDynamicStateOverrideEnum : { NoOverride:'NoOverride',Sleeping:'Sleeping',Kinematic:'Kinematic',Static:'Static',EDynamicStateOverrideEnum_MAX:'EDynamicStateOverrideEnum_MAX', };
declare class FractureInitialDynamicStateSettings extends FractureToolSettings { 
	InitialDynamicState: EDynamicStateOverrideEnum;
	static Load(ResourceName: string): FractureInitialDynamicStateSettings;
	static Find(Outer: UObject, ResourceName: string): FractureInitialDynamicStateSettings;
	static GetDefaultObject(): FractureInitialDynamicStateSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureInitialDynamicStateSettings;
	static C(Other: UObject | any): FractureInitialDynamicStateSettings;
}

declare class FractureToolSetInitialDynamicState extends FractureModalTool { 
	StateSettings: FractureInitialDynamicStateSettings;
	static Load(ResourceName: string): FractureToolSetInitialDynamicState;
	static Find(Outer: UObject, ResourceName: string): FractureToolSetInitialDynamicState;
	static GetDefaultObject(): FractureToolSetInitialDynamicState;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureToolSetInitialDynamicState;
	static C(Other: UObject | any): FractureToolSetInitialDynamicState;
}

declare class FractureRadialSettings extends FractureToolSettings { 
	Center: Vector;
	Normal: Vector;
	bPositionedByGizmo: boolean;
	Radius: number;
	AngularSteps: number;
	RadialSteps: number;
	AngleOffset: number;
	Variability: number;
	static Load(ResourceName: string): FractureRadialSettings;
	static Find(Outer: UObject, ResourceName: string): FractureRadialSettings;
	static GetDefaultObject(): FractureRadialSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureRadialSettings;
	static C(Other: UObject | any): FractureRadialSettings;
}

declare class FractureToolRadial extends FractureToolVoronoiCutterBase { 
	RadialSettings: FractureRadialSettings;
	GizmoSettings: FractureTransformGizmoSettings;
	static Load(ResourceName: string): FractureToolRadial;
	static Find(Outer: UObject, ResourceName: string): FractureToolRadial;
	static GetDefaultObject(): FractureToolRadial;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureToolRadial;
	static C(Other: UObject | any): FractureToolRadial;
}

declare class FractureRecomputeNormalsSettings extends FractureToolSettings { 
	bShowNormals: boolean;
	bShowTangents: boolean;
	Length: number;
	bOnlyTangents: boolean;
	bRecomputeSharpEdges: boolean;
	SharpEdgeAngleThreshold: number;
	bOnlyInternalSurfaces: boolean;
	static Load(ResourceName: string): FractureRecomputeNormalsSettings;
	static Find(Outer: UObject, ResourceName: string): FractureRecomputeNormalsSettings;
	static GetDefaultObject(): FractureRecomputeNormalsSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureRecomputeNormalsSettings;
	static C(Other: UObject | any): FractureRecomputeNormalsSettings;
}

declare class FractureToolRecomputeNormals extends FractureToolCutterBase { 
	NormalsSettings: FractureRecomputeNormalsSettings;
	static Load(ResourceName: string): FractureToolRecomputeNormals;
	static Find(Outer: UObject, ResourceName: string): FractureToolRecomputeNormals;
	static GetDefaultObject(): FractureToolRecomputeNormals;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureToolRecomputeNormals;
	static C(Other: UObject | any): FractureToolRecomputeNormals;
}

declare class FractureResampleSettings extends FractureToolSettings { 
	bOnlyShowAddedPoints: boolean;
	static Load(ResourceName: string): FractureResampleSettings;
	static Find(Outer: UObject, ResourceName: string): FractureResampleSettings;
	static GetDefaultObject(): FractureResampleSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureResampleSettings;
	static C(Other: UObject | any): FractureResampleSettings;
}

declare class FractureToolResample extends FractureToolCutterBase { 
	ResampleSettings: FractureResampleSettings;
	static Load(ResourceName: string): FractureToolResample;
	static Find(Outer: UObject, ResourceName: string): FractureToolResample;
	static GetDefaultObject(): FractureToolResample;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureToolResample;
	static C(Other: UObject | any): FractureToolResample;
}

declare type EMouseSelectionMethod = 'RectSelect' | 'StandardSelect' | 'EMouseSelectionMethod_MAX';
declare var EMouseSelectionMethod : { RectSelect:'RectSelect',StandardSelect:'StandardSelect',EMouseSelectionMethod_MAX:'EMouseSelectionMethod_MAX', };
declare type EVolumeSelectionMethod = 'CubeRootOfVolume' | 'RelativeToWhole' | 'RelativeToLargest' | 'EVolumeSelectionMethod_MAX';
declare var EVolumeSelectionMethod : { CubeRootOfVolume:'CubeRootOfVolume',RelativeToWhole:'RelativeToWhole',RelativeToLargest:'RelativeToLargest',EVolumeSelectionMethod_MAX:'EVolumeSelectionMethod_MAX', };
declare type ESelectionOperation = 'Replace' | 'Add' | 'Remove' | 'ESelectionOperation_MAX';
declare var ESelectionOperation : { Replace:'Replace',Add:'Add',Remove:'Remove',ESelectionOperation_MAX:'ESelectionOperation_MAX', };
declare class FractureSelectionSettings extends FractureToolSettings { 
	MouseSelectionMethod: EMouseSelectionMethod;
	VolumeSelectionMethod: EVolumeSelectionMethod;
	SelectionOperation: ESelectionOperation;
	MinVolume: any;
	MaxVolume: any;
	MinVolumeFrac: any;
	MaxVolumeFrac: any;
	static Load(ResourceName: string): FractureSelectionSettings;
	static Find(Outer: UObject, ResourceName: string): FractureSelectionSettings;
	static GetDefaultObject(): FractureSelectionSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureSelectionSettings;
	static C(Other: UObject | any): FractureSelectionSettings;
}

declare class RectangleMarqueeManager extends UObject { 
	bUseExternalClickDragBehavior: boolean;
	OnDragRectangleChangedDeferredThreshold: any;
	ClickDragBehavior: ClickDragInputBehavior;
	static Load(ResourceName: string): RectangleMarqueeManager;
	static Find(Outer: UObject, ResourceName: string): RectangleMarqueeManager;
	static GetDefaultObject(): RectangleMarqueeManager;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RectangleMarqueeManager;
	static C(Other: UObject | any): RectangleMarqueeManager;
}

declare class FractureToolSelection extends FractureToolCutterBase { 
	SelectionBehaviorSet: InputBehaviorSet;
	SelectionBehaviorSource: LocalInputBehaviorSource;
	RectangleMarqueeManager: RectangleMarqueeManager;
	UsedToolsContext: InteractiveToolsContext;
	SelectionSettings: FractureSelectionSettings;
	static Load(ResourceName: string): FractureToolSelection;
	static Find(Outer: UObject, ResourceName: string): FractureToolSelection;
	static GetDefaultObject(): FractureToolSelection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureToolSelection;
	static C(Other: UObject | any): FractureToolSelection;
}

declare class FractureToolSelectAll extends FractureActionTool { 
	static Load(ResourceName: string): FractureToolSelectAll;
	static Find(Outer: UObject, ResourceName: string): FractureToolSelectAll;
	static GetDefaultObject(): FractureToolSelectAll;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureToolSelectAll;
	static C(Other: UObject | any): FractureToolSelectAll;
}

declare class FractureToolSelectNone extends FractureToolSelectAll { 
	static Load(ResourceName: string): FractureToolSelectNone;
	static Find(Outer: UObject, ResourceName: string): FractureToolSelectNone;
	static GetDefaultObject(): FractureToolSelectNone;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureToolSelectNone;
	static C(Other: UObject | any): FractureToolSelectNone;
}

declare class FractureToolSelectNeighbors extends FractureToolSelectAll { 
	static Load(ResourceName: string): FractureToolSelectNeighbors;
	static Find(Outer: UObject, ResourceName: string): FractureToolSelectNeighbors;
	static GetDefaultObject(): FractureToolSelectNeighbors;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureToolSelectNeighbors;
	static C(Other: UObject | any): FractureToolSelectNeighbors;
}

declare class FractureToolSelectParent extends FractureToolSelectAll { 
	static Load(ResourceName: string): FractureToolSelectParent;
	static Find(Outer: UObject, ResourceName: string): FractureToolSelectParent;
	static GetDefaultObject(): FractureToolSelectParent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureToolSelectParent;
	static C(Other: UObject | any): FractureToolSelectParent;
}

declare class FractureToolSelectChildren extends FractureToolSelectAll { 
	static Load(ResourceName: string): FractureToolSelectChildren;
	static Find(Outer: UObject, ResourceName: string): FractureToolSelectChildren;
	static GetDefaultObject(): FractureToolSelectChildren;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureToolSelectChildren;
	static C(Other: UObject | any): FractureToolSelectChildren;
}

declare class FractureToolSelectSiblings extends FractureToolSelectAll { 
	static Load(ResourceName: string): FractureToolSelectSiblings;
	static Find(Outer: UObject, ResourceName: string): FractureToolSelectSiblings;
	static GetDefaultObject(): FractureToolSelectSiblings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureToolSelectSiblings;
	static C(Other: UObject | any): FractureToolSelectSiblings;
}

declare class FractureToolSelectAllInLevel extends FractureToolSelectAll { 
	static Load(ResourceName: string): FractureToolSelectAllInLevel;
	static Find(Outer: UObject, ResourceName: string): FractureToolSelectAllInLevel;
	static GetDefaultObject(): FractureToolSelectAllInLevel;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureToolSelectAllInLevel;
	static C(Other: UObject | any): FractureToolSelectAllInLevel;
}

declare class FractureToolSelectInvert extends FractureToolSelectAll { 
	static Load(ResourceName: string): FractureToolSelectInvert;
	static Find(Outer: UObject, ResourceName: string): FractureToolSelectInvert;
	static GetDefaultObject(): FractureToolSelectInvert;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureToolSelectInvert;
	static C(Other: UObject | any): FractureToolSelectInvert;
}

declare class FractureSliceSettings extends FractureToolSettings { 
	SlicesX: number;
	SlicesY: number;
	SlicesZ: number;
	SliceAngleVariation: number;
	SliceOffsetVariation: number;
	static Load(ResourceName: string): FractureSliceSettings;
	static Find(Outer: UObject, ResourceName: string): FractureSliceSettings;
	static GetDefaultObject(): FractureSliceSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureSliceSettings;
	static C(Other: UObject | any): FractureSliceSettings;
}

declare class FractureToolSlice extends FractureToolCutterBase { 
	SliceSettings: FractureSliceSettings;
	static Load(ResourceName: string): FractureToolSlice;
	static Find(Outer: UObject, ResourceName: string): FractureToolSlice;
	static GetDefaultObject(): FractureToolSlice;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureToolSlice;
	static C(Other: UObject | any): FractureToolSlice;
}

declare class FractureUniformSettings extends FractureToolSettings { 
	NumberVoronoiSitesMin: number;
	NumberVoronoiSitesMax: number;
	static Load(ResourceName: string): FractureUniformSettings;
	static Find(Outer: UObject, ResourceName: string): FractureUniformSettings;
	static GetDefaultObject(): FractureUniformSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureUniformSettings;
	static C(Other: UObject | any): FractureUniformSettings;
}

declare class FractureToolUniform extends FractureToolVoronoiCutterBase { 
	UniformSettings: FractureUniformSettings;
	static Load(ResourceName: string): FractureToolUniform;
	static Find(Outer: UObject, ResourceName: string): FractureToolUniform;
	static GetDefaultObject(): FractureToolUniform;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureToolUniform;
	static C(Other: UObject | any): FractureToolUniform;
}

declare type ETargetMaterialIDs = 'OddIDs' | 'OddAndSelectedIDs' | 'SelectedIDs' | 'AllIDs' | 'ETargetMaterialIDs_MAX';
declare var ETargetMaterialIDs : { OddIDs:'OddIDs',OddAndSelectedIDs:'OddAndSelectedIDs',SelectedIDs:'SelectedIDs',AllIDs:'AllIDs',ETargetMaterialIDs_MAX:'ETargetMaterialIDs_MAX', };
declare type EAutoUVTextureResolution = 'Resolution16' | 'Resolution32' | 'Resolution64' | 'Resolution128' | 'Resolution256' | 'Resolution512' | 'Resolution1024' | 'Resolution2048' | 'Resolution4096' | 'Resolution8192' | 'EAutoUVTextureResolution_MAX';
declare var EAutoUVTextureResolution : { Resolution16:'Resolution16',Resolution32:'Resolution32',Resolution64:'Resolution64',Resolution128:'Resolution128',Resolution256:'Resolution256',Resolution512:'Resolution512',Resolution1024:'Resolution1024',Resolution2048:'Resolution2048',Resolution4096:'Resolution4096',Resolution8192:'Resolution8192',EAutoUVTextureResolution_MAX:'EAutoUVTextureResolution_MAX', };
declare type ETextureType = 'ThicknessAndSurfaceAttributes' | 'SpatialGradients' | 'Normals' | 'ETextureType_MAX';
declare var ETextureType : { ThicknessAndSurfaceAttributes:'ThicknessAndSurfaceAttributes',SpatialGradients:'SpatialGradients',Normals:'Normals',ETextureType_MAX:'ETextureType_MAX', };
declare class FractureAutoUVSettings extends FractureToolSettings { 
	UVChannel: string;
	UVChannelNamesList: string[];
	ProjectionScale: Vector;
	TargetMaterialIDs: ETargetMaterialIDs;
	MaterialIDs: number[];
	Resolution: EAutoUVTextureResolution;
	GutterSize: number;
	Result: Texture2D;
	bPromptToSave: boolean;
	bReplaceExisting: boolean;
	BakeTextureType: ETextureType;
	bDistToOuter: boolean;
	bAmbientOcclusion: boolean;
	bSmoothedCurvature: boolean;
	MaxDistance: any;
	OcclusionRays: number;
	OcclusionBlurRadius: any;
	CurvatureBlurRadius: any;
	VoxelResolution: number;
	SmoothingIterations: number;
	ThicknessFactor: any;
	MaxCurvature: any;
	static Load(ResourceName: string): FractureAutoUVSettings;
	static Find(Outer: UObject, ResourceName: string): FractureAutoUVSettings;
	static GetDefaultObject(): FractureAutoUVSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureAutoUVSettings;
	LayoutUVs(): void;
	GetUVChannelNamesFunc(): string[];
	DisableBoneColors(): void;
	DeleteUVChannel(): void;
	BoxProjectUVs(): void;
	BakeTexture(): void;
	AddUVChannel(): void;
	static C(Other: UObject | any): FractureAutoUVSettings;
}

declare class FractureToolAutoUV extends FractureModalTool { 
	AutoUVSettings: FractureAutoUVSettings;
	static Load(ResourceName: string): FractureToolAutoUV;
	static Find(Outer: UObject, ResourceName: string): FractureToolAutoUV;
	static GetDefaultObject(): FractureToolAutoUV;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): FractureToolAutoUV;
	static C(Other: UObject | any): FractureToolAutoUV;
}

declare type EInspectedAttributeEnum = 'Volume' | 'Level' | 'InitialDynamicState' | 'Size' | 'EInspectedAttributeEnum_MAX';
declare var EInspectedAttributeEnum : { Volume:'Volume',Level:'Level',InitialDynamicState:'InitialDynamicState',Size:'Size',EInspectedAttributeEnum_MAX:'EInspectedAttributeEnum_MAX', };
declare class HistogramSettings extends UObject { 
	InspectedAttribute: EInspectedAttributeEnum;
	bSorted: boolean;
	bShowClusters: boolean;
	bShowRigids: boolean;
	bShowEmbedded: boolean;
	static Load(ResourceName: string): HistogramSettings;
	static Find(Outer: UObject, ResourceName: string): HistogramSettings;
	static GetDefaultObject(): HistogramSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): HistogramSettings;
	static C(Other: UObject | any): HistogramSettings;
}

declare type EOutlinerItemNameEnum = 'BoneName' | 'BoneIndex' | 'EOutlinerItemNameEnum_MAX';
declare var EOutlinerItemNameEnum : { BoneName:'BoneName',BoneIndex:'BoneIndex',EOutlinerItemNameEnum_MAX:'EOutlinerItemNameEnum_MAX', };
declare class OutlinerSettings extends UObject { 
	ItemText: EOutlinerItemNameEnum;
	static Load(ResourceName: string): OutlinerSettings;
	static Find(Outer: UObject, ResourceName: string): OutlinerSettings;
	static GetDefaultObject(): OutlinerSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OutlinerSettings;
	static C(Other: UObject | any): OutlinerSettings;
}

declare type EDataSourceTypeEnum = 'ChaosNiagara_DataSourceType_Collision' | 'ChaosNiagara_DataSourceType_Breaking' | 'ChaosNiagara_DataSourceType_Trailing' | 'ChaosNiagara_Max';
declare var EDataSourceTypeEnum : { ChaosNiagara_DataSourceType_Collision:'ChaosNiagara_DataSourceType_Collision',ChaosNiagara_DataSourceType_Breaking:'ChaosNiagara_DataSourceType_Breaking',ChaosNiagara_DataSourceType_Trailing:'ChaosNiagara_DataSourceType_Trailing',ChaosNiagara_Max:'ChaosNiagara_Max', };
declare type ELocationFilteringModeEnum = 'ChaosNiagara_LocationFilteringMode_Inclusive' | 'ChaosNiagara_LocationFilteringMode_Exclusive' | 'ChaosNiagara_Max';
declare var ELocationFilteringModeEnum : { ChaosNiagara_LocationFilteringMode_Inclusive:'ChaosNiagara_LocationFilteringMode_Inclusive',ChaosNiagara_LocationFilteringMode_Exclusive:'ChaosNiagara_LocationFilteringMode_Exclusive',ChaosNiagara_Max:'ChaosNiagara_Max', };
declare type ELocationXToSpawnEnum = 'ChaosNiagara_LocationXToSpawn_None' | 'ChaosNiagara_LocationXToSpawn_Min' | 'ChaosNiagara_LocationXToSpawn_Max' | 'ChaosNiagara_LocationXToSpawn_MinMax' | 'ChaosNiagara_Max';
declare var ELocationXToSpawnEnum : { ChaosNiagara_LocationXToSpawn_None:'ChaosNiagara_LocationXToSpawn_None',ChaosNiagara_LocationXToSpawn_Min:'ChaosNiagara_LocationXToSpawn_Min',ChaosNiagara_LocationXToSpawn_Max:'ChaosNiagara_LocationXToSpawn_Max',ChaosNiagara_LocationXToSpawn_MinMax:'ChaosNiagara_LocationXToSpawn_MinMax',ChaosNiagara_Max:'ChaosNiagara_Max', };
declare type ELocationYToSpawnEnum = 'ChaosNiagara_LocationYToSpawn_None' | 'ChaosNiagara_LocationYToSpawn_Min' | 'ChaosNiagara_LocationYToSpawn_Max' | 'ChaosNiagara_LocationYToSpawn_MinMax' | 'ChaosNiagara_Max';
declare var ELocationYToSpawnEnum : { ChaosNiagara_LocationYToSpawn_None:'ChaosNiagara_LocationYToSpawn_None',ChaosNiagara_LocationYToSpawn_Min:'ChaosNiagara_LocationYToSpawn_Min',ChaosNiagara_LocationYToSpawn_Max:'ChaosNiagara_LocationYToSpawn_Max',ChaosNiagara_LocationYToSpawn_MinMax:'ChaosNiagara_LocationYToSpawn_MinMax',ChaosNiagara_Max:'ChaosNiagara_Max', };
declare type ELocationZToSpawnEnum = 'ChaosNiagara_LocationZToSpawn_None' | 'ChaosNiagara_LocationZToSpawn_Min' | 'ChaosNiagara_LocationZToSpawn_Max' | 'ChaosNiagara_LocationZToSpawn_MinMax' | 'ChaosNiagara_Max';
declare var ELocationZToSpawnEnum : { ChaosNiagara_LocationZToSpawn_None:'ChaosNiagara_LocationZToSpawn_None',ChaosNiagara_LocationZToSpawn_Min:'ChaosNiagara_LocationZToSpawn_Min',ChaosNiagara_LocationZToSpawn_Max:'ChaosNiagara_LocationZToSpawn_Max',ChaosNiagara_LocationZToSpawn_MinMax:'ChaosNiagara_LocationZToSpawn_MinMax',ChaosNiagara_Max:'ChaosNiagara_Max', };
declare type EDataSortTypeEnum = 'ChaosNiagara_DataSortType_NoSorting' | 'ChaosNiagara_DataSortType_RandomShuffle' | 'ChaosNiagara_DataSortType_SortByMassMaxToMin' | 'ChaosNiagara_DataSortType_SortByMassMinToMax' | 'ChaosNiagara_Max';
declare var EDataSortTypeEnum : { ChaosNiagara_DataSortType_NoSorting:'ChaosNiagara_DataSortType_NoSorting',ChaosNiagara_DataSortType_RandomShuffle:'ChaosNiagara_DataSortType_RandomShuffle',ChaosNiagara_DataSortType_SortByMassMaxToMin:'ChaosNiagara_DataSortType_SortByMassMaxToMin',ChaosNiagara_DataSortType_SortByMassMinToMax:'ChaosNiagara_DataSortType_SortByMassMinToMax',ChaosNiagara_Max:'ChaosNiagara_Max', };
declare type ERandomVelocityGenerationTypeEnum = 'ChaosNiagara_RandomVelocityGenerationType_RandomDistribution' | 'ChaosNiagara_RandomVelocityGenerationType_RandomDistributionWithStreamers' | 'ChaosNiagara_RandomVelocityGenerationType_CollisionNormalBased' | 'ChaosNiagara_Max';
declare var ERandomVelocityGenerationTypeEnum : { ChaosNiagara_RandomVelocityGenerationType_RandomDistribution:'ChaosNiagara_RandomVelocityGenerationType_RandomDistribution',ChaosNiagara_RandomVelocityGenerationType_RandomDistributionWithStreamers:'ChaosNiagara_RandomVelocityGenerationType_RandomDistributionWithStreamers',ChaosNiagara_RandomVelocityGenerationType_CollisionNormalBased:'ChaosNiagara_RandomVelocityGenerationType_CollisionNormalBased',ChaosNiagara_Max:'ChaosNiagara_Max', };
declare type EDebugTypeEnum = 'ChaosNiagara_DebugType_NoDebug' | 'ChaosNiagara_DebugType_ColorBySolver' | 'ChaosNiagara_DebugType_ColorByParticleIndex' | 'ChaosNiagara_Max';
declare var EDebugTypeEnum : { ChaosNiagara_DebugType_NoDebug:'ChaosNiagara_DebugType_NoDebug',ChaosNiagara_DebugType_ColorBySolver:'ChaosNiagara_DebugType_ColorBySolver',ChaosNiagara_DebugType_ColorByParticleIndex:'ChaosNiagara_DebugType_ColorByParticleIndex',ChaosNiagara_Max:'ChaosNiagara_Max', };
declare class NiagaraDataInterfaceChaosDestruction extends NiagaraDataInterface { 
	ChaosSolverActorSet: any;
	DataSourceType: EDataSourceTypeEnum;
	DataProcessFrequency: number;
	MaxNumberOfDataEntriesToSpawn: number;
	DoSpawn: boolean;
	SpawnMultiplierMinMax: Vector2D;
	SpawnChance: number;
	ImpulseToSpawnMinMax: Vector2D;
	SpeedToSpawnMinMax: Vector2D;
	MassToSpawnMinMax: Vector2D;
	ExtentMinToSpawnMinMax: Vector2D;
	ExtentMaxToSpawnMinMax: Vector2D;
	VolumeToSpawnMinMax: Vector2D;
	SolverTimeToSpawnMinMax: Vector2D;
	SurfaceTypeToSpawn: number;
	LocationFilteringMode: ELocationFilteringModeEnum;
	LocationXToSpawn: ELocationXToSpawnEnum;
	LocationXToSpawnMinMax: Vector2D;
	LocationYToSpawn: ELocationYToSpawnEnum;
	LocationYToSpawnMinMax: Vector2D;
	LocationZToSpawn: ELocationZToSpawnEnum;
	LocationZToSpawnMinMax: Vector2D;
	TrailMinSpeedToSpawn: number;
	DataSortingType: EDataSortTypeEnum;
	bGetExternalCollisionData: boolean;
	DoSpatialHash: boolean;
	SpatialHashVolumeMin: Vector;
	SpatialHashVolumeMax: Vector;
	SpatialHashVolumeCellSize: Vector;
	MaxDataPerCell: number;
	bApplyMaterialsFilter: boolean;
	ChaosBreakingMaterialSet: any;
	bGetExternalBreakingData: boolean;
	bGetExternalTrailingData: boolean;
	RandomPositionMagnitudeMinMax: Vector2D;
	InheritedVelocityMultiplier: number;
	RandomVelocityGenerationType: ERandomVelocityGenerationTypeEnum;
	RandomVelocityMagnitudeMinMax: Vector2D;
	SpreadAngleMax: number;
	VelocityOffsetMin: Vector;
	VelocityOffsetMax: Vector;
	FinalVelocityMagnitudeMinMax: Vector2D;
	MaxLatency: number;
	DebugType: EDebugTypeEnum;
	LastSpawnedPointID: number;
	LastSpawnTime: number;
	SolverTime: number;
	TimeStampOfLastProcessedData: number;
	static Load(ResourceName: string): NiagaraDataInterfaceChaosDestruction;
	static Find(Outer: UObject, ResourceName: string): NiagaraDataInterfaceChaosDestruction;
	static GetDefaultObject(): NiagaraDataInterfaceChaosDestruction;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NiagaraDataInterfaceChaosDestruction;
	static C(Other: UObject | any): NiagaraDataInterfaceChaosDestruction;
}

declare class NiagaraDataInterfaceGeometryCollection extends NiagaraDataInterface { 
	GeometryCollectionActor: GeometryCollectionActor;
	static Load(ResourceName: string): NiagaraDataInterfaceGeometryCollection;
	static Find(Outer: UObject, ResourceName: string): NiagaraDataInterfaceGeometryCollection;
	static GetDefaultObject(): NiagaraDataInterfaceGeometryCollection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NiagaraDataInterfaceGeometryCollection;
	static C(Other: UObject | any): NiagaraDataInterfaceGeometryCollection;
}

declare class NiagaraDataInterfacePhysicsField extends NiagaraDataInterface { 
	static Load(ResourceName: string): NiagaraDataInterfacePhysicsField;
	static Find(Outer: UObject, ResourceName: string): NiagaraDataInterfacePhysicsField;
	static GetDefaultObject(): NiagaraDataInterfacePhysicsField;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NiagaraDataInterfacePhysicsField;
	static C(Other: UObject | any): NiagaraDataInterfacePhysicsField;
}

declare class ActorFactoryChaosSolver extends ActorFactory { 
	static Load(ResourceName: string): ActorFactoryChaosSolver;
	static Find(Outer: UObject, ResourceName: string): ActorFactoryChaosSolver;
	static GetDefaultObject(): ActorFactoryChaosSolver;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorFactoryChaosSolver;
	static C(Other: UObject | any): ActorFactoryChaosSolver;
}

declare class ChaosSolverFactory extends Factory { 
	static Load(ResourceName: string): ChaosSolverFactory;
	static Find(Outer: UObject, ResourceName: string): ChaosSolverFactory;
	static GetDefaultObject(): ChaosSolverFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ChaosSolverFactory;
	static C(Other: UObject | any): ChaosSolverFactory;
}

declare class MovieSceneGeometryCollectionParams { 
	GeometryCollectionCache: SoftObjectPath;
	StartFrameOffset: FrameNumber;
	EndFrameOffset: FrameNumber;
	PlayRate: number;
	clone() : MovieSceneGeometryCollectionParams;
	static C(Other: UObject | any): MovieSceneGeometryCollectionParams;
}

declare class MovieSceneGeometryCollectionSection extends MovieSceneSection { 
	Params: MovieSceneGeometryCollectionParams;
	static Load(ResourceName: string): MovieSceneGeometryCollectionSection;
	static Find(Outer: UObject, ResourceName: string): MovieSceneGeometryCollectionSection;
	static GetDefaultObject(): MovieSceneGeometryCollectionSection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneGeometryCollectionSection;
	static C(Other: UObject | any): MovieSceneGeometryCollectionSection;
}

declare class MovieSceneGeometryCollectionTrack extends MovieSceneNameableTrack { 
	AnimationSections: MovieSceneSection[];
	static Load(ResourceName: string): MovieSceneGeometryCollectionTrack;
	static Find(Outer: UObject, ResourceName: string): MovieSceneGeometryCollectionTrack;
	static GetDefaultObject(): MovieSceneGeometryCollectionTrack;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneGeometryCollectionTrack;
	static C(Other: UObject | any): MovieSceneGeometryCollectionTrack;
}

declare type EAlembicSamplingType = 'PerFrame' | 'PerXFrames' | 'PerTimeStep' | 'EAlembicSamplingType_MAX';
declare var EAlembicSamplingType : { PerFrame:'PerFrame',PerXFrames:'PerXFrames',PerTimeStep:'PerTimeStep',EAlembicSamplingType_MAX:'EAlembicSamplingType_MAX', };
declare class AbcSamplingSettings { 
	SamplingType: EAlembicSamplingType;
	FrameSteps: number;
	TimeSteps: number;
	FrameStart: number;
	FrameEnd: number;
	bSkipEmpty: boolean;
	clone() : AbcSamplingSettings;
	static C(Other: UObject | any): AbcSamplingSettings;
}

declare class AbcNormalGenerationSettings { 
	bForceOneSmoothingGroupPerObject: boolean;
	HardEdgeAngleThreshold: number;
	bRecomputeNormals: boolean;
	bIgnoreDegenerateTriangles: boolean;
	bSkipComputingTangents: boolean;
	clone() : AbcNormalGenerationSettings;
	static C(Other: UObject | any): AbcNormalGenerationSettings;
}

declare class AbcMaterialSettings { 
	bCreateMaterials: boolean;
	bFindMaterials: boolean;
	clone() : AbcMaterialSettings;
	static C(Other: UObject | any): AbcMaterialSettings;
}

declare type EBaseCalculationType = 'None' | 'PercentageBased' | 'FixedNumber' | 'NoCompression' | 'EBaseCalculationType_MAX';
declare var EBaseCalculationType : { None:'None',PercentageBased:'PercentageBased',FixedNumber:'FixedNumber',NoCompression:'NoCompression',EBaseCalculationType_MAX:'EBaseCalculationType_MAX', };
declare class AbcCompressionSettings { 
	bMergeMeshes: boolean;
	bBakeMatrixAnimation: boolean;
	BaseCalculationType: EBaseCalculationType;
	PercentageOfTotalBases: number;
	MaxNumberOfBases: number;
	MinimumNumberOfVertexInfluencePercentage: number;
	clone() : AbcCompressionSettings;
	static C(Other: UObject | any): AbcCompressionSettings;
}

declare class AbcStaticMeshSettings { 
	bMergeMeshes: boolean;
	bPropagateMatrixTransformations: boolean;
	bGenerateLightmapUVs: boolean;
	clone() : AbcStaticMeshSettings;
	static C(Other: UObject | any): AbcStaticMeshSettings;
}

declare type EAbcGeometryCacheMotionVectorsImport = 'NoMotionVectors' | 'ImportAbcVelocitiesAsMotionVectors' | 'CalculateMotionVectorsDuringImport' | 'EAbcGeometryCacheMotionVectorsImport_MAX';
declare var EAbcGeometryCacheMotionVectorsImport : { NoMotionVectors:'NoMotionVectors',ImportAbcVelocitiesAsMotionVectors:'ImportAbcVelocitiesAsMotionVectors',CalculateMotionVectorsDuringImport:'CalculateMotionVectorsDuringImport',EAbcGeometryCacheMotionVectorsImport_MAX:'EAbcGeometryCacheMotionVectorsImport_MAX', };
declare class AbcGeometryCacheSettings { 
	bFlattenTracks: boolean;
	bStoreImportedVertexNumbers: boolean;
	bApplyConstantTopologyOptimizations: boolean;
	bCalculateMotionVectorsDuringImport: boolean;
	MotionVectors: EAbcGeometryCacheMotionVectorsImport;
	bOptimizeIndexBuffers: boolean;
	CompressedPositionPrecision: number;
	CompressedTextureCoordinatesNumberOfBits: number;
	clone() : AbcGeometryCacheSettings;
	static C(Other: UObject | any): AbcGeometryCacheSettings;
}

declare type EAbcConversionPreset = 'Maya' | 'Max' | 'Custom' | 'EAbcConversionPreset_MAX';
declare var EAbcConversionPreset : { Maya:'Maya',Max:'Max',Custom:'Custom',EAbcConversionPreset_MAX:'EAbcConversionPreset_MAX', };
declare class AbcConversionSettings { 
	Preset: EAbcConversionPreset;
	bFlipU: boolean;
	bFlipV: boolean;
	Scale: Vector;
	Rotation: Vector;
	clone() : AbcConversionSettings;
	static C(Other: UObject | any): AbcConversionSettings;
}

declare class AbcAssetImportData extends AssetImportData { 
	TrackNames: string[];
	SamplingSettings: AbcSamplingSettings;
	NormalGenerationSettings: AbcNormalGenerationSettings;
	MaterialSettings: AbcMaterialSettings;
	CompressionSettings: AbcCompressionSettings;
	StaticMeshSettings: AbcStaticMeshSettings;
	GeometryCacheSettings: AbcGeometryCacheSettings;
	ConversionSettings: AbcConversionSettings;
	static Load(ResourceName: string): AbcAssetImportData;
	static Find(Outer: UObject, ResourceName: string): AbcAssetImportData;
	static GetDefaultObject(): AbcAssetImportData;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AbcAssetImportData;
	static C(Other: UObject | any): AbcAssetImportData;
}

declare type EAlembicImportType = 'StaticMesh' | 'GeometryCache' | 'Skeletal' | 'EAlembicImportType_MAX';
declare var EAlembicImportType : { StaticMesh:'StaticMesh',GeometryCache:'GeometryCache',Skeletal:'Skeletal',EAlembicImportType_MAX:'EAlembicImportType_MAX', };
declare class AbcImportSettings extends UObject { 
	ImportType: EAlembicImportType;
	SamplingSettings: AbcSamplingSettings;
	NormalGenerationSettings: AbcNormalGenerationSettings;
	MaterialSettings: AbcMaterialSettings;
	CompressionSettings: AbcCompressionSettings;
	StaticMeshSettings: AbcStaticMeshSettings;
	GeometryCacheSettings: AbcGeometryCacheSettings;
	ConversionSettings: AbcConversionSettings;
	static Load(ResourceName: string): AbcImportSettings;
	static Find(Outer: UObject, ResourceName: string): AbcImportSettings;
	static GetDefaultObject(): AbcImportSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AbcImportSettings;
	static C(Other: UObject | any): AbcImportSettings;
}

declare class AlembicTestCommandlet extends Commandlet { 
	static Load(ResourceName: string): AlembicTestCommandlet;
	static Find(Outer: UObject, ResourceName: string): AlembicTestCommandlet;
	static GetDefaultObject(): AlembicTestCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AlembicTestCommandlet;
	static C(Other: UObject | any): AlembicTestCommandlet;
}

declare class AlembicImportFactory extends Factory { 
	ImportSettings: AbcImportSettings;
	bShowOption: boolean;
	static Load(ResourceName: string): AlembicImportFactory;
	static Find(Outer: UObject, ResourceName: string): AlembicImportFactory;
	static GetDefaultObject(): AlembicImportFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AlembicImportFactory;
	static C(Other: UObject | any): AlembicImportFactory;
}

declare class ActorFactoryGeometryCache extends ActorFactory { 
	static Load(ResourceName: string): ActorFactoryGeometryCache;
	static Find(Outer: UObject, ResourceName: string): ActorFactoryGeometryCache;
	static GetDefaultObject(): ActorFactoryGeometryCache;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ActorFactoryGeometryCache;
	static C(Other: UObject | any): ActorFactoryGeometryCache;
}

declare class GeometryCacheThumbnailRenderer extends DefaultSizedThumbnailRenderer { 
	static Load(ResourceName: string): GeometryCacheThumbnailRenderer;
	static Find(Outer: UObject, ResourceName: string): GeometryCacheThumbnailRenderer;
	static GetDefaultObject(): GeometryCacheThumbnailRenderer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GeometryCacheThumbnailRenderer;
	static C(Other: UObject | any): GeometryCacheThumbnailRenderer;
}

declare class WebSocketConnection extends NetConnection { 
	static Load(ResourceName: string): WebSocketConnection;
	static Find(Outer: UObject, ResourceName: string): WebSocketConnection;
	static GetDefaultObject(): WebSocketConnection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WebSocketConnection;
	static C(Other: UObject | any): WebSocketConnection;
}

declare class WebSocketNetDriver extends NetDriver { 
	WebSocketPort: number;
	static Load(ResourceName: string): WebSocketNetDriver;
	static Find(Outer: UObject, ResourceName: string): WebSocketNetDriver;
	static GetDefaultObject(): WebSocketNetDriver;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WebSocketNetDriver;
	static C(Other: UObject | any): WebSocketNetDriver;
}

declare class ImgMediaSettings extends UObject { 
	DefaultFrameRate: FrameRate;
	CacheBehindPercentage: number;
	CacheSizeGB: number;
	CacheThreads: number;
	CacheThreadStackSizeKB: number;
	GlobalCacheSizeGB: number;
	UseGlobalCache: boolean;
	ExrDecoderThreads: any;
	DefaultProxy: string;
	UseDefaultProxy: boolean;
	static Load(ResourceName: string): ImgMediaSettings;
	static Find(Outer: UObject, ResourceName: string): ImgMediaSettings;
	static GetDefaultObject(): ImgMediaSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ImgMediaSettings;
	static C(Other: UObject | any): ImgMediaSettings;
}

declare class ImgMediaSourceCustomizationSequenceProxy { 
	clone() : ImgMediaSourceCustomizationSequenceProxy;
	static C(Other: UObject | any): ImgMediaSourceCustomizationSequenceProxy;
}

declare class ImgMediaSource extends BaseMediaSource { 
	IsPathRelativeToProjectRoot: boolean;
	FrameRateOverride: FrameRate;
	ProxyOverride: string;
	bFillGapsInSequence: boolean;
	SequenceProxy: ImgMediaSourceCustomizationSequenceProxy;
	SequencePath: DirectoryPath;
	static Load(ResourceName: string): ImgMediaSource;
	static Find(Outer: UObject, ResourceName: string): ImgMediaSource;
	static GetDefaultObject(): ImgMediaSource;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ImgMediaSource;
	SetSequencePath(Path: string): void;
	SetMipLevelDistance(Distance: number): void;
	RemoveTargetObject(InActor: Actor): void;
	RemoveGlobalCamera(InActor: Actor): void;
	GetSequencePath(): string;
	GetProxies(OutProxies?: string[]): {OutProxies: string[]};
	AddTargetObject(InActor: Actor,Width: number): void;
	AddGlobalCamera(InActor: Actor): void;
	static C(Other: UObject | any): ImgMediaSource;
}

declare class MovieSceneMediaPlayerPropertySection extends MovieSceneSection { 
	MediaSource: MediaSource;
	bLoop: boolean;
	static Load(ResourceName: string): MovieSceneMediaPlayerPropertySection;
	static Find(Outer: UObject, ResourceName: string): MovieSceneMediaPlayerPropertySection;
	static GetDefaultObject(): MovieSceneMediaPlayerPropertySection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneMediaPlayerPropertySection;
	static C(Other: UObject | any): MovieSceneMediaPlayerPropertySection;
}

declare class MovieSceneMediaPlayerPropertyTrack extends MovieScenePropertyTrack { 
	static Load(ResourceName: string): MovieSceneMediaPlayerPropertyTrack;
	static Find(Outer: UObject, ResourceName: string): MovieSceneMediaPlayerPropertyTrack;
	static GetDefaultObject(): MovieSceneMediaPlayerPropertyTrack;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneMediaPlayerPropertyTrack;
	static C(Other: UObject | any): MovieSceneMediaPlayerPropertyTrack;
}

declare class MovieSceneMediaSection extends MovieSceneSection { 
	MediaSource: MediaSource;
	bLooping: boolean;
	StartFrameOffset: FrameNumber;
	MediaTexture: MediaTexture;
	MediaSoundComponent: MediaSoundComponent;
	bUseExternalMediaPlayer: boolean;
	ExternalMediaPlayer: MediaPlayer;
	ThumbnailReferenceOffset: number;
	static Load(ResourceName: string): MovieSceneMediaSection;
	static Find(Outer: UObject, ResourceName: string): MovieSceneMediaSection;
	static GetDefaultObject(): MovieSceneMediaSection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneMediaSection;
	static C(Other: UObject | any): MovieSceneMediaSection;
}

declare class MovieSceneMediaTrack extends MovieSceneNameableTrack { 
	MediaSections: MovieSceneSection[];
	static Load(ResourceName: string): MovieSceneMediaTrack;
	static Find(Outer: UObject, ResourceName: string): MovieSceneMediaTrack;
	static GetDefaultObject(): MovieSceneMediaTrack;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneMediaTrack;
	static C(Other: UObject | any): MovieSceneMediaTrack;
}

declare class SequencerToolsFunctionLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): SequencerToolsFunctionLibrary;
	static Find(Outer: UObject, ResourceName: string): SequencerToolsFunctionLibrary;
	static GetDefaultObject(): SequencerToolsFunctionLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SequencerToolsFunctionLibrary;
	static IsRenderingMovie(): boolean;
	static IsEventEndpointValid(InEndpoint: SequencerQuickBindingResult): boolean;
	static ImportLevelSequenceFBX(InWorld: World,InSequence: LevelSequence,InBindings: SequencerBindingProxy[],InImportFBXSettings: MovieSceneUserImportFBXSettings,InImportFilename: string): boolean;
	static ImportFBXToControlRig(World: World,InSequence: LevelSequence,ActorWithControlRigTrack: string,SelectedControlRigNames: string[],ImportFBXControlRigSettings: MovieSceneUserImportFBXControlRigSettings,ImportFilename: string): boolean;
	static GetObjectBindings(InWorld: World,InSequence: LevelSequence,InObject: UObject[],InRange: SequencerScriptingRange): SequencerBoundObjects[];
	static GetBoundObjects(InWorld: World,InSequence: LevelSequence,InBindings: SequencerBindingProxy[],InRange: SequencerScriptingRange): SequencerBoundObjects[];
	static ExportLevelSequenceFBX(InWorld: World,InSequence: LevelSequence,InBindings: SequencerBindingProxy[],InMasterTracks: MovieSceneTrack[],OverrideOptions: FbxExportOption,InFBXFileName: string): boolean;
	static ExportAnimSequence(World: World,Sequence: LevelSequence,AnimSequence: AnimSequence,ExportOption: AnimSeqExportOption,Binding: SequencerBindingProxy): boolean;
	static CreateQuickBinding(InSequence: MovieSceneSequence,InObject: UObject,InFunctionName: string,bCallInEditor: boolean): SequencerQuickBindingResult;
	static CreateEvent(InSequence: MovieSceneSequence,InSection: MovieSceneEventSectionBase,InEndpoint: SequencerQuickBindingResult,InPayload: string[]): MovieSceneEvent;
	static CancelMovieRender(): void;
	static C(Other: UObject | any): SequencerToolsFunctionLibrary;
}

declare class OnRenderMovieStopped__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnRenderMovieStopped__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnRenderMovieStopped__PythonCallable;
	static GetDefaultObject(): OnRenderMovieStopped__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnRenderMovieStopped__PythonCallable;
	static C(Other: UObject | any): OnRenderMovieStopped__PythonCallable;
}

declare class LayersBlueprintLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): LayersBlueprintLibrary;
	static Find(Outer: UObject, ResourceName: string): LayersBlueprintLibrary;
	static GetDefaultObject(): LayersBlueprintLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): LayersBlueprintLibrary;
	static RemoveActorFromLayer(InActor: Actor,Layer: ActorLayer): void;
	static GetActors(WorldContextObject: UObject,ActorLayer: ActorLayer): Actor[];
	static AddActorToLayer(InActor: Actor,Layer: ActorLayer): void;
	static C(Other: UObject | any): LayersBlueprintLibrary;
}

declare class AndroidPermissionCallbackProxy extends UObject { 
	OnPermissionsGrantedDynamicDelegate: UnrealEngineMulticastDelegate<(Permissions: string[], GrantResults: boolean[]) => void>;
	static Load(ResourceName: string): AndroidPermissionCallbackProxy;
	static Find(Outer: UObject, ResourceName: string): AndroidPermissionCallbackProxy;
	static GetDefaultObject(): AndroidPermissionCallbackProxy;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AndroidPermissionCallbackProxy;
	static C(Other: UObject | any): AndroidPermissionCallbackProxy;
}

declare class AndroidPermissionFunctionLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): AndroidPermissionFunctionLibrary;
	static Find(Outer: UObject, ResourceName: string): AndroidPermissionFunctionLibrary;
	static GetDefaultObject(): AndroidPermissionFunctionLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AndroidPermissionFunctionLibrary;
	static CheckPermission(permission: string): boolean;
	static AcquirePermissions(Permissions: string[]): AndroidPermissionCallbackProxy;
	static C(Other: UObject | any): AndroidPermissionFunctionLibrary;
}

declare class AndroidPermissionDynamicDelegate__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): AndroidPermissionDynamicDelegate__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): AndroidPermissionDynamicDelegate__PythonCallable;
	static GetDefaultObject(): AndroidPermissionDynamicDelegate__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AndroidPermissionDynamicDelegate__PythonCallable;
	static C(Other: UObject | any): AndroidPermissionDynamicDelegate__PythonCallable;
}

declare class AppleImageUtilsImageConversionResult { 
	Error: string;
	ImageData: number[];
	clone() : AppleImageUtilsImageConversionResult;
	static C(Other: UObject | any): AppleImageUtilsImageConversionResult;
}

declare type ETextureRotationDirection = 'None' | 'Left' | 'Right' | 'Down' | 'LeftMirrored' | 'RightMirrored' | 'DownMirrored' | 'UpMirrored' | 'ETextureRotationDirection_MAX';
declare var ETextureRotationDirection : { None:'None',Left:'Left',Right:'Right',Down:'Down',LeftMirrored:'LeftMirrored',RightMirrored:'RightMirrored',DownMirrored:'DownMirrored',UpMirrored:'UpMirrored',ETextureRotationDirection_MAX:'ETextureRotationDirection_MAX', };
declare class AppleImageUtilsBaseAsyncTaskBlueprintProxy extends UObject { 
	OnSuccess: UnrealEngineMulticastDelegate<(ConversionResult: AppleImageUtilsImageConversionResult) => void>;
	OnFailure: UnrealEngineMulticastDelegate<(ConversionResult: AppleImageUtilsImageConversionResult) => void>;
	ConversionResult: AppleImageUtilsImageConversionResult;
	static Load(ResourceName: string): AppleImageUtilsBaseAsyncTaskBlueprintProxy;
	static Find(Outer: UObject, ResourceName: string): AppleImageUtilsBaseAsyncTaskBlueprintProxy;
	static GetDefaultObject(): AppleImageUtilsBaseAsyncTaskBlueprintProxy;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AppleImageUtilsBaseAsyncTaskBlueprintProxy;
	static CreateProxyObjectForConvertToTIFF(SourceImage: Texture,bWantColor: boolean,bUseGpu: boolean,Scale: number,Rotate: ETextureRotationDirection): AppleImageUtilsBaseAsyncTaskBlueprintProxy;
	static CreateProxyObjectForConvertToPNG(SourceImage: Texture,bWantColor: boolean,bUseGpu: boolean,Scale: number,Rotate: ETextureRotationDirection): AppleImageUtilsBaseAsyncTaskBlueprintProxy;
	static CreateProxyObjectForConvertToJPEG(SourceImage: Texture,Quality: number,bWantColor: boolean,bUseGpu: boolean,Scale: number,Rotate: ETextureRotationDirection): AppleImageUtilsBaseAsyncTaskBlueprintProxy;
	static CreateProxyObjectForConvertToHEIF(SourceImage: Texture,Quality: number,bWantColor: boolean,bUseGpu: boolean,Scale: number,Rotate: ETextureRotationDirection): AppleImageUtilsBaseAsyncTaskBlueprintProxy;
	static C(Other: UObject | any): AppleImageUtilsBaseAsyncTaskBlueprintProxy;
}

declare class AppleImageInterface extends Interface { 
	static Load(ResourceName: string): AppleImageInterface;
	static Find(Outer: UObject, ResourceName: string): AppleImageInterface;
	static GetDefaultObject(): AppleImageInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AppleImageInterface;
	static C(Other: UObject | any): AppleImageInterface;
}

declare class AppleImageConversionDelegate__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): AppleImageConversionDelegate__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): AppleImageConversionDelegate__PythonCallable;
	static GetDefaultObject(): AppleImageConversionDelegate__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AppleImageConversionDelegate__PythonCallable;
	static C(Other: UObject | any): AppleImageConversionDelegate__PythonCallable;
}

declare class K2Node_ConvertToJPEG extends K2Node_BaseAsyncTask { 
	static Load(ResourceName: string): K2Node_ConvertToJPEG;
	static Find(Outer: UObject, ResourceName: string): K2Node_ConvertToJPEG;
	static GetDefaultObject(): K2Node_ConvertToJPEG;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_ConvertToJPEG;
	static C(Other: UObject | any): K2Node_ConvertToJPEG;
}

declare class K2Node_ConvertToHEIF extends K2Node_BaseAsyncTask { 
	static Load(ResourceName: string): K2Node_ConvertToHEIF;
	static Find(Outer: UObject, ResourceName: string): K2Node_ConvertToHEIF;
	static GetDefaultObject(): K2Node_ConvertToHEIF;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_ConvertToHEIF;
	static C(Other: UObject | any): K2Node_ConvertToHEIF;
}

declare class K2Node_ConvertToTIFF extends K2Node_BaseAsyncTask { 
	static Load(ResourceName: string): K2Node_ConvertToTIFF;
	static Find(Outer: UObject, ResourceName: string): K2Node_ConvertToTIFF;
	static GetDefaultObject(): K2Node_ConvertToTIFF;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_ConvertToTIFF;
	static C(Other: UObject | any): K2Node_ConvertToTIFF;
}

declare class K2Node_ConvertToPNG extends K2Node_BaseAsyncTask { 
	static Load(ResourceName: string): K2Node_ConvertToPNG;
	static Find(Outer: UObject, ResourceName: string): K2Node_ConvertToPNG;
	static GetDefaultObject(): K2Node_ConvertToPNG;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): K2Node_ConvertToPNG;
	static C(Other: UObject | any): K2Node_ConvertToPNG;
}

declare class ArchVisCharacter extends Character { 
	LookUpAxisName: string;
	LookUpAtRateAxisName: string;
	TurnAxisName: string;
	TurnAtRateAxisName: string;
	MoveForwardAxisName: string;
	MoveRightAxisName: string;
	MouseSensitivityScale_Pitch: number;
	MouseSensitivityScale_Yaw: number;
	static GetDefaultObject(): ArchVisCharacter;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ArchVisCharacter;
	static C(Other: UObject | any): ArchVisCharacter;
}

declare class ArchVisCharMovementComponent extends CharacterMovementComponent { 
	RotationalAcceleration: Rotator;
	RotationalDeceleration: Rotator;
	MaxRotationalVelocity: Rotator;
	MinPitch: number;
	MaxPitch: number;
	WalkingFriction: number;
	WalkingSpeed: number;
	WalkingAcceleration: number;
	static Load(ResourceName: string): ArchVisCharMovementComponent;
	static Find(Outer: UObject, ResourceName: string): ArchVisCharMovementComponent;
	static GetDefaultObject(): ArchVisCharMovementComponent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ArchVisCharMovementComponent;
	static C(Other: UObject | any): ArchVisCharMovementComponent;
}

declare type ECollectionScriptingShareType = 'Local' | 'Private' | 'Shared' | 'ECollectionScriptingShareType_MAX';
declare var ECollectionScriptingShareType : { Local:'Local',Private:'Private',Shared:'Shared',ECollectionScriptingShareType_MAX:'ECollectionScriptingShareType_MAX', };
declare class AssetTagsSubsystem extends EngineSubsystem { 
	static Load(ResourceName: string): AssetTagsSubsystem;
	static Find(Outer: UObject, ResourceName: string): AssetTagsSubsystem;
	static GetDefaultObject(): AssetTagsSubsystem;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AssetTagsSubsystem;
	ReparentCollection(Name: string,NewParentName: string): boolean;
	RenameCollection(Name: string,NewName: string): boolean;
	RemoveAssetsFromCollection(Name: string,AssetPathNames: string[]): boolean;
	RemoveAssetPtrsFromCollection(Name: string,AssetPtrs: UObject[]): boolean;
	RemoveAssetPtrFromCollection(Name: string,AssetPtr: UObject): boolean;
	RemoveAssetFromCollection(Name: string,AssetPathName: string): boolean;
	RemoveAssetDatasFromCollection(Name: string,AssetDatas: AssetData[]): boolean;
	RemoveAssetDataFromCollection(Name: string,AssetData: AssetData): boolean;
	GetCollectionsContainingAssetPtr(AssetPtr: UObject): string[];
	GetCollectionsContainingAssetData(AssetData: AssetData): string[];
	GetCollectionsContainingAsset(AssetPathName: string): string[];
	GetCollections(): string[];
	GetAssetsInCollection(Name: string): AssetData[];
	EmptyCollection(Name: string): boolean;
	DestroyCollection(Name: string): boolean;
	CreateCollection(Name: string,ShareType: ECollectionScriptingShareType): boolean;
	CollectionExists(Name: string): boolean;
	AddAssetToCollection(Name: string,AssetPathName: string): boolean;
	AddAssetsToCollection(Name: string,AssetPathNames: string[]): boolean;
	AddAssetPtrToCollection(Name: string,AssetPtr: UObject): boolean;
	AddAssetPtrsToCollection(Name: string,AssetPtrs: UObject[]): boolean;
	AddAssetDataToCollection(Name: string,AssetData: AssetData): boolean;
	AddAssetDatasToCollection(Name: string,AssetDatas: AssetData[]): boolean;
	static C(Other: UObject | any): AssetTagsSubsystem;
}

declare class AudioCaptureDeviceInfo { 
	DeviceName: string;
	NumInputChannels: number;
	SampleRate: number;
	clone() : AudioCaptureDeviceInfo;
	static C(Other: UObject | any): AudioCaptureDeviceInfo;
}

declare class AudioCapture extends AudioGenerator { 
	static Load(ResourceName: string): AudioCapture;
	static Find(Outer: UObject, ResourceName: string): AudioCapture;
	static GetDefaultObject(): AudioCapture;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AudioCapture;
	StopCapturingAudio(): void;
	StartCapturingAudio(): void;
	IsCapturingAudio(): boolean;
	GetAudioCaptureDeviceInfo(OutInfo?: AudioCaptureDeviceInfo): {OutInfo: AudioCaptureDeviceInfo, $: boolean};
	static C(Other: UObject | any): AudioCapture;
}

declare class AudioCaptureFunctionLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): AudioCaptureFunctionLibrary;
	static Find(Outer: UObject, ResourceName: string): AudioCaptureFunctionLibrary;
	static GetDefaultObject(): AudioCaptureFunctionLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AudioCaptureFunctionLibrary;
	static CreateAudioCapture(): AudioCapture;
	static C(Other: UObject | any): AudioCaptureFunctionLibrary;
}

declare class AudioCaptureBlueprintLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): AudioCaptureBlueprintLibrary;
	static Find(Outer: UObject, ResourceName: string): AudioCaptureBlueprintLibrary;
	static GetDefaultObject(): AudioCaptureBlueprintLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AudioCaptureBlueprintLibrary;
	static Conv_AudioInputDeviceInfoToString(Info: AudioInputDeviceInfo): string;
	static C(Other: UObject | any): AudioCaptureBlueprintLibrary;
}

declare class AudioCaptureComponent extends SynthComponent { 
	JitterLatencyFrames: number;
	static Load(ResourceName: string): AudioCaptureComponent;
	static Find(Outer: UObject, ResourceName: string): AudioCaptureComponent;
	static GetDefaultObject(): AudioCaptureComponent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AudioCaptureComponent;
	static C(Other: UObject | any): AudioCaptureComponent;
}

declare class OnAudioInputDevicesObtained__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnAudioInputDevicesObtained__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnAudioInputDevicesObtained__PythonCallable;
	static GetDefaultObject(): OnAudioInputDevicesObtained__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnAudioInputDevicesObtained__PythonCallable;
	static C(Other: UObject | any): OnAudioInputDevicesObtained__PythonCallable;
}

declare class CableComponent extends MeshComponent { 
	bAttachStart: boolean;
	bAttachEnd: boolean;
	AttachEndTo: ComponentReference;
	AttachEndToSocketName: string;
	EndLocation: Vector;
	CableLength: number;
	NumSegments: number;
	SubstepTime: number;
	SolverIterations: number;
	bEnableStiffness: boolean;
	bUseSubstepping: boolean;
	bSkipCableUpdateWhenNotVisible: boolean;
	bSkipCableUpdateWhenNotOwnerRecentlyRendered: boolean;
	bEnableCollision: boolean;
	CollisionFriction: number;
	CableForce: Vector;
	CableGravityScale: number;
	CableWidth: number;
	NumSides: number;
	TileMaterial: number;
	static Load(ResourceName: string): CableComponent;
	static Find(Outer: UObject, ResourceName: string): CableComponent;
	static GetDefaultObject(): CableComponent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CableComponent;
	SetAttachEndToComponent(Component: SceneComponent,SocketName: string): void;
	SetAttachEndTo(Actor: Actor,ComponentProperty: string,SocketName: string): void;
	GetCableParticleLocations(Locations?: Vector[]): {Locations: Vector[]};
	GetAttachedComponent(): SceneComponent;
	GetAttachedActor(): Actor;
	static C(Other: UObject | any): CableComponent;
}

declare class CableActor extends Actor { 
	CableComponent: CableComponent;
	static GetDefaultObject(): CableActor;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CableActor;
	static C(Other: UObject | any): CableActor;
}

declare class CustomMeshTriangle { 
	Vertex0: Vector;
	Vertex1: Vector;
	Vertex2: Vector;
	clone() : CustomMeshTriangle;
	static C(Other: UObject | any): CustomMeshTriangle;
}

declare class CustomMeshComponent extends MeshComponent { 
	static Load(ResourceName: string): CustomMeshComponent;
	static Find(Outer: UObject, ResourceName: string): CustomMeshComponent;
	static GetDefaultObject(): CustomMeshComponent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): CustomMeshComponent;
	SetCustomMeshTriangles(Triangles: CustomMeshTriangle[]): boolean;
	ClearCustomMeshTriangles(): void;
	AddCustomMeshTriangles(Triangles: CustomMeshTriangle[]): void;
	static C(Other: UObject | any): CustomMeshComponent;
}

declare class MovieSceneGeometryCacheParams { 
	GeometryCacheAsset: GeometryCache;
	FirstLoopStartFrameOffset: FrameNumber;
	StartFrameOffset: FrameNumber;
	EndFrameOffset: FrameNumber;
	PlayRate: number;
	bReverse: boolean;
	StartOffset: number;
	EndOffset: number;
	GeometryCache: SoftObjectPath;
	clone() : MovieSceneGeometryCacheParams;
	static C(Other: UObject | any): MovieSceneGeometryCacheParams;
}

declare class MovieSceneGeometryCacheSection extends MovieSceneSection { 
	Params: MovieSceneGeometryCacheParams;
	static Load(ResourceName: string): MovieSceneGeometryCacheSection;
	static Find(Outer: UObject, ResourceName: string): MovieSceneGeometryCacheSection;
	static GetDefaultObject(): MovieSceneGeometryCacheSection;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneGeometryCacheSection;
	static C(Other: UObject | any): MovieSceneGeometryCacheSection;
}

declare class MovieSceneGeometryCacheTrack extends MovieSceneNameableTrack { 
	AnimationSections: MovieSceneSection[];
	static Load(ResourceName: string): MovieSceneGeometryCacheTrack;
	static Find(Outer: UObject, ResourceName: string): MovieSceneGeometryCacheTrack;
	static GetDefaultObject(): MovieSceneGeometryCacheTrack;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MovieSceneGeometryCacheTrack;
	static C(Other: UObject | any): MovieSceneGeometryCacheTrack;
}

declare class GeometryCacheStreamerSettings extends DeveloperSettings { 
	LookAheadBuffer: number;
	MaxMemoryAllowed: number;
	static Load(ResourceName: string): GeometryCacheStreamerSettings;
	static Find(Outer: UObject, ResourceName: string): GeometryCacheStreamerSettings;
	static GetDefaultObject(): GeometryCacheStreamerSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GeometryCacheStreamerSettings;
	static C(Other: UObject | any): GeometryCacheStreamerSettings;
}

declare type EGooglePADErrorCode = 'AssetPack_NO_ERROR' | 'AssetPack_APP_UNAVAILABLE' | 'AssetPack_UNAVAILABLE' | 'AssetPack_INVALID_REQUEST' | 'AssetPack_DOWNLOAD_NOT_FOUND' | 'AssetPack_API_NOT_AVAILABLE' | 'AssetPack_NETWORK_ERROR' | 'AssetPack_ACCESS_DENIED' | 'AssetPack_INSUFFICIENT_STORAGE' | 'AssetPack_PLAY_STORE_NOT_FOUND' | 'AssetPack_NETWORK_UNRESTRICTED' | 'AssetPack_INTERNAL_ERROR' | 'AssetPack_INITIALIZATION_NEEDED' | 'AssetPack_INITIALIZATION_FAILED' | 'AssetPack_MAX';
declare var EGooglePADErrorCode : { AssetPack_NO_ERROR:'AssetPack_NO_ERROR',AssetPack_APP_UNAVAILABLE:'AssetPack_APP_UNAVAILABLE',AssetPack_UNAVAILABLE:'AssetPack_UNAVAILABLE',AssetPack_INVALID_REQUEST:'AssetPack_INVALID_REQUEST',AssetPack_DOWNLOAD_NOT_FOUND:'AssetPack_DOWNLOAD_NOT_FOUND',AssetPack_API_NOT_AVAILABLE:'AssetPack_API_NOT_AVAILABLE',AssetPack_NETWORK_ERROR:'AssetPack_NETWORK_ERROR',AssetPack_ACCESS_DENIED:'AssetPack_ACCESS_DENIED',AssetPack_INSUFFICIENT_STORAGE:'AssetPack_INSUFFICIENT_STORAGE',AssetPack_PLAY_STORE_NOT_FOUND:'AssetPack_PLAY_STORE_NOT_FOUND',AssetPack_NETWORK_UNRESTRICTED:'AssetPack_NETWORK_UNRESTRICTED',AssetPack_INTERNAL_ERROR:'AssetPack_INTERNAL_ERROR',AssetPack_INITIALIZATION_NEEDED:'AssetPack_INITIALIZATION_NEEDED',AssetPack_INITIALIZATION_FAILED:'AssetPack_INITIALIZATION_FAILED',AssetPack_MAX:'AssetPack_MAX', };
declare type EGooglePADStorageMethod = 'AssetPack_STORAGE_FILES' | 'AssetPack_STORAGE_APK' | 'AssetPack_STORAGE_UNKNOWN' | 'AssetPack_STORAGE_NOT_INSTALLED' | 'AssetPack_STORAGE_MAX';
declare var EGooglePADStorageMethod : { AssetPack_STORAGE_FILES:'AssetPack_STORAGE_FILES',AssetPack_STORAGE_APK:'AssetPack_STORAGE_APK',AssetPack_STORAGE_UNKNOWN:'AssetPack_STORAGE_UNKNOWN',AssetPack_STORAGE_NOT_INSTALLED:'AssetPack_STORAGE_NOT_INSTALLED',AssetPack_STORAGE_MAX:'AssetPack_STORAGE_MAX', };
declare type EGooglePADCellularDataConfirmStatus = 'AssetPack_CONFIRM_UNKNOWN' | 'AssetPack_CONFIRM_PENDING' | 'AssetPack_CONFIRM_USER_APPROVED' | 'AssetPack_CONFIRM_USER_CANCELED' | 'AssetPack_CONFIRM_MAX';
declare var EGooglePADCellularDataConfirmStatus : { AssetPack_CONFIRM_UNKNOWN:'AssetPack_CONFIRM_UNKNOWN',AssetPack_CONFIRM_PENDING:'AssetPack_CONFIRM_PENDING',AssetPack_CONFIRM_USER_APPROVED:'AssetPack_CONFIRM_USER_APPROVED',AssetPack_CONFIRM_USER_CANCELED:'AssetPack_CONFIRM_USER_CANCELED',AssetPack_CONFIRM_MAX:'AssetPack_CONFIRM_MAX', };
declare type EGooglePADDownloadStatus = 'AssetPack_UNKNOWN' | 'AssetPack_DOWNLOAD_PENDING' | 'AssetPack_DOWNLOADING' | 'AssetPack_TRANSFERRING' | 'AssetPack_DOWNLOAD_COMPLETED' | 'AssetPack_DOWNLOAD_FAILED' | 'AssetPack_DOWNLOAD_CANCELED' | 'AssetPack_WAITING_FOR_WIFI' | 'AssetPack_NOT_INSTALLED' | 'AssetPack_INFO_PENDING' | 'AssetPack_INFO_FAILED' | 'AssetPack_REMOVAL_PENDING' | 'AssetPack_REMOVAL_FAILED' | 'AssetPack_MAX';
declare var EGooglePADDownloadStatus : { AssetPack_UNKNOWN:'AssetPack_UNKNOWN',AssetPack_DOWNLOAD_PENDING:'AssetPack_DOWNLOAD_PENDING',AssetPack_DOWNLOADING:'AssetPack_DOWNLOADING',AssetPack_TRANSFERRING:'AssetPack_TRANSFERRING',AssetPack_DOWNLOAD_COMPLETED:'AssetPack_DOWNLOAD_COMPLETED',AssetPack_DOWNLOAD_FAILED:'AssetPack_DOWNLOAD_FAILED',AssetPack_DOWNLOAD_CANCELED:'AssetPack_DOWNLOAD_CANCELED',AssetPack_WAITING_FOR_WIFI:'AssetPack_WAITING_FOR_WIFI',AssetPack_NOT_INSTALLED:'AssetPack_NOT_INSTALLED',AssetPack_INFO_PENDING:'AssetPack_INFO_PENDING',AssetPack_INFO_FAILED:'AssetPack_INFO_FAILED',AssetPack_REMOVAL_PENDING:'AssetPack_REMOVAL_PENDING',AssetPack_REMOVAL_FAILED:'AssetPack_REMOVAL_FAILED',AssetPack_MAX:'AssetPack_MAX', };
declare class GooglePADFunctionLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): GooglePADFunctionLibrary;
	static Find(Outer: UObject, ResourceName: string): GooglePADFunctionLibrary;
	static GetDefaultObject(): GooglePADFunctionLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GooglePADFunctionLibrary;
	static ShowCellularDataConfirmation(): EGooglePADErrorCode;
	static RequestRemoval(Name: string): EGooglePADErrorCode;
	static RequestInfo(AssetPacks: string[]): EGooglePADErrorCode;
	static RequestDownload(AssetPacks: string[]): EGooglePADErrorCode;
	static ReleaseDownloadState(State: number): void;
	static ReleaseAssetPackLocation(Location: number): void;
	static GetTotalBytesToDownload(State: number): number;
	static GetStorageMethod(Location: number): EGooglePADStorageMethod;
	static GetShowCellularDataConfirmationStatus(Status?: EGooglePADCellularDataConfirmStatus): {Status: EGooglePADCellularDataConfirmStatus, $: EGooglePADErrorCode};
	static GetDownloadStatus(State: number): EGooglePADDownloadStatus;
	static GetDownloadState(Name: string,State?: number): {State: number, $: EGooglePADErrorCode};
	static GetBytesDownloaded(State: number): number;
	static GetAssetsPath(Location: number): string;
	static GetAssetPackLocation(Name: string,Location?: number): {Location: number, $: EGooglePADErrorCode};
	static CancelDownload(AssetPacks: string[]): EGooglePADErrorCode;
	static C(Other: UObject | any): GooglePADFunctionLibrary;
}

declare class GroomActorFactory extends ActorFactory { 
	static Load(ResourceName: string): GroomActorFactory;
	static Find(Outer: UObject, ResourceName: string): GroomActorFactory;
	static GetDefaultObject(): GroomActorFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GroomActorFactory;
	static C(Other: UObject | any): GroomActorFactory;
}

declare class GroomBindingFactory extends Factory { 
	static Load(ResourceName: string): GroomBindingFactory;
	static Find(Outer: UObject, ResourceName: string): GroomBindingFactory;
	static GetDefaultObject(): GroomBindingFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GroomBindingFactory;
	static C(Other: UObject | any): GroomBindingFactory;
}

declare class GroomEditorMode extends BaseLegacyWidgetEdMode { 
	static Load(ResourceName: string): GroomEditorMode;
	static Find(Outer: UObject, ResourceName: string): GroomEditorMode;
	static GetDefaultObject(): GroomEditorMode;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GroomEditorMode;
	static C(Other: UObject | any): GroomEditorMode;
}

declare class GroomFactory extends Factory { 
	static Load(ResourceName: string): GroomFactory;
	static Find(Outer: UObject, ResourceName: string): GroomFactory;
	static GetDefaultObject(): GroomFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GroomFactory;
	static C(Other: UObject | any): GroomFactory;
}

declare class HairStrandsFactory extends Factory { 
	static Load(ResourceName: string): HairStrandsFactory;
	static Find(Outer: UObject, ResourceName: string): HairStrandsFactory;
	static GetDefaultObject(): HairStrandsFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): HairStrandsFactory;
	static C(Other: UObject | any): HairStrandsFactory;
}

declare class ReimportGroomCacheFactory extends HairStrandsFactory { 
	static Load(ResourceName: string): ReimportGroomCacheFactory;
	static Find(Outer: UObject, ResourceName: string): ReimportGroomCacheFactory;
	static GetDefaultObject(): ReimportGroomCacheFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ReimportGroomCacheFactory;
	static C(Other: UObject | any): ReimportGroomCacheFactory;
}

declare class ReimportHairStrandsFactory extends HairStrandsFactory { 
	static Load(ResourceName: string): ReimportHairStrandsFactory;
	static Find(Outer: UObject, ResourceName: string): ReimportHairStrandsFactory;
	static GetDefaultObject(): ReimportHairStrandsFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ReimportHairStrandsFactory;
	static C(Other: UObject | any): ReimportHairStrandsFactory;
}

declare class OnDynamicMeshModifiedBP__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnDynamicMeshModifiedBP__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnDynamicMeshModifiedBP__PythonCallable;
	static GetDefaultObject(): OnDynamicMeshModifiedBP__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnDynamicMeshModifiedBP__PythonCallable;
	static C(Other: UObject | any): OnDynamicMeshModifiedBP__PythonCallable;
}

declare class MIDIDeviceControllerBase extends UObject { 
	static Load(ResourceName: string): MIDIDeviceControllerBase;
	static Find(Outer: UObject, ResourceName: string): MIDIDeviceControllerBase;
	static GetDefaultObject(): MIDIDeviceControllerBase;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MIDIDeviceControllerBase;
	static C(Other: UObject | any): MIDIDeviceControllerBase;
}

declare type EMIDIEventType = 'Unknown' | 'NoteOff' | 'NoteOn' | 'NoteAfterTouch' | 'ControlChange' | 'ProgramChange' | 'ChannelAfterTouch' | 'PitchBend' | 'EMIDIEventType_MAX';
declare var EMIDIEventType : { Unknown:'Unknown',NoteOff:'NoteOff',NoteOn:'NoteOn',NoteAfterTouch:'NoteAfterTouch',ControlChange:'ControlChange',ProgramChange:'ProgramChange',ChannelAfterTouch:'ChannelAfterTouch',PitchBend:'PitchBend',EMIDIEventType_MAX:'EMIDIEventType_MAX', };
declare class MIDIDeviceController extends MIDIDeviceControllerBase { 
	OnMIDIEvent: UnrealEngineMulticastDelegate<(MIDIDeviceController: MIDIDeviceController, Timestamp: number, EventType: EMIDIEventType, Channel: number, ControlID: number, Velocity: number, RawEventType: number) => void>;
	DeviceID: number;
	DeviceName: string;
	static Load(ResourceName: string): MIDIDeviceController;
	static Find(Outer: UObject, ResourceName: string): MIDIDeviceController;
	static GetDefaultObject(): MIDIDeviceController;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MIDIDeviceController;
	static C(Other: UObject | any): MIDIDeviceController;
}

declare class MIDIDeviceInputController extends MIDIDeviceControllerBase { 
	OnMIDINoteOn: UnrealEngineMulticastDelegate<(MIDIDeviceController: MIDIDeviceInputController, Timestamp: number, Channel: number, Note: number, Velocity: number) => void>;
	OnMIDINoteOff: UnrealEngineMulticastDelegate<(MIDIDeviceController: MIDIDeviceInputController, Timestamp: number, Channel: number, Note: number, Velocity: number) => void>;
	OnMIDIPitchBend: UnrealEngineMulticastDelegate<(MIDIDeviceController: MIDIDeviceInputController, Timestamp: number, Channel: number, Pitch: number) => void>;
	OnMIDIAftertouch: UnrealEngineMulticastDelegate<(MIDIDeviceController: MIDIDeviceInputController, Timestamp: number, Channel: number, Note: number, Amount: number) => void>;
	OnMIDIControlChange: UnrealEngineMulticastDelegate<(MIDIDeviceController: MIDIDeviceInputController, Timestamp: number, Channel: number, Type: number, Value: number) => void>;
	OnMIDIProgramChange: UnrealEngineMulticastDelegate<(MIDIDeviceController: MIDIDeviceInputController, Timestamp: number, Channel: number, ControlID: number, Velocity: number) => void>;
	OnMIDIChannelAftertouch: UnrealEngineMulticastDelegate<(MIDIDeviceController: MIDIDeviceInputController, Timestamp: number, Channel: number, Amount: number) => void>;
	DeviceID: number;
	DeviceName: string;
	static Load(ResourceName: string): MIDIDeviceInputController;
	static Find(Outer: UObject, ResourceName: string): MIDIDeviceInputController;
	static GetDefaultObject(): MIDIDeviceInputController;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MIDIDeviceInputController;
	static C(Other: UObject | any): MIDIDeviceInputController;
}

declare class FoundMIDIDevice { 
	DeviceID: number;
	DeviceName: string;
	bCanReceiveFrom: boolean;
	bCanSendTo: boolean;
	bIsAlreadyInUse: boolean;
	bIsDefaultInputDevice: boolean;
	bIsDefaultOutputDevice: boolean;
	clone() : FoundMIDIDevice;
	static C(Other: UObject | any): FoundMIDIDevice;
}

declare class MIDIDeviceInfo { 
	DeviceID: number;
	DeviceName: string;
	bIsAlreadyInUse: boolean;
	bIsDefaultDevice: boolean;
	clone() : MIDIDeviceInfo;
	static C(Other: UObject | any): MIDIDeviceInfo;
}

declare class MIDIDeviceOutputController extends MIDIDeviceControllerBase { 
	DeviceID: number;
	DeviceName: string;
	static Load(ResourceName: string): MIDIDeviceOutputController;
	static Find(Outer: UObject, ResourceName: string): MIDIDeviceOutputController;
	static GetDefaultObject(): MIDIDeviceOutputController;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MIDIDeviceOutputController;
	SendMIDIProgramChange(Channel: number,ProgramNumber: number): void;
	SendMIDIPitchBend(Channel: number,Pitch: number): void;
	SendMIDINoteOn(Channel: number,Note: number,Velocity: number): void;
	SendMIDINoteOff(Channel: number,Note: number,Velocity: number): void;
	SendMIDINoteAftertouch(Channel: number,Note: number,Amount: number): void;
	SendMIDIEvent(EventType: EMIDIEventType,Channel: number,data1: number,data2: number): void;
	SendMIDIControlChange(Channel: number,Type: number,Value: number): void;
	SendMIDIChannelAftertouch(Channel: number,Amount: number): void;
	static C(Other: UObject | any): MIDIDeviceOutputController;
}

declare class MIDIDeviceManager extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): MIDIDeviceManager;
	static Find(Outer: UObject, ResourceName: string): MIDIDeviceManager;
	static GetDefaultObject(): MIDIDeviceManager;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MIDIDeviceManager;
	static GetMIDIOutputDeviceIDByName(DeviceName: string,DeviceID?: number): {DeviceID: number};
	static GetMIDIInputDeviceIDByName(DeviceName: string,DeviceID?: number): {DeviceID: number};
	static GetDefaultMIDIOutputDeviceID(DeviceID?: number): {DeviceID: number};
	static GetDefaultMIDIInputDeviceID(DeviceID?: number): {DeviceID: number};
	static FindMIDIDevices(OutMIDIDevices?: FoundMIDIDevice[]): {OutMIDIDevices: FoundMIDIDevice[]};
	static FindAllMIDIDeviceInfo(OutMIDIInputDevices?: MIDIDeviceInfo[],OutMIDIOutputDevices?: MIDIDeviceInfo[]): {OutMIDIInputDevices: MIDIDeviceInfo[], OutMIDIOutputDevices: MIDIDeviceInfo[]};
	static CreateMIDIDeviceOutputController(DeviceID: number): MIDIDeviceOutputController;
	static CreateMIDIDeviceInputController(DeviceID: number,MIDIBufferSize: number): MIDIDeviceInputController;
	static CreateMIDIDeviceController(DeviceID: number,MIDIBufferSize: number): MIDIDeviceController;
	static C(Other: UObject | any): MIDIDeviceManager;
}

declare class OnMIDIAftertouch__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnMIDIAftertouch__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnMIDIAftertouch__PythonCallable;
	static GetDefaultObject(): OnMIDIAftertouch__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnMIDIAftertouch__PythonCallable;
	static C(Other: UObject | any): OnMIDIAftertouch__PythonCallable;
}

declare class OnMIDIChannelAftertouch__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnMIDIChannelAftertouch__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnMIDIChannelAftertouch__PythonCallable;
	static GetDefaultObject(): OnMIDIChannelAftertouch__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnMIDIChannelAftertouch__PythonCallable;
	static C(Other: UObject | any): OnMIDIChannelAftertouch__PythonCallable;
}

declare class OnMIDIControlChange__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnMIDIControlChange__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnMIDIControlChange__PythonCallable;
	static GetDefaultObject(): OnMIDIControlChange__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnMIDIControlChange__PythonCallable;
	static C(Other: UObject | any): OnMIDIControlChange__PythonCallable;
}

declare class OnMIDIEvent__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnMIDIEvent__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnMIDIEvent__PythonCallable;
	static GetDefaultObject(): OnMIDIEvent__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnMIDIEvent__PythonCallable;
	static C(Other: UObject | any): OnMIDIEvent__PythonCallable;
}

declare class OnMIDINoteOff__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnMIDINoteOff__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnMIDINoteOff__PythonCallable;
	static GetDefaultObject(): OnMIDINoteOff__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnMIDINoteOff__PythonCallable;
	static C(Other: UObject | any): OnMIDINoteOff__PythonCallable;
}

declare class OnMIDINoteOn__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnMIDINoteOn__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnMIDINoteOn__PythonCallable;
	static GetDefaultObject(): OnMIDINoteOn__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnMIDINoteOn__PythonCallable;
	static C(Other: UObject | any): OnMIDINoteOn__PythonCallable;
}

declare class OnMIDIPitchBend__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnMIDIPitchBend__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnMIDIPitchBend__PythonCallable;
	static GetDefaultObject(): OnMIDIPitchBend__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnMIDIPitchBend__PythonCallable;
	static C(Other: UObject | any): OnMIDIPitchBend__PythonCallable;
}

declare class OnMIDIProgramChange__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnMIDIProgramChange__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnMIDIProgramChange__PythonCallable;
	static GetDefaultObject(): OnMIDIProgramChange__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnMIDIProgramChange__PythonCallable;
	static C(Other: UObject | any): OnMIDIProgramChange__PythonCallable;
}

declare class MobileInstalledContent extends UObject { 
	static Load(ResourceName: string): MobileInstalledContent;
	static Find(Outer: UObject, ResourceName: string): MobileInstalledContent;
	static GetDefaultObject(): MobileInstalledContent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MobileInstalledContent;
	Mount(PakOrder: number,MountPoint: string): boolean;
	GetInstalledContentSize(): number;
	GetDiskFreeSpace(): number;
	static C(Other: UObject | any): MobileInstalledContent;
}

declare class MobilePendingContent extends MobileInstalledContent { 
	static Load(ResourceName: string): MobilePendingContent;
	static Find(Outer: UObject, ResourceName: string): MobilePendingContent;
	static GetDefaultObject(): MobilePendingContent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MobilePendingContent;
	GetTotalDownloadedSize(): number;
	GetRequiredDiskSpace(): number;
	GetInstallProgress(): number;
	GetDownloadStatusText(): string;
	GetDownloadSpeed(): number;
	GetDownloadSize(): number;
	static C(Other: UObject | any): MobilePendingContent;
}

declare class MobilePatchingLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): MobilePatchingLibrary;
	static Find(Outer: UObject, ResourceName: string): MobilePatchingLibrary;
	static GetDefaultObject(): MobilePatchingLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MobilePatchingLibrary;
	static HasActiveWiFiConnection(): boolean;
	static GetSupportedPlatformNames(): string[];
	static GetInstalledContent(InstallDirectory: string): MobileInstalledContent;
	static GetActiveDeviceProfileName(): string;
	static C(Other: UObject | any): MobilePatchingLibrary;
}

declare class OnContentInstallFailed__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnContentInstallFailed__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnContentInstallFailed__PythonCallable;
	static GetDefaultObject(): OnContentInstallFailed__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnContentInstallFailed__PythonCallable;
	static C(Other: UObject | any): OnContentInstallFailed__PythonCallable;
}

declare class OnContentInstallSucceeded__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnContentInstallSucceeded__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnContentInstallSucceeded__PythonCallable;
	static GetDefaultObject(): OnContentInstallSucceeded__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnContentInstallSucceeded__PythonCallable;
	static C(Other: UObject | any): OnContentInstallSucceeded__PythonCallable;
}

declare class OnRequestContentFailed__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnRequestContentFailed__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnRequestContentFailed__PythonCallable;
	static GetDefaultObject(): OnRequestContentFailed__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnRequestContentFailed__PythonCallable;
	static C(Other: UObject | any): OnRequestContentFailed__PythonCallable;
}

declare class OnRequestContentSucceeded__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnRequestContentSucceeded__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnRequestContentSucceeded__PythonCallable;
	static GetDefaultObject(): OnRequestContentSucceeded__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnRequestContentSucceeded__PythonCallable;
	static C(Other: UObject | any): OnRequestContentSucceeded__PythonCallable;
}

declare class KismetProceduralMeshLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): KismetProceduralMeshLibrary;
	static Find(Outer: UObject, ResourceName: string): KismetProceduralMeshLibrary;
	static GetDefaultObject(): KismetProceduralMeshLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): KismetProceduralMeshLibrary;
	static SliceProceduralMesh(InProcMesh: ProceduralMeshComponent,PlanePosition: Vector,PlaneNormal: Vector,bCreateOtherHalf: boolean,OutOtherHalfProcMesh?: ProceduralMeshComponent,CapOption?: EProcMeshSliceCapOption,CapMaterial?: MaterialInterface): {OutOtherHalfProcMesh: ProceduralMeshComponent};
	static GetSectionFromStaticMesh(InMesh: StaticMesh,LODIndex: number,SectionIndex: number,Vertices?: Vector[],Triangles?: number[],Normals?: Vector[],UVs?: Vector2D[],Tangents?: ProcMeshTangent[]): {Vertices: Vector[], Triangles: number[], Normals: Vector[], UVs: Vector2D[], Tangents: ProcMeshTangent[]};
	static GetSectionFromProceduralMesh(InProcMesh: ProceduralMeshComponent,SectionIndex: number,Vertices?: Vector[],Triangles?: number[],Normals?: Vector[],UVs?: Vector2D[],Tangents?: ProcMeshTangent[]): {Vertices: Vector[], Triangles: number[], Normals: Vector[], UVs: Vector2D[], Tangents: ProcMeshTangent[]};
	static GenerateBoxMesh(BoxRadius: Vector,Vertices?: Vector[],Triangles?: number[],Normals?: Vector[],UVs?: Vector2D[],Tangents?: ProcMeshTangent[]): {Vertices: Vector[], Triangles: number[], Normals: Vector[], UVs: Vector2D[], Tangents: ProcMeshTangent[]};
	static CreateGridMeshWelded(NumX: number,NumY: number,Triangles?: number[],Vertices?: Vector[],UVs?: Vector2D[],GridSpacing?: number): {Triangles: number[], Vertices: Vector[], UVs: Vector2D[]};
	static CreateGridMeshTriangles(NumX: number,NumY: number,bWinding: boolean,Triangles?: number[]): {Triangles: number[]};
	static CreateGridMeshSplit(NumX: number,NumY: number,Triangles?: number[],Vertices?: Vector[],UVs?: Vector2D[],UV1s?: Vector2D[],GridSpacing?: number): {Triangles: number[], Vertices: Vector[], UVs: Vector2D[], UV1s: Vector2D[]};
	static CopyProceduralMeshFromStaticMeshComponent(StaticMeshComponent: StaticMeshComponent,LODIndex: number,ProcMeshComponent: ProceduralMeshComponent,bCreateCollision: boolean): void;
	static ConvertQuadToTriangles(Triangles?: number[],Vert0?: number,Vert1?: number,Vert2?: number,Vert3?: number): {Triangles: number[]};
	static CalculateTangentsForMesh(Vertices: Vector[],Triangles: number[],UVs: Vector2D[],Normals?: Vector[],Tangents?: ProcMeshTangent[]): {Normals: Vector[], Tangents: ProcMeshTangent[]};
	static C(Other: UObject | any): KismetProceduralMeshLibrary;
}

declare type EResonanceRenderMode = 'StereoPanning' | 'BinauralLowQuality' | 'BinauralMediumQuality' | 'BinauralHighQuality' | 'RoomEffectsOnly' | 'EResonanceRenderMode_MAX';
declare var EResonanceRenderMode : { StereoPanning:'StereoPanning',BinauralLowQuality:'BinauralLowQuality',BinauralMediumQuality:'BinauralMediumQuality',BinauralHighQuality:'BinauralHighQuality',RoomEffectsOnly:'RoomEffectsOnly',EResonanceRenderMode_MAX:'EResonanceRenderMode_MAX', };
declare class ResonanceAudioSoundfieldSettings extends SoundfieldEncodingSettingsBase { 
	RenderMode: EResonanceRenderMode;
	static Load(ResourceName: string): ResonanceAudioSoundfieldSettings;
	static Find(Outer: UObject, ResourceName: string): ResonanceAudioSoundfieldSettings;
	static GetDefaultObject(): ResonanceAudioSoundfieldSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ResonanceAudioSoundfieldSettings;
	static C(Other: UObject | any): ResonanceAudioSoundfieldSettings;
}

declare type ERaMaterialName = 'TRANSPARENT' | 'ACOUSTIC_CEILING_TILES' | 'BRICK_BARE' | 'BRICK_PAINTED' | 'CONCRETE_BLOCK_COARSE' | 'CONCRETE_BLOCK_PAINTED' | 'CURTAIN_HEAVY' | 'FIBER_GLASS_INSULATION' | 'GLASS_THIN' | 'GLASS_THICK' | 'GRASS' | 'LINOLEUM_ON_CONCRETE' | 'MARBLE' | 'METAL' | 'PARQUET_ONCONCRETE' | 'PLASTER_ROUGH' | 'PLASTER_SMOOTH' | 'PLYWOOD_PANEL' | 'POLISHED_CONCRETE_OR_TILE' | 'SHEETROCK' | 'WATER_OR_ICE_SURFACE' | 'WOOD_CEILING' | 'WOOD_PANEL' | 'UNIFORM' | 'ERaMaterialName_MAX';
declare var ERaMaterialName : { TRANSPARENT:'TRANSPARENT',ACOUSTIC_CEILING_TILES:'ACOUSTIC_CEILING_TILES',BRICK_BARE:'BRICK_BARE',BRICK_PAINTED:'BRICK_PAINTED',CONCRETE_BLOCK_COARSE:'CONCRETE_BLOCK_COARSE',CONCRETE_BLOCK_PAINTED:'CONCRETE_BLOCK_PAINTED',CURTAIN_HEAVY:'CURTAIN_HEAVY',FIBER_GLASS_INSULATION:'FIBER_GLASS_INSULATION',GLASS_THIN:'GLASS_THIN',GLASS_THICK:'GLASS_THICK',GRASS:'GRASS',LINOLEUM_ON_CONCRETE:'LINOLEUM_ON_CONCRETE',MARBLE:'MARBLE',METAL:'METAL',PARQUET_ONCONCRETE:'PARQUET_ONCONCRETE',PLASTER_ROUGH:'PLASTER_ROUGH',PLASTER_SMOOTH:'PLASTER_SMOOTH',PLYWOOD_PANEL:'PLYWOOD_PANEL',POLISHED_CONCRETE_OR_TILE:'POLISHED_CONCRETE_OR_TILE',SHEETROCK:'SHEETROCK',WATER_OR_ICE_SURFACE:'WATER_OR_ICE_SURFACE',WOOD_CEILING:'WOOD_CEILING',WOOD_PANEL:'WOOD_PANEL',UNIFORM:'UNIFORM',ERaMaterialName_MAX:'ERaMaterialName_MAX', };
declare class ResonanceAudioReverbPluginSettings { 
	bEnableRoomEffects: boolean;
	bGetTransformFromAudioVolume: boolean;
	RoomPosition: Vector;
	RoomRotation: Quat;
	RoomDimensions: Vector;
	LeftWallMaterial: ERaMaterialName;
	RightWallMaterial: ERaMaterialName;
	FloorMaterial: ERaMaterialName;
	CeilingMaterial: ERaMaterialName;
	FrontWallMaterial: ERaMaterialName;
	BackWallMaterial: ERaMaterialName;
	ReflectionScalar: number;
	ReverbGain: number;
	ReverbTimeModifier: number;
	ReverbBrightness: number;
	clone() : ResonanceAudioReverbPluginSettings;
	static C(Other: UObject | any): ResonanceAudioReverbPluginSettings;
}

declare class ResonanceAudioReverbPluginPreset extends SoundEffectSubmixPreset { 
	Settings: ResonanceAudioReverbPluginSettings;
	static Load(ResourceName: string): ResonanceAudioReverbPluginPreset;
	static Find(Outer: UObject, ResourceName: string): ResonanceAudioReverbPluginPreset;
	static GetDefaultObject(): ResonanceAudioReverbPluginPreset;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ResonanceAudioReverbPluginPreset;
	SetRoomRotation(InRotation: Quat): void;
	SetRoomPosition(InPosition: Vector): void;
	SetRoomMaterials(InMaterials: ERaMaterialName[]): void;
	SetRoomDimensions(InDimensions: Vector): void;
	SetReverbTimeModifier(InReverbTimeModifier: number): void;
	SetReverbGain(InReverbGain: number): void;
	SetReverbBrightness(InReverbBrightness: number): void;
	SetReflectionScalar(InReflectionScalar: number): void;
	SetEnableRoomEffects(bInEnableRoomEffects: boolean): void;
	static C(Other: UObject | any): ResonanceAudioReverbPluginPreset;
	SetGlobalReverbPreset(): void;
	static SetGlobalReverbPreset(InPreset: ResonanceAudioReverbPluginPreset): void;
}

declare class ResonanceAudioBlueprintFunctionLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): ResonanceAudioBlueprintFunctionLibrary;
	static Find(Outer: UObject, ResourceName: string): ResonanceAudioBlueprintFunctionLibrary;
	static GetDefaultObject(): ResonanceAudioBlueprintFunctionLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ResonanceAudioBlueprintFunctionLibrary;
	static SetGlobalReverbPreset(InPreset: ResonanceAudioReverbPluginPreset): void;
	static GetGlobalReverbPreset(): ResonanceAudioReverbPluginPreset;
	static C(Other: UObject | any): ResonanceAudioBlueprintFunctionLibrary;
}

declare type ERaSpatializationMethod = 'STEREO_PANNING' | 'HRTF' | 'ERaSpatializationMethod_MAX';
declare var ERaSpatializationMethod : { STEREO_PANNING:'STEREO_PANNING',HRTF:'HRTF',ERaSpatializationMethod_MAX:'ERaSpatializationMethod_MAX', };
declare type ERaDistanceRolloffModel = 'LOGARITHMIC' | 'LINEAR' | 'NONE' | 'ERaDistanceRolloffModel_MAX';
declare var ERaDistanceRolloffModel : { LOGARITHMIC:'LOGARITHMIC',LINEAR:'LINEAR',NONE:'NONE',ERaDistanceRolloffModel_MAX:'ERaDistanceRolloffModel_MAX', };
declare class ResonanceAudioSpatializationSourceSettings extends SpatializationPluginSourceSettingsBase { 
	SpatializationMethod: ERaSpatializationMethod;
	Pattern: number;
	Sharpness: number;
	bToggleVisualization: boolean;
	Scale: number;
	Spread: number;
	Rolloff: ERaDistanceRolloffModel;
	MinDistance: number;
	MaxDistance: number;
	static Load(ResourceName: string): ResonanceAudioSpatializationSourceSettings;
	static Find(Outer: UObject, ResourceName: string): ResonanceAudioSpatializationSourceSettings;
	static GetDefaultObject(): ResonanceAudioSpatializationSourceSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ResonanceAudioSpatializationSourceSettings;
	SetSoundSourceSpread(InSpread: number): void;
	SetSoundSourceDirectivity(InPattern: number,InSharpness: number): void;
	static C(Other: UObject | any): ResonanceAudioSpatializationSourceSettings;
}

declare class ResonanceAudioDirectivityVisualizer extends Actor { 
	Material: Material;
	Settings: ResonanceAudioSpatializationSourceSettings;
	static GetDefaultObject(): ResonanceAudioDirectivityVisualizer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ResonanceAudioDirectivityVisualizer;
	static C(Other: UObject | any): ResonanceAudioDirectivityVisualizer;
}

declare type ERaQualityMode = 'STEREO_PANNING' | 'BINAURAL_LOW' | 'BINAURAL_MEDIUM' | 'BINAURAL_HIGH' | 'ERaQualityMode_MAX';
declare var ERaQualityMode : { STEREO_PANNING:'STEREO_PANNING',BINAURAL_LOW:'BINAURAL_LOW',BINAURAL_MEDIUM:'BINAURAL_MEDIUM',BINAURAL_HIGH:'BINAURAL_HIGH',ERaQualityMode_MAX:'ERaQualityMode_MAX', };
declare class ResonanceAudioSettings extends UObject { 
	OutputSubmix: SoftObjectPath;
	QualityMode: ERaQualityMode;
	GlobalReverbPreset: SoftObjectPath;
	GlobalSourcePreset: SoftObjectPath;
	static Load(ResourceName: string): ResonanceAudioSettings;
	static Find(Outer: UObject, ResourceName: string): ResonanceAudioSettings;
	static GetDefaultObject(): ResonanceAudioSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ResonanceAudioSettings;
	static C(Other: UObject | any): ResonanceAudioSettings;
}

declare type ESynth1OscType = 'Sine' | 'Saw' | 'Triangle' | 'Square' | 'Noise' | 'Count' | 'ESynth1OscType_MAX';
declare var ESynth1OscType : { Sine:'Sine',Saw:'Saw',Triangle:'Triangle',Square:'Square',Noise:'Noise',Count:'Count',ESynth1OscType_MAX:'ESynth1OscType_MAX', };
declare type ESynthLFOType = 'Sine' | 'UpSaw' | 'DownSaw' | 'Square' | 'Triangle' | 'Exponential' | 'RandomSampleHold' | 'Count' | 'ESynthLFOType_MAX';
declare var ESynthLFOType : { Sine:'Sine',UpSaw:'UpSaw',DownSaw:'DownSaw',Square:'Square',Triangle:'Triangle',Exponential:'Exponential',RandomSampleHold:'RandomSampleHold',Count:'Count',ESynthLFOType_MAX:'ESynthLFOType_MAX', };
declare type ESynthLFOMode = 'Sync' | 'OneShot' | 'Free' | 'Count' | 'ESynthLFOMode_MAX';
declare var ESynthLFOMode : { Sync:'Sync',OneShot:'OneShot',Free:'Free',Count:'Count',ESynthLFOMode_MAX:'ESynthLFOMode_MAX', };
declare type ESynthLFOPatchType = 'PatchToNone' | 'PatchToGain' | 'PatchToOscFreq' | 'PatchToFilterFreq' | 'PatchToFilterQ' | 'PatchToOscPulseWidth' | 'PatchToOscPan' | 'PatchLFO1ToLFO2Frequency' | 'PatchLFO1ToLFO2Gain' | 'Count' | 'ESynthLFOPatchType_MAX';
declare var ESynthLFOPatchType : { PatchToNone:'PatchToNone',PatchToGain:'PatchToGain',PatchToOscFreq:'PatchToOscFreq',PatchToFilterFreq:'PatchToFilterFreq',PatchToFilterQ:'PatchToFilterQ',PatchToOscPulseWidth:'PatchToOscPulseWidth',PatchToOscPan:'PatchToOscPan',PatchLFO1ToLFO2Frequency:'PatchLFO1ToLFO2Frequency',PatchLFO1ToLFO2Gain:'PatchLFO1ToLFO2Gain',Count:'Count',ESynthLFOPatchType_MAX:'ESynthLFOPatchType_MAX', };
declare type ESynthModEnvPatch = 'PatchToNone' | 'PatchToOscFreq' | 'PatchToFilterFreq' | 'PatchToFilterQ' | 'PatchToLFO1Gain' | 'PatchToLFO2Gain' | 'PatchToLFO1Freq' | 'PatchToLFO2Freq' | 'Count' | 'ESynthModEnvPatch_MAX';
declare var ESynthModEnvPatch : { PatchToNone:'PatchToNone',PatchToOscFreq:'PatchToOscFreq',PatchToFilterFreq:'PatchToFilterFreq',PatchToFilterQ:'PatchToFilterQ',PatchToLFO1Gain:'PatchToLFO1Gain',PatchToLFO2Gain:'PatchToLFO2Gain',PatchToLFO1Freq:'PatchToLFO1Freq',PatchToLFO2Freq:'PatchToLFO2Freq',Count:'Count',ESynthModEnvPatch_MAX:'ESynthModEnvPatch_MAX', };
declare type ESynthModEnvBiasPatch = 'PatchToNone' | 'PatchToOscFreq' | 'PatchToFilterFreq' | 'PatchToFilterQ' | 'PatchToLFO1Gain' | 'PatchToLFO2Gain' | 'PatchToLFO1Freq' | 'PatchToLFO2Freq' | 'Count' | 'ESynthModEnvBiasPatch_MAX';
declare var ESynthModEnvBiasPatch : { PatchToNone:'PatchToNone',PatchToOscFreq:'PatchToOscFreq',PatchToFilterFreq:'PatchToFilterFreq',PatchToFilterQ:'PatchToFilterQ',PatchToLFO1Gain:'PatchToLFO1Gain',PatchToLFO2Gain:'PatchToLFO2Gain',PatchToLFO1Freq:'PatchToLFO1Freq',PatchToLFO2Freq:'PatchToLFO2Freq',Count:'Count',ESynthModEnvBiasPatch_MAX:'ESynthModEnvBiasPatch_MAX', };
declare type ESynthFilterType = 'LowPass' | 'HighPass' | 'BandPass' | 'BandStop' | 'Count' | 'ESynthFilterType_MAX';
declare var ESynthFilterType : { LowPass:'LowPass',HighPass:'HighPass',BandPass:'BandPass',BandStop:'BandStop',Count:'Count',ESynthFilterType_MAX:'ESynthFilterType_MAX', };
declare type ESynthFilterAlgorithm = 'OnePole' | 'StateVariable' | 'Ladder' | 'Count' | 'ESynthFilterAlgorithm_MAX';
declare var ESynthFilterAlgorithm : { OnePole:'OnePole',StateVariable:'StateVariable',Ladder:'Ladder',Count:'Count',ESynthFilterAlgorithm_MAX:'ESynthFilterAlgorithm_MAX', };
declare type ESynthStereoDelayMode = 'Normal' | 'Cross' | 'PingPong' | 'Count' | 'ESynthStereoDelayMode_MAX';
declare var ESynthStereoDelayMode : { Normal:'Normal',Cross:'Cross',PingPong:'PingPong',Count:'Count',ESynthStereoDelayMode_MAX:'ESynthStereoDelayMode_MAX', };
declare type ESynth1PatchSource = 'LFO1' | 'LFO2' | 'Envelope' | 'BiasEnvelope' | 'Count' | 'ESynth1PatchSource_MAX';
declare var ESynth1PatchSource : { LFO1:'LFO1',LFO2:'LFO2',Envelope:'Envelope',BiasEnvelope:'BiasEnvelope',Count:'Count',ESynth1PatchSource_MAX:'ESynth1PatchSource_MAX', };
declare type ESynth1PatchDestination = 'Osc1Gain' | 'Osc1Frequency' | 'Osc1Pulsewidth' | 'Osc2Gain' | 'Osc2Frequency' | 'Osc2Pulsewidth' | 'FilterFrequency' | 'FilterQ' | 'Gain' | 'Pan' | 'LFO1Frequency' | 'LFO1Gain' | 'LFO2Frequency' | 'LFO2Gain' | 'Count' | 'ESynth1PatchDestination_MAX';
declare var ESynth1PatchDestination : { Osc1Gain:'Osc1Gain',Osc1Frequency:'Osc1Frequency',Osc1Pulsewidth:'Osc1Pulsewidth',Osc2Gain:'Osc2Gain',Osc2Frequency:'Osc2Frequency',Osc2Pulsewidth:'Osc2Pulsewidth',FilterFrequency:'FilterFrequency',FilterQ:'FilterQ',Gain:'Gain',Pan:'Pan',LFO1Frequency:'LFO1Frequency',LFO1Gain:'LFO1Gain',LFO2Frequency:'LFO2Frequency',LFO2Gain:'LFO2Gain',Count:'Count',ESynth1PatchDestination_MAX:'ESynth1PatchDestination_MAX', };
declare class Synth1PatchCable { 
	Depth: number;
	Destination: ESynth1PatchDestination;
	clone() : Synth1PatchCable;
	static C(Other: UObject | any): Synth1PatchCable;
}

declare class EpicSynth1Patch { 
	PatchSource: ESynth1PatchSource;
	PatchCables: Synth1PatchCable[];
	clone() : EpicSynth1Patch;
	static C(Other: UObject | any): EpicSynth1Patch;
}

declare class ModularSynthPreset extends TableRowBase { 
	bEnablePolyphony: boolean;
	Osc1Type: ESynth1OscType;
	Osc1Gain: number;
	Osc1Octave: number;
	Osc1Semitones: number;
	Osc1Cents: number;
	Osc1PulseWidth: number;
	Osc2Type: ESynth1OscType;
	Osc2Gain: number;
	Osc2Octave: number;
	Osc2Semitones: number;
	Osc2Cents: number;
	Osc2PulseWidth: number;
	Portamento: number;
	bEnableUnison: boolean;
	bEnableOscillatorSync: boolean;
	Spread: number;
	Pan: number;
	LFO1Frequency: number;
	LFO1Gain: number;
	LFO1Type: ESynthLFOType;
	LFO1Mode: ESynthLFOMode;
	LFO1PatchType: ESynthLFOPatchType;
	LFO2Frequency: number;
	LFO2Gain: number;
	LFO2Type: ESynthLFOType;
	LFO2Mode: ESynthLFOMode;
	LFO2PatchType: ESynthLFOPatchType;
	GainDb: number;
	AttackTime: number;
	DecayTime: number;
	SustainGain: number;
	ReleaseTime: number;
	ModEnvPatchType: ESynthModEnvPatch;
	ModEnvBiasPatchType: ESynthModEnvBiasPatch;
	bInvertModulationEnvelope: boolean;
	bInvertModulationEnvelopeBias: boolean;
	ModulationEnvelopeDepth: number;
	ModulationEnvelopeAttackTime: number;
	ModulationEnvelopeDecayTime: number;
	ModulationEnvelopeSustainGain: number;
	ModulationEnvelopeReleaseTime: number;
	bLegato: boolean;
	bRetrigger: boolean;
	FilterFrequency: number;
	FilterQ: number;
	FilterType: ESynthFilterType;
	FilterAlgorithm: ESynthFilterAlgorithm;
	bStereoDelayEnabled: boolean;
	StereoDelayMode: ESynthStereoDelayMode;
	StereoDelayTime: number;
	StereoDelayFeedback: number;
	StereoDelayWetlevel: number;
	StereoDelayRatio: number;
	bChorusEnabled: boolean;
	ChorusDepth: number;
	ChorusFeedback: number;
	ChorusFrequency: number;
	Patches: EpicSynth1Patch[];
	clone() : ModularSynthPreset;
	static C(Other: UObject | any): ModularSynthPreset;
}

declare class ModularSynthPresetBankEntry { 
	PresetName: string;
	Preset: ModularSynthPreset;
	clone() : ModularSynthPresetBankEntry;
	static C(Other: UObject | any): ModularSynthPresetBankEntry;
}

declare class ModularSynthPresetBank extends UObject { 
	Presets: ModularSynthPresetBankEntry[];
	static Load(ResourceName: string): ModularSynthPresetBank;
	static Find(Outer: UObject, ResourceName: string): ModularSynthPresetBank;
	static GetDefaultObject(): ModularSynthPresetBank;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ModularSynthPresetBank;
	static C(Other: UObject | any): ModularSynthPresetBank;
	AddModularSynthPresetToBankAsset(Preset: ModularSynthPreset,PresetName: string): void;
	static AddModularSynthPresetToBankAsset(InBank: ModularSynthPresetBank,Preset: ModularSynthPreset,PresetName: string): void;
}

declare class ModularSynthLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): ModularSynthLibrary;
	static Find(Outer: UObject, ResourceName: string): ModularSynthLibrary;
	static GetDefaultObject(): ModularSynthLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ModularSynthLibrary;
	static AddModularSynthPresetToBankAsset(InBank: ModularSynthPresetBank,Preset: ModularSynthPreset,PresetName: string): void;
	static C(Other: UObject | any): ModularSynthLibrary;
}

declare class PatchId { 
	ID: number;
	clone() : PatchId;
	static C(Other: UObject | any): PatchId;
}

declare class ModularSynthComponent extends SynthComponent { 
	VoiceCount: number;
	static Load(ResourceName: string): ModularSynthComponent;
	static Find(Outer: UObject, ResourceName: string): ModularSynthComponent;
	static GetDefaultObject(): ModularSynthComponent;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ModularSynthComponent;
	SetSynthPreset(SynthPreset: ModularSynthPreset): void;
	SetSustainGain(SustainGain: number): void;
	SetStereoDelayWetlevel(DelayWetlevel: number): void;
	SetStereoDelayTime(DelayTimeMsec: number): void;
	SetStereoDelayRatio(DelayRatio: number): void;
	SetStereoDelayMode(StereoDelayMode: ESynthStereoDelayMode): void;
	SetStereoDelayIsEnabled(StereoDelayEnabled: boolean): void;
	SetStereoDelayFeedback(DelayFeedback: number): void;
	SetSpread(Spread: number): void;
	SetReleaseTime(ReleaseTimeMsec: number): void;
	SetPortamento(Portamento: number): void;
	SetPitchBend(PitchBend: number): void;
	SetPan(Pan: number): void;
	SetOscType(OscIndex: number,OscType: ESynth1OscType): void;
	SetOscSync(bIsSynced: boolean): void;
	SetOscSemitones(OscIndex: number,Semitones: number): void;
	SetOscPulsewidth(OscIndex: number,Pulsewidth: number): void;
	SetOscOctave(OscIndex: number,Octave: number): void;
	SetOscGainMod(OscIndex: number,OscGainMod: number): void;
	SetOscGain(OscIndex: number,OscGain: number): void;
	SetOscFrequencyMod(OscIndex: number,OscFreqMod: number): void;
	SetOscCents(OscIndex: number,Cents: number): void;
	SetModEnvSustainGain(SustainGain: number): void;
	SetModEnvReleaseTime(Release: number): void;
	SetModEnvPatch(InPatchType: ESynthModEnvPatch): void;
	SetModEnvInvert(bInvert: boolean): void;
	SetModEnvDepth(Depth: number): void;
	SetModEnvDecayTime(DecayTimeMsec: number): void;
	SetModEnvBiasPatch(InPatchType: ESynthModEnvBiasPatch): void;
	SetModEnvBiasInvert(bInvert: boolean): void;
	SetModEnvAttackTime(AttackTimeMsec: number): void;
	SetLFOType(LFOIndex: number,LFOType: ESynthLFOType): void;
	SetLFOPatch(LFOIndex: number,LFOPatchType: ESynthLFOPatchType): void;
	SetLFOMode(LFOIndex: number,LFOMode: ESynthLFOMode): void;
	SetLFOGainMod(LFOIndex: number,GainMod: number): void;
	SetLFOGain(LFOIndex: number,Gain: number): void;
	SetLFOFrequencyMod(LFOIndex: number,FrequencyModHz: number): void;
	SetLFOFrequency(LFOIndex: number,FrequencyHz: number): void;
	SetGainDb(GainDb: number): void;
	SetFilterType(FilterType: ESynthFilterType): void;
	SetFilterQMod(FilterQ: number): void;
	SetFilterQ(FilterQ: number): void;
	SetFilterFrequencyMod(FilterFrequencyHz: number): void;
	SetFilterFrequency(FilterFrequencyHz: number): void;
	SetFilterAlgorithm(FilterAlgorithm: ESynthFilterAlgorithm): void;
	SetEnableUnison(EnableUnison: boolean): void;
	SetEnableRetrigger(RetriggerEnabled: boolean): void;
	SetEnablePolyphony(bEnablePolyphony: boolean): void;
	SetEnablePatch(PatchId: PatchId,bIsEnabled: boolean): boolean;
	SetEnableLegato(LegatoEnabled: boolean): void;
	SetDecayTime(DecayTimeMsec: number): void;
	SetChorusFrequency(Frequency: number): void;
	SetChorusFeedback(Feedback: number): void;
	SetChorusEnabled(EnableChorus: boolean): void;
	SetChorusDepth(Depth: number): void;
	SetAttackTime(AttackTimeMsec: number): void;
	NoteOn(Note: number,Velocity: number,Duration: number): void;
	NoteOff(Note: number,bAllNotesOff: boolean,bKillAllNotes: boolean): void;
	CreatePatch(PatchSource: ESynth1PatchSource,PatchCables: Synth1PatchCable[],bEnableByDefault: boolean): PatchId;
	static C(Other: UObject | any): ModularSynthComponent;
}

declare class SourceEffectBitCrusherSettings { 
	CrushedSampleRate: number;
	SampleRateModulation: SoundModulationDestinationSettings;
	CrushedBits: number;
	BitModulation: SoundModulationDestinationSettings;
	clone() : SourceEffectBitCrusherSettings;
	static C(Other: UObject | any): SourceEffectBitCrusherSettings;
}

declare class SourceEffectBitCrusherBaseSettings { 
	SampleRate: number;
	BitDepth: number;
	clone() : SourceEffectBitCrusherBaseSettings;
	static C(Other: UObject | any): SourceEffectBitCrusherBaseSettings;
}

declare class SourceEffectBitCrusherPreset extends SoundEffectSourcePreset { 
	Settings: SourceEffectBitCrusherSettings;
	static Load(ResourceName: string): SourceEffectBitCrusherPreset;
	static Find(Outer: UObject, ResourceName: string): SourceEffectBitCrusherPreset;
	static GetDefaultObject(): SourceEffectBitCrusherPreset;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SourceEffectBitCrusherPreset;
	SetSettings(Settings: SourceEffectBitCrusherBaseSettings): void;
	SetSampleRateModulator(Modulator: SoundModulatorBase): void;
	SetSampleRate(SampleRate: number): void;
	SetModulationSettings(ModulationSettings: SourceEffectBitCrusherSettings): void;
	SetBits(Bits: number): void;
	SetBitModulator(Modulator: SoundModulatorBase): void;
	static C(Other: UObject | any): SourceEffectBitCrusherPreset;
}

declare class SourceEffectChorusSettings { 
	Depth: number;
	Frequency: number;
	Feedback: number;
	WetLevel: number;
	DryLevel: number;
	Spread: number;
	DepthModulation: SoundModulationDestinationSettings;
	FrequencyModulation: SoundModulationDestinationSettings;
	FeedbackModulation: SoundModulationDestinationSettings;
	WetModulation: SoundModulationDestinationSettings;
	DryModulation: SoundModulationDestinationSettings;
	SpreadModulation: SoundModulationDestinationSettings;
	clone() : SourceEffectChorusSettings;
	static C(Other: UObject | any): SourceEffectChorusSettings;
}

declare class SourceEffectChorusBaseSettings { 
	Depth: number;
	Frequency: number;
	Feedback: number;
	WetLevel: number;
	DryLevel: number;
	Spread: number;
	clone() : SourceEffectChorusBaseSettings;
	static C(Other: UObject | any): SourceEffectChorusBaseSettings;
}

declare class SourceEffectChorusPreset extends SoundEffectSourcePreset { 
	Settings: SourceEffectChorusSettings;
	static Load(ResourceName: string): SourceEffectChorusPreset;
	static Find(Outer: UObject, ResourceName: string): SourceEffectChorusPreset;
	static GetDefaultObject(): SourceEffectChorusPreset;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SourceEffectChorusPreset;
	SetWetModulator(Modulator: SoundModulatorBase): void;
	SetWet(WetAmount: number): void;
	SetSpreadModulator(Modulator: SoundModulatorBase): void;
	SetSpread(Spread: number): void;
	SetSettings(Settings: SourceEffectChorusBaseSettings): void;
	SetModulationSettings(ModulationSettings: SourceEffectChorusSettings): void;
	SetFrequencyModulator(Modulator: SoundModulatorBase): void;
	SetFrequency(Frequency: number): void;
	SetFeedbackModulator(Modulator: SoundModulatorBase): void;
	SetFeedback(Feedback: number): void;
	SetDryModulator(Modulator: SoundModulatorBase): void;
	SetDry(DryAmount: number): void;
	SetDepthModulator(Modulator: SoundModulatorBase): void;
	SetDepth(Depth: number): void;
	static C(Other: UObject | any): SourceEffectChorusPreset;
}

declare type ESourceEffectDynamicsProcessorType = 'Compressor' | 'Limiter' | 'Expander' | 'Gate' | 'UpwardsCompressor' | 'Count' | 'ESourceEffectDynamicsProcessorType_MAX';
declare var ESourceEffectDynamicsProcessorType : { Compressor:'Compressor',Limiter:'Limiter',Expander:'Expander',Gate:'Gate',UpwardsCompressor:'UpwardsCompressor',Count:'Count',ESourceEffectDynamicsProcessorType_MAX:'ESourceEffectDynamicsProcessorType_MAX', };
declare type ESourceEffectDynamicsPeakMode = 'MeanSquared' | 'RootMeanSquared' | 'Peak' | 'Count' | 'ESourceEffectDynamicsPeakMode_MAX';
declare var ESourceEffectDynamicsPeakMode : { MeanSquared:'MeanSquared',RootMeanSquared:'RootMeanSquared',Peak:'Peak',Count:'Count',ESourceEffectDynamicsPeakMode_MAX:'ESourceEffectDynamicsPeakMode_MAX', };
declare class SourceEffectDynamicsProcessorSettings { 
	DynamicsProcessorType: ESourceEffectDynamicsProcessorType;
	PeakMode: ESourceEffectDynamicsPeakMode;
	LookAheadMsec: number;
	AttackTimeMsec: number;
	ReleaseTimeMsec: number;
	ThresholdDb: number;
	Ratio: number;
	KneeBandwidthDb: number;
	InputGainDb: number;
	OutputGainDb: number;
	bStereoLinked: boolean;
	bAnalogMode: boolean;
	clone() : SourceEffectDynamicsProcessorSettings;
	static C(Other: UObject | any): SourceEffectDynamicsProcessorSettings;
}

declare class SourceEffectDynamicsProcessorPreset extends SoundEffectSourcePreset { 
	Settings: SourceEffectDynamicsProcessorSettings;
	static Load(ResourceName: string): SourceEffectDynamicsProcessorPreset;
	static Find(Outer: UObject, ResourceName: string): SourceEffectDynamicsProcessorPreset;
	static GetDefaultObject(): SourceEffectDynamicsProcessorPreset;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SourceEffectDynamicsProcessorPreset;
	SetSettings(InSettings: SourceEffectDynamicsProcessorSettings): void;
	static C(Other: UObject | any): SourceEffectDynamicsProcessorPreset;
}

declare class EnvelopeFollowerListener extends ActorComponent { 
	OnEnvelopeFollowerUpdate: UnrealEngineMulticastDelegate<(EnvelopeValue: number) => void>;
	static Load(ResourceName: string): EnvelopeFollowerListener;
	static Find(Outer: UObject, ResourceName: string): EnvelopeFollowerListener;
	static GetDefaultObject(): EnvelopeFollowerListener;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): EnvelopeFollowerListener;
	static C(Other: UObject | any): EnvelopeFollowerListener;
}

declare type EEnvelopeFollowerPeakMode = 'MeanSquared' | 'RootMeanSquared' | 'Peak' | 'Count' | 'EEnvelopeFollowerPeakMode_MAX';
declare var EEnvelopeFollowerPeakMode : { MeanSquared:'MeanSquared',RootMeanSquared:'RootMeanSquared',Peak:'Peak',Count:'Count',EEnvelopeFollowerPeakMode_MAX:'EEnvelopeFollowerPeakMode_MAX', };
declare class SourceEffectEnvelopeFollowerSettings { 
	AttackTime: number;
	ReleaseTime: number;
	PeakMode: EEnvelopeFollowerPeakMode;
	bIsAnalogMode: boolean;
	clone() : SourceEffectEnvelopeFollowerSettings;
	static C(Other: UObject | any): SourceEffectEnvelopeFollowerSettings;
}

declare class SourceEffectEnvelopeFollowerPreset extends SoundEffectSourcePreset { 
	Settings: SourceEffectEnvelopeFollowerSettings;
	static Load(ResourceName: string): SourceEffectEnvelopeFollowerPreset;
	static Find(Outer: UObject, ResourceName: string): SourceEffectEnvelopeFollowerPreset;
	static GetDefaultObject(): SourceEffectEnvelopeFollowerPreset;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SourceEffectEnvelopeFollowerPreset;
	UnregisterEnvelopeFollowerListener(EnvelopeFollowerListener: EnvelopeFollowerListener): void;
	SetSettings(InSettings: SourceEffectEnvelopeFollowerSettings): void;
	RegisterEnvelopeFollowerListener(EnvelopeFollowerListener: EnvelopeFollowerListener): void;
	static C(Other: UObject | any): SourceEffectEnvelopeFollowerPreset;
}

declare class SourceEffectEQBand { 
	Frequency: number;
	Bandwidth: number;
	GainDb: number;
	bEnabled: boolean;
	clone() : SourceEffectEQBand;
	static C(Other: UObject | any): SourceEffectEQBand;
}

declare class SourceEffectEQSettings { 
	EQBands: SourceEffectEQBand[];
	clone() : SourceEffectEQSettings;
	static C(Other: UObject | any): SourceEffectEQSettings;
}

declare class SourceEffectEQPreset extends SoundEffectSourcePreset { 
	Settings: SourceEffectEQSettings;
	static Load(ResourceName: string): SourceEffectEQPreset;
	static Find(Outer: UObject, ResourceName: string): SourceEffectEQPreset;
	static GetDefaultObject(): SourceEffectEQPreset;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SourceEffectEQPreset;
	SetSettings(InSettings: SourceEffectEQSettings): void;
	static C(Other: UObject | any): SourceEffectEQPreset;
}

declare type ESourceEffectFilterCircuit = 'OnePole' | 'StateVariable' | 'Ladder' | 'Count' | 'ESourceEffectFilterCircuit_MAX';
declare var ESourceEffectFilterCircuit : { OnePole:'OnePole',StateVariable:'StateVariable',Ladder:'Ladder',Count:'Count',ESourceEffectFilterCircuit_MAX:'ESourceEffectFilterCircuit_MAX', };
declare type ESourceEffectFilterType = 'LowPass' | 'HighPass' | 'BandPass' | 'BandStop' | 'Count' | 'ESourceEffectFilterType_MAX';
declare var ESourceEffectFilterType : { LowPass:'LowPass',HighPass:'HighPass',BandPass:'BandPass',BandStop:'BandStop',Count:'Count',ESourceEffectFilterType_MAX:'ESourceEffectFilterType_MAX', };
declare type ESourceEffectFilterParam = 'FilterFrequency' | 'FilterResonance' | 'Count' | 'ESourceEffectFilterParam_MAX';
declare var ESourceEffectFilterParam : { FilterFrequency:'FilterFrequency',FilterResonance:'FilterResonance',Count:'Count',ESourceEffectFilterParam_MAX:'ESourceEffectFilterParam_MAX', };
declare class SourceEffectFilterAudioBusModulationSettings { 
	AudioBus: AudioBus;
	EnvelopeFollowerAttackTimeMsec: number;
	EnvelopeFollowerReleaseTimeMsec: number;
	EnvelopeGainMultiplier: number;
	FilterParam: ESourceEffectFilterParam;
	MinFrequencyModulation: number;
	MaxFrequencyModulation: number;
	MinResonanceModulation: number;
	MaxResonanceModulation: number;
	clone() : SourceEffectFilterAudioBusModulationSettings;
	static C(Other: UObject | any): SourceEffectFilterAudioBusModulationSettings;
}

declare class SourceEffectFilterSettings { 
	FilterCircuit: ESourceEffectFilterCircuit;
	FilterType: ESourceEffectFilterType;
	CutoffFrequency: number;
	FilterQ: number;
	AudioBusModulation: SourceEffectFilterAudioBusModulationSettings[];
	clone() : SourceEffectFilterSettings;
	static C(Other: UObject | any): SourceEffectFilterSettings;
}

declare class SourceEffectFilterPreset extends SoundEffectSourcePreset { 
	Settings: SourceEffectFilterSettings;
	static Load(ResourceName: string): SourceEffectFilterPreset;
	static Find(Outer: UObject, ResourceName: string): SourceEffectFilterPreset;
	static GetDefaultObject(): SourceEffectFilterPreset;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SourceEffectFilterPreset;
	SetSettings(InSettings: SourceEffectFilterSettings): void;
	static C(Other: UObject | any): SourceEffectFilterPreset;
}

declare class SourceEffectFoldbackDistortionSettings { 
	InputGainDb: number;
	ThresholdDb: number;
	OutputGainDb: number;
	clone() : SourceEffectFoldbackDistortionSettings;
	static C(Other: UObject | any): SourceEffectFoldbackDistortionSettings;
}

declare class SourceEffectFoldbackDistortionPreset extends SoundEffectSourcePreset { 
	Settings: SourceEffectFoldbackDistortionSettings;
	static Load(ResourceName: string): SourceEffectFoldbackDistortionPreset;
	static Find(Outer: UObject, ResourceName: string): SourceEffectFoldbackDistortionPreset;
	static GetDefaultObject(): SourceEffectFoldbackDistortionPreset;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SourceEffectFoldbackDistortionPreset;
	SetSettings(InSettings: SourceEffectFoldbackDistortionSettings): void;
	static C(Other: UObject | any): SourceEffectFoldbackDistortionPreset;
}

declare type EStereoChannelMode = 'MidSide' | 'LeftRight' | 'count' | 'EStereoChannelMode_MAX';
declare var EStereoChannelMode : { MidSide:'MidSide',LeftRight:'LeftRight',count:'count',EStereoChannelMode_MAX:'EStereoChannelMode_MAX', };
declare class SourceEffectMidSideSpreaderSettings { 
	SpreadAmount: number;
	InputMode: EStereoChannelMode;
	OutputMode: EStereoChannelMode;
	bEqualPower: boolean;
	clone() : SourceEffectMidSideSpreaderSettings;
	static C(Other: UObject | any): SourceEffectMidSideSpreaderSettings;
}

declare class SourceEffectMidSideSpreaderPreset extends SoundEffectSourcePreset { 
	Settings: SourceEffectMidSideSpreaderSettings;
	static Load(ResourceName: string): SourceEffectMidSideSpreaderPreset;
	static Find(Outer: UObject, ResourceName: string): SourceEffectMidSideSpreaderPreset;
	static GetDefaultObject(): SourceEffectMidSideSpreaderPreset;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SourceEffectMidSideSpreaderPreset;
	SetSettings(InSettings: SourceEffectMidSideSpreaderSettings): void;
	static C(Other: UObject | any): SourceEffectMidSideSpreaderPreset;
}

declare type ESourceEffectMotionFilterTopology = 'SerialMode' | 'ParallelMode' | 'Count' | 'ESourceEffectMotionFilterTopology_MAX';
declare var ESourceEffectMotionFilterTopology : { SerialMode:'SerialMode',ParallelMode:'ParallelMode',Count:'Count',ESourceEffectMotionFilterTopology_MAX:'ESourceEffectMotionFilterTopology_MAX', };
declare type ESourceEffectMotionFilterCircuit = 'OnePole' | 'StateVariable' | 'Ladder' | 'Count' | 'ESourceEffectMotionFilterCircuit_MAX';
declare var ESourceEffectMotionFilterCircuit : { OnePole:'OnePole',StateVariable:'StateVariable',Ladder:'Ladder',Count:'Count',ESourceEffectMotionFilterCircuit_MAX:'ESourceEffectMotionFilterCircuit_MAX', };
declare type ESourceEffectMotionFilterType = 'LowPass' | 'HighPass' | 'BandPass' | 'BandStop' | 'Count' | 'ESourceEffectMotionFilterType_MAX';
declare var ESourceEffectMotionFilterType : { LowPass:'LowPass',HighPass:'HighPass',BandPass:'BandPass',BandStop:'BandStop',Count:'Count',ESourceEffectMotionFilterType_MAX:'ESourceEffectMotionFilterType_MAX', };
declare class SourceEffectIndividualFilterSettings { 
	FilterCircuit: ESourceEffectMotionFilterCircuit;
	FilterType: ESourceEffectMotionFilterType;
	CutoffFrequency: number;
	FilterQ: number;
	clone() : SourceEffectIndividualFilterSettings;
	static C(Other: UObject | any): SourceEffectIndividualFilterSettings;
}

declare class SourceEffectMotionFilterSettings { 
	MotionFilterTopology: ESourceEffectMotionFilterTopology;
	MotionFilterMix: number;
	FilterASettings: SourceEffectIndividualFilterSettings;
	FilterBSettings: SourceEffectIndividualFilterSettings;
	ModulationMappings: any;
	DryVolumeDb: number;
	clone() : SourceEffectMotionFilterSettings;
	static C(Other: UObject | any): SourceEffectMotionFilterSettings;
}

declare class SourceEffectMotionFilterPreset extends SoundEffectSourcePreset { 
	Settings: SourceEffectMotionFilterSettings;
	static Load(ResourceName: string): SourceEffectMotionFilterPreset;
	static Find(Outer: UObject, ResourceName: string): SourceEffectMotionFilterPreset;
	static GetDefaultObject(): SourceEffectMotionFilterPreset;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SourceEffectMotionFilterPreset;
	SetSettings(InSettings: SourceEffectMotionFilterSettings): void;
	static C(Other: UObject | any): SourceEffectMotionFilterPreset;
}

declare class SourceEffectPannerSettings { 
	Spread: number;
	Pan: number;
	clone() : SourceEffectPannerSettings;
	static C(Other: UObject | any): SourceEffectPannerSettings;
}

declare class SourceEffectPannerPreset extends SoundEffectSourcePreset { 
	Settings: SourceEffectPannerSettings;
	static Load(ResourceName: string): SourceEffectPannerPreset;
	static Find(Outer: UObject, ResourceName: string): SourceEffectPannerPreset;
	static GetDefaultObject(): SourceEffectPannerPreset;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SourceEffectPannerPreset;
	SetSettings(InSettings: SourceEffectPannerSettings): void;
	static C(Other: UObject | any): SourceEffectPannerPreset;
}

declare type EPhaserLFOType = 'Sine' | 'UpSaw' | 'DownSaw' | 'Square' | 'Triangle' | 'Exponential' | 'RandomSampleHold' | 'Count' | 'EPhaserLFOType_MAX';
declare var EPhaserLFOType : { Sine:'Sine',UpSaw:'UpSaw',DownSaw:'DownSaw',Square:'Square',Triangle:'Triangle',Exponential:'Exponential',RandomSampleHold:'RandomSampleHold',Count:'Count',EPhaserLFOType_MAX:'EPhaserLFOType_MAX', };
declare class SourceEffectPhaserSettings { 
	WetLevel: number;
	Frequency: number;
	Feedback: number;
	LFOType: EPhaserLFOType;
	UseQuadraturePhase: boolean;
	clone() : SourceEffectPhaserSettings;
	static C(Other: UObject | any): SourceEffectPhaserSettings;
}

declare class SourceEffectPhaserPreset extends SoundEffectSourcePreset { 
	Settings: SourceEffectPhaserSettings;
	static Load(ResourceName: string): SourceEffectPhaserPreset;
	static Find(Outer: UObject, ResourceName: string): SourceEffectPhaserPreset;
	static GetDefaultObject(): SourceEffectPhaserPreset;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SourceEffectPhaserPreset;
	SetSettings(InSettings: SourceEffectPhaserSettings): void;
	static C(Other: UObject | any): SourceEffectPhaserPreset;
}

declare type ERingModulatorTypeSourceEffect = 'Sine' | 'Saw' | 'Triangle' | 'Square' | 'Count' | 'ERingModulatorTypeSourceEffect_MAX';
declare var ERingModulatorTypeSourceEffect : { Sine:'Sine',Saw:'Saw',Triangle:'Triangle',Square:'Square',Count:'Count',ERingModulatorTypeSourceEffect_MAX:'ERingModulatorTypeSourceEffect_MAX', };
declare class SourceEffectRingModulationSettings { 
	ModulatorType: ERingModulatorTypeSourceEffect;
	Frequency: number;
	Depth: number;
	DryLevel: number;
	WetLevel: number;
	AudioBusModulator: AudioBus;
	clone() : SourceEffectRingModulationSettings;
	static C(Other: UObject | any): SourceEffectRingModulationSettings;
}

declare class SourceEffectRingModulationPreset extends SoundEffectSourcePreset { 
	Settings: SourceEffectRingModulationSettings;
	static Load(ResourceName: string): SourceEffectRingModulationPreset;
	static Find(Outer: UObject, ResourceName: string): SourceEffectRingModulationPreset;
	static GetDefaultObject(): SourceEffectRingModulationPreset;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SourceEffectRingModulationPreset;
	SetSettings(InSettings: SourceEffectRingModulationSettings): void;
	static C(Other: UObject | any): SourceEffectRingModulationPreset;
}

declare class SourceEffectSimpleDelaySettings { 
	SpeedOfSound: number;
	DelayAmount: number;
	DryAmount: number;
	WetAmount: number;
	Feedback: number;
	bDelayBasedOnDistance: boolean;
	clone() : SourceEffectSimpleDelaySettings;
	static C(Other: UObject | any): SourceEffectSimpleDelaySettings;
}

declare class SourceEffectSimpleDelayPreset extends SoundEffectSourcePreset { 
	Settings: SourceEffectSimpleDelaySettings;
	static Load(ResourceName: string): SourceEffectSimpleDelayPreset;
	static Find(Outer: UObject, ResourceName: string): SourceEffectSimpleDelayPreset;
	static GetDefaultObject(): SourceEffectSimpleDelayPreset;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SourceEffectSimpleDelayPreset;
	SetSettings(InSettings: SourceEffectSimpleDelaySettings): void;
	static C(Other: UObject | any): SourceEffectSimpleDelayPreset;
}

declare type EStereoDelaySourceEffect = 'Normal' | 'Cross' | 'PingPong' | 'Count' | 'EStereoDelaySourceEffect_MAX';
declare var EStereoDelaySourceEffect : { Normal:'Normal',Cross:'Cross',PingPong:'PingPong',Count:'Count',EStereoDelaySourceEffect_MAX:'EStereoDelaySourceEffect_MAX', };
declare type EStereoDelayFiltertype = 'Lowpass' | 'Highpass' | 'Bandpass' | 'Notch' | 'Count' | 'EStereoDelayFiltertype_MAX';
declare var EStereoDelayFiltertype : { Lowpass:'Lowpass',Highpass:'Highpass',Bandpass:'Bandpass',Notch:'Notch',Count:'Count',EStereoDelayFiltertype_MAX:'EStereoDelayFiltertype_MAX', };
declare class SourceEffectStereoDelaySettings { 
	DelayMode: EStereoDelaySourceEffect;
	DelayTimeMsec: number;
	Feedback: number;
	DelayRatio: number;
	WetLevel: number;
	DryLevel: number;
	bFilterEnabled: boolean;
	FilterType: EStereoDelayFiltertype;
	FilterFrequency: number;
	FilterQ: number;
	clone() : SourceEffectStereoDelaySettings;
	static C(Other: UObject | any): SourceEffectStereoDelaySettings;
}

declare class SourceEffectStereoDelayPreset extends SoundEffectSourcePreset { 
	Settings: SourceEffectStereoDelaySettings;
	static Load(ResourceName: string): SourceEffectStereoDelayPreset;
	static Find(Outer: UObject, ResourceName: string): SourceEffectStereoDelayPreset;
	static GetDefaultObject(): SourceEffectStereoDelayPreset;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SourceEffectStereoDelayPreset;
	SetSettings(InSettings: SourceEffectStereoDelaySettings): void;
	static C(Other: UObject | any): SourceEffectStereoDelayPreset;
}

declare class SourceEffectWaveShaperSettings { 
	Amount: number;
	OutputGainDb: number;
	clone() : SourceEffectWaveShaperSettings;
	static C(Other: UObject | any): SourceEffectWaveShaperSettings;
}

declare class SourceEffectWaveShaperPreset extends SoundEffectSourcePreset { 
	Settings: SourceEffectWaveShaperSettings;
	static Load(ResourceName: string): SourceEffectWaveShaperPreset;
	static Find(Outer: UObject, ResourceName: string): SourceEffectWaveShaperPreset;
	static GetDefaultObject(): SourceEffectWaveShaperPreset;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SourceEffectWaveShaperPreset;
	SetSettings(InSettings: SourceEffectWaveShaperSettings): void;
	static C(Other: UObject | any): SourceEffectWaveShaperPreset;
}

declare class AudioImpulseResponse extends UObject { 
	ImpulseResponse: number[];
	NumChannels: number;
	SampleRate: number;
	NormalizationVolumeDb: number;
	bTrueStereo: boolean;
	IRData: number[];
	static Load(ResourceName: string): AudioImpulseResponse;
	static Find(Outer: UObject, ResourceName: string): AudioImpulseResponse;
	static GetDefaultObject(): AudioImpulseResponse;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AudioImpulseResponse;
	static C(Other: UObject | any): AudioImpulseResponse;
}

declare class SubmixEffectConvolutionReverbSettings { 
	NormalizationVolumeDb: number;
	bBypass: boolean;
	bMixInputChannelFormatToImpulseResponseFormat: boolean;
	bMixReverbOutputToOutputChannelFormat: boolean;
	SurroundRearChannelBleedDb: number;
	bInvertRearChannelBleedPhase: boolean;
	bSurroundRearChannelFlip: boolean;
	SurroundRearChannelBleedAmount: number;
	ImpulseResponse: AudioImpulseResponse;
	AllowHArdwareAcceleration: boolean;
	clone() : SubmixEffectConvolutionReverbSettings;
	static C(Other: UObject | any): SubmixEffectConvolutionReverbSettings;
}

declare type ESubmixEffectConvolutionReverbBlockSize = 'BlockSize256' | 'BlockSize512' | 'BlockSize1024' | 'ESubmixEffectConvolutionReverbBlockSize_MAX';
declare var ESubmixEffectConvolutionReverbBlockSize : { BlockSize256:'BlockSize256',BlockSize512:'BlockSize512',BlockSize1024:'BlockSize1024',ESubmixEffectConvolutionReverbBlockSize_MAX:'ESubmixEffectConvolutionReverbBlockSize_MAX', };
declare class SubmixEffectConvolutionReverbPreset extends SoundEffectSubmixPreset { 
	ImpulseResponse: AudioImpulseResponse;
	Settings: SubmixEffectConvolutionReverbSettings;
	BlockSize: ESubmixEffectConvolutionReverbBlockSize;
	bEnableHardwareAcceleration: boolean;
	static Load(ResourceName: string): SubmixEffectConvolutionReverbPreset;
	static Find(Outer: UObject, ResourceName: string): SubmixEffectConvolutionReverbPreset;
	static GetDefaultObject(): SubmixEffectConvolutionReverbPreset;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SubmixEffectConvolutionReverbPreset;
	SetSettings(InSettings: SubmixEffectConvolutionReverbSettings): void;
	SetImpulseResponse(InImpulseResponse: AudioImpulseResponse): void;
	static C(Other: UObject | any): SubmixEffectConvolutionReverbPreset;
}

declare class SubmixEffectDelaySettings { 
	MaximumDelayLength: number;
	InterpolationTime: number;
	DelayLength: number;
	clone() : SubmixEffectDelaySettings;
	static C(Other: UObject | any): SubmixEffectDelaySettings;
	SetDelayLength(DelayLength?: number): {DelaySettings: SubmixEffectDelaySettings, $: SubmixEffectDelaySettings};
	SetInterpolationTime(InterpolationTime?: number): {DelaySettings: SubmixEffectDelaySettings, $: SubmixEffectDelaySettings};
	SetMaximumDelayLength(MaximumDelayLength?: number): {DelaySettings: SubmixEffectDelaySettings, $: SubmixEffectDelaySettings};
	static SetDelayLength(DelaySettings?: SubmixEffectDelaySettings,DelayLength?: number): {DelaySettings: SubmixEffectDelaySettings, $: SubmixEffectDelaySettings};
	static SetInterpolationTime(DelaySettings?: SubmixEffectDelaySettings,InterpolationTime?: number): {DelaySettings: SubmixEffectDelaySettings, $: SubmixEffectDelaySettings};
	static SetMaximumDelayLength(DelaySettings?: SubmixEffectDelaySettings,MaximumDelayLength?: number): {DelaySettings: SubmixEffectDelaySettings, $: SubmixEffectDelaySettings};
}

declare class SubmixEffectDelayStatics extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): SubmixEffectDelayStatics;
	static Find(Outer: UObject, ResourceName: string): SubmixEffectDelayStatics;
	static GetDefaultObject(): SubmixEffectDelayStatics;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SubmixEffectDelayStatics;
	static SetMaximumDelayLength(DelaySettings?: SubmixEffectDelaySettings,MaximumDelayLength?: number): {DelaySettings: SubmixEffectDelaySettings, $: SubmixEffectDelaySettings};
	static SetInterpolationTime(DelaySettings?: SubmixEffectDelaySettings,InterpolationTime?: number): {DelaySettings: SubmixEffectDelaySettings, $: SubmixEffectDelaySettings};
	static SetDelayLength(DelaySettings?: SubmixEffectDelaySettings,DelayLength?: number): {DelaySettings: SubmixEffectDelaySettings, $: SubmixEffectDelaySettings};
	static C(Other: UObject | any): SubmixEffectDelayStatics;
}

declare class SubmixEffectDelayPreset extends SoundEffectSubmixPreset { 
	Settings: SubmixEffectDelaySettings;
	DynamicSettings: SubmixEffectDelaySettings;
	static Load(ResourceName: string): SubmixEffectDelayPreset;
	static Find(Outer: UObject, ResourceName: string): SubmixEffectDelayPreset;
	static GetDefaultObject(): SubmixEffectDelayPreset;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SubmixEffectDelayPreset;
	SetSettings(InSettings: SubmixEffectDelaySettings): void;
	SetInterpolationTime(Time: number): void;
	SetDelay(Length: number): void;
	SetDefaultSettings(InSettings: SubmixEffectDelaySettings): void;
	GetMaxDelayInMilliseconds(): number;
	static C(Other: UObject | any): SubmixEffectDelayPreset;
}

declare type ESubmixFilterType = 'LowPass' | 'HighPass' | 'BandPass' | 'BandStop' | 'Count' | 'ESubmixFilterType_MAX';
declare var ESubmixFilterType : { LowPass:'LowPass',HighPass:'HighPass',BandPass:'BandPass',BandStop:'BandStop',Count:'Count',ESubmixFilterType_MAX:'ESubmixFilterType_MAX', };
declare type ESubmixFilterAlgorithm = 'OnePole' | 'StateVariable' | 'Ladder' | 'Count' | 'ESubmixFilterAlgorithm_MAX';
declare var ESubmixFilterAlgorithm : { OnePole:'OnePole',StateVariable:'StateVariable',Ladder:'Ladder',Count:'Count',ESubmixFilterAlgorithm_MAX:'ESubmixFilterAlgorithm_MAX', };
declare class SubmixEffectFilterSettings { 
	FilterType: ESubmixFilterType;
	FilterAlgorithm: ESubmixFilterAlgorithm;
	FilterFrequency: number;
	FilterQ: number;
	clone() : SubmixEffectFilterSettings;
	static C(Other: UObject | any): SubmixEffectFilterSettings;
}

declare class SubmixEffectFilterPreset extends SoundEffectSubmixPreset { 
	Settings: SubmixEffectFilterSettings;
	static Load(ResourceName: string): SubmixEffectFilterPreset;
	static Find(Outer: UObject, ResourceName: string): SubmixEffectFilterPreset;
	static GetDefaultObject(): SubmixEffectFilterPreset;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SubmixEffectFilterPreset;
	SetSettings(InSettings: SubmixEffectFilterSettings): void;
	SetFilterType(InType: ESubmixFilterType): void;
	SetFilterQMod(InQ: number): void;
	SetFilterQ(InQ: number): void;
	SetFilterCutoffFrequencyMod(InFrequency: number): void;
	SetFilterCutoffFrequency(InFrequency: number): void;
	SetFilterAlgorithm(InAlgorithm: ESubmixFilterAlgorithm): void;
	static C(Other: UObject | any): SubmixEffectFilterPreset;
}

declare class SubmixEffectFlexiverbSettings { 
	PreDelay: number;
	DecayTime: number;
	RoomDampening: number;
	Complexity: number;
	clone() : SubmixEffectFlexiverbSettings;
	static C(Other: UObject | any): SubmixEffectFlexiverbSettings;
}

declare class SubmixEffectFlexiverbPreset extends SoundEffectSubmixPreset { 
	Settings: SubmixEffectFlexiverbSettings;
	static Load(ResourceName: string): SubmixEffectFlexiverbPreset;
	static Find(Outer: UObject, ResourceName: string): SubmixEffectFlexiverbPreset;
	static GetDefaultObject(): SubmixEffectFlexiverbPreset;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SubmixEffectFlexiverbPreset;
	SetSettings(InSettings: SubmixEffectFlexiverbSettings): void;
	static C(Other: UObject | any): SubmixEffectFlexiverbPreset;
}

declare class DynamicsBandSettings { 
	CrossoverTopFrequency: number;
	AttackTimeMsec: number;
	ReleaseTimeMsec: number;
	ThresholdDb: number;
	Ratio: number;
	KneeBandwidthDb: number;
	InputGainDb: number;
	OutputGainDb: number;
	clone() : DynamicsBandSettings;
	static C(Other: UObject | any): DynamicsBandSettings;
}

declare class SubmixEffectMultibandCompressorSettings { 
	DynamicsProcessorType: ESubmixEffectDynamicsProcessorType;
	PeakMode: ESubmixEffectDynamicsPeakMode;
	LinkMode: ESubmixEffectDynamicsChannelLinkMode;
	LookAheadMsec: number;
	bAnalogMode: boolean;
	bFourPole: boolean;
	bBypass: boolean;
	KeySource: ESubmixEffectDynamicsKeySource;
	ExternalAudioBus: AudioBus;
	ExternalSubmix: SoundSubmix;
	KeyGainDb: number;
	bKeyAudition: boolean;
	Bands: DynamicsBandSettings[];
	clone() : SubmixEffectMultibandCompressorSettings;
	static C(Other: UObject | any): SubmixEffectMultibandCompressorSettings;
}

declare class SubmixEffectMultibandCompressorPreset extends SoundEffectSubmixPreset { 
	Settings: SubmixEffectMultibandCompressorSettings;
	static Load(ResourceName: string): SubmixEffectMultibandCompressorPreset;
	static Find(Outer: UObject, ResourceName: string): SubmixEffectMultibandCompressorPreset;
	static GetDefaultObject(): SubmixEffectMultibandCompressorPreset;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SubmixEffectMultibandCompressorPreset;
	SetSettings(InSettings: SubmixEffectMultibandCompressorSettings): void;
	SetExternalSubmix(Submix: SoundSubmix): void;
	SetAudioBus(AudioBus: AudioBus): void;
	ResetKey(): void;
	static C(Other: UObject | any): SubmixEffectMultibandCompressorPreset;
}

declare class SubmixEffectStereoDelaySettings { 
	DelayMode: EStereoDelaySourceEffect;
	DelayTimeMsec: number;
	Feedback: number;
	DelayRatio: number;
	WetLevel: number;
	DryLevel: number;
	bFilterEnabled: boolean;
	FilterType: EStereoDelayFiltertype;
	FilterFrequency: number;
	FilterQ: number;
	clone() : SubmixEffectStereoDelaySettings;
	static C(Other: UObject | any): SubmixEffectStereoDelaySettings;
}

declare class SubmixEffectStereoDelayPreset extends SoundEffectSubmixPreset { 
	Settings: SubmixEffectStereoDelaySettings;
	static Load(ResourceName: string): SubmixEffectStereoDelayPreset;
	static Find(Outer: UObject, ResourceName: string): SubmixEffectStereoDelayPreset;
	static GetDefaultObject(): SubmixEffectStereoDelayPreset;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SubmixEffectStereoDelayPreset;
	SetSettings(InSettings: SubmixEffectStereoDelaySettings): void;
	static C(Other: UObject | any): SubmixEffectStereoDelayPreset;
}

declare type ETapLineMode = 'SendToChannel' | 'Panning' | 'Disabled' | 'ETapLineMode_MAX';
declare var ETapLineMode : { SendToChannel:'SendToChannel',Panning:'Panning',Disabled:'Disabled',ETapLineMode_MAX:'ETapLineMode_MAX', };
declare class TapDelayInfo { 
	TapLineMode: ETapLineMode;
	DelayLength: number;
	Gain: number;
	OutputChannel: number;
	PanInDegrees: number;
	TapId: number;
	clone() : TapDelayInfo;
	static C(Other: UObject | any): TapDelayInfo;
}

declare class SubmixEffectTapDelaySettings { 
	MaximumDelayLength: number;
	InterpolationTime: number;
	Taps: TapDelayInfo[];
	clone() : SubmixEffectTapDelaySettings;
	static C(Other: UObject | any): SubmixEffectTapDelaySettings;
}

declare class SubmixEffectTapDelayPreset extends SoundEffectSubmixPreset { 
	Settings: SubmixEffectTapDelaySettings;
	static Load(ResourceName: string): SubmixEffectTapDelayPreset;
	static Find(Outer: UObject, ResourceName: string): SubmixEffectTapDelayPreset;
	static GetDefaultObject(): SubmixEffectTapDelayPreset;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SubmixEffectTapDelayPreset;
	SetTap(TapId: number,TapInfo: TapDelayInfo): void;
	SetSettings(InSettings: SubmixEffectTapDelaySettings): void;
	SetInterpolationTime(Time: number): void;
	RemoveTap(TapId: number): void;
	GetTapIds(TapIds?: number[]): {TapIds: number[]};
	GetTap(TapId: number,TapInfo?: TapDelayInfo): {TapInfo: TapDelayInfo};
	GetMaxDelayInMilliseconds(): number;
	AddTap(TapId?: number): {TapId: number};
	static C(Other: UObject | any): SubmixEffectTapDelayPreset;
}

declare class Synth2DSliderStyle extends SlateWidgetStyle { 
	NormalThumbImage: SlateBrush;
	DisabledThumbImage: SlateBrush;
	NormalBarImage: SlateBrush;
	DisabledBarImage: SlateBrush;
	BackgroundImage: SlateBrush;
	BarThickness: number;
	clone() : Synth2DSliderStyle;
	static C(Other: UObject | any): Synth2DSliderStyle;
}

declare class Synth2DSlider extends Widget { 
	ValueX: number;
	ValueY: number;
	ValueXDelegate: UnrealEngineDelegate<() => number>;
	ValueYDelegate: UnrealEngineDelegate<() => number>;
	WidgetStyle: Synth2DSliderStyle;
	SliderHandleColor: LinearColor;
	IndentHandle: boolean;
	Locked: boolean;
	StepSize: number;
	IsFocusable: boolean;
	OnMouseCaptureBegin: UnrealEngineMulticastDelegate<() => void>;
	OnMouseCaptureEnd: UnrealEngineMulticastDelegate<() => void>;
	OnControllerCaptureBegin: UnrealEngineMulticastDelegate<() => void>;
	OnControllerCaptureEnd: UnrealEngineMulticastDelegate<() => void>;
	OnValueChangedX: UnrealEngineMulticastDelegate<(Value: number) => void>;
	OnValueChangedY: UnrealEngineMulticastDelegate<(Value: number) => void>;
	static Load(ResourceName: string): Synth2DSlider;
	static Find(Outer: UObject, ResourceName: string): Synth2DSlider;
	static GetDefaultObject(): Synth2DSlider;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): Synth2DSlider;
	SetValue(InValue: Vector2D): void;
	SetStepSize(InValue: number): void;
	SetSliderHandleColor(InValue: LinearColor): void;
	SetLocked(InValue: boolean): void;
	SetIndentHandle(InValue: boolean): void;
	GetValue(): Vector2D;
	static C(Other: UObject | any): Synth2DSlider;
}

declare type EGranularSynthSeekType = 'FromBeginning' | 'FromCurrentPosition' | 'Count' | 'EGranularSynthSeekType_MAX';
declare var EGranularSynthSeekType : { FromBeginning:'FromBeginning',FromCurrentPosition:'FromCurrentPosition',Count:'Count',EGranularSynthSeekType_MAX:'EGranularSynthSeekType_MAX', };
declare type EGranularSynthEnvelopeType = 'Rectangular' | 'Triangle' | 'DownwardTriangle' | 'UpwardTriangle' | 'ExponentialDecay' | 'ExponentialIncrease' | 'Gaussian' | 'Hanning' | 'Lanczos' | 'Cosine' | 'CosineSquared' | 'Welch' | 'Blackman' | 'BlackmanHarris' | 'Count' | 'EGranularSynthEnvelopeType_MAX';
declare var EGranularSynthEnvelopeType : { Rectangular:'Rectangular',Triangle:'Triangle',DownwardTriangle:'DownwardTriangle',UpwardTriangle:'UpwardTriangle',ExponentialDecay:'ExponentialDecay',ExponentialIncrease:'ExponentialIncrease',Gaussian:'Gaussian',Hanning:'Hanning',Lanczos:'Lanczos',Cosine:'Cosine',CosineSquared:'CosineSquared',Welch:'Welch',Blackman:'Blackman',BlackmanHarris:'BlackmanHarris',Count:'Count',EGranularSynthEnvelopeType_MAX:'EGranularSynthEnvelopeType_MAX', };
declare class GranularSynth extends SynthComponent { 
	GranulatedSoundWave: SoundWave;
	static Load(ResourceName: string): GranularSynth;
	static Find(Outer: UObject, ResourceName: string): GranularSynth;
	static GetDefaultObject(): GranularSynth;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): GranularSynth;
	SetSustainGain(SustainGain: number): void;
	SetSoundWave(InSoundWave: SoundWave): void;
	SetScrubMode(bScrubMode: boolean): void;
	SetReleaseTimeMsec(ReleaseTimeMsec: number): void;
	SetPlayheadTime(InPositionSec: number,LerpTimeSec: number,SeekType: EGranularSynthSeekType): void;
	SetPlaybackSpeed(InPlayheadRate: number): void;
	SetGrainVolume(BaseVolume: number,VolumeRange: Vector2D): void;
	SetGrainsPerSecond(InGrainsPerSecond: number): void;
	SetGrainProbability(InGrainProbability: number): void;
	SetGrainPitch(BasePitch: number,PitchRange: Vector2D): void;
	SetGrainPan(BasePan: number,PanRange: Vector2D): void;
	SetGrainEnvelopeType(EnvelopeType: EGranularSynthEnvelopeType): void;
	SetGrainDuration(BaseDurationMsec: number,DurationRange: Vector2D): void;
	SetDecayTime(DecayTimeMsec: number): void;
	SetAttackTime(AttackTimeMsec: number): void;
	NoteOn(Note: number,Velocity: number,Duration: number): void;
	NoteOff(Note: number,bKill: boolean): void;
	IsLoaded(): boolean;
	GetSampleDuration(): number;
	GetCurrentPlayheadTime(): number;
	static C(Other: UObject | any): GranularSynth;
}

declare class MonoWaveTableSynthPreset extends UObject { 
	PresetName: string;
	bLockKeyframesToGridBool: boolean;
	LockKeyframesToGrid: number;
	WaveTableResolution: number;
	WaveTable: RuntimeFloatCurve[];
	bNormalizeWaveTables: boolean;
	static Load(ResourceName: string): MonoWaveTableSynthPreset;
	static Find(Outer: UObject, ResourceName: string): MonoWaveTableSynthPreset;
	static GetDefaultObject(): MonoWaveTableSynthPreset;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MonoWaveTableSynthPreset;
	static C(Other: UObject | any): MonoWaveTableSynthPreset;
}

declare type CurveInterpolationType = 'AUTOINTERP' | 'LINEAR' | 'CONSTANT' | 'CurveInterpolationType_MAX';
declare var CurveInterpolationType : { AUTOINTERP:'AUTOINTERP',LINEAR:'LINEAR',CONSTANT:'CONSTANT',CurveInterpolationType_MAX:'CurveInterpolationType_MAX', };
declare class SynthComponentMonoWaveTable extends SynthComponent { 
	OnTableAltered: UnrealEngineMulticastDelegate<(TableIndex: number) => void>;
	OnNumTablesChanged: UnrealEngineMulticastDelegate<() => void>;
	CurrentPreset: MonoWaveTableSynthPreset;
	static Load(ResourceName: string): SynthComponentMonoWaveTable;
	static Find(Outer: UObject, ResourceName: string): SynthComponentMonoWaveTable;
	static GetDefaultObject(): SynthComponentMonoWaveTable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SynthComponentMonoWaveTable;
	SetWaveTablePosition(InPosition: number): void;
	SetSustainPedalState(InSustainPedalState: boolean): void;
	SetPosLfoType(InLfoType: ESynthLFOType): void;
	SetPosLfoFrequency(InLfoFrequency: number): void;
	SetPosLfoDepth(InLfoDepth: number): void;
	SetPositionEnvelopeSustainGain(InSustainGain: number): void;
	SetPositionEnvelopeReleaseTime(InReleaseTimeMsec: number): void;
	SetPositionEnvelopeInvert(bInInvert: boolean): void;
	SetPositionEnvelopeDepth(InDepth: number): void;
	SetPositionEnvelopeDecayTime(InDecayTimeMsec: number): void;
	SetPositionEnvelopeBiasInvert(bInBiasInvert: boolean): void;
	SetPositionEnvelopeBiasDepth(InDepth: number): void;
	SetPositionEnvelopeAttackTime(InAttackTimeMsec: number): void;
	SetLowPassFilterResonance(InNewQ: number): void;
	SetFrequencyWithMidiNote(InMidiNote: number): void;
	SetFrequencyPitchBend(FrequencyOffsetCents: number): void;
	SetFrequency(FrequencyHz: number): void;
	SetFilterEnvelopeSustainGain(InSustainGain: number): void;
	SetFilterEnvelopeReleaseTime(InReleaseTimeMsec: number): void;
	SetFilterEnvelopenDecayTime(InDecayTimeMsec: number): void;
	SetFilterEnvelopeInvert(bInInvert: boolean): void;
	SetFilterEnvelopeDepth(InDepth: number): void;
	SetFilterEnvelopeBiasInvert(bInBiasInvert: boolean): void;
	SetFilterEnvelopeBiasDepth(InDepth: number): void;
	SetFilterEnvelopeAttackTime(InAttackTimeMsec: number): void;
	SetCurveValue(TableIndex: number,KeyframeIndex: number,NewValue: number): boolean;
	SetCurveTangent(TableIndex: number,InNewTangent: number): boolean;
	SetCurveInterpolationType(InterpolationType: CurveInterpolationType,TableIndex: number): boolean;
	SetAmpEnvelopeSustainGain(InSustainGain: number): void;
	SetAmpEnvelopeReleaseTime(InReleaseTimeMsec: number): void;
	SetAmpEnvelopeInvert(bInInvert: boolean): void;
	SetAmpEnvelopeDepth(InDepth: number): void;
	SetAmpEnvelopeDecayTime(InDecayTimeMsec: number): void;
	SetAmpEnvelopeBiasInvert(bInBiasInvert: boolean): void;
	SetAmpEnvelopeBiasDepth(InDepth: number): void;
	SetAmpEnvelopeAttackTime(InAttackTimeMsec: number): void;
	RefreshWaveTable(index: number): void;
	RefreshAllWaveTables(): void;
	NoteOn(InMidiNote: number,InVelocity: number): void;
	NoteOff(InMidiNote: number): void;
	GetNumTableEntries(): number;
	GetMaxTableIndex(): number;
	GetKeyFrameValuesForTable(TableIndex: number): number[];
	GetCurveTangent(TableIndex: number): number;
	static C(Other: UObject | any): SynthComponentMonoWaveTable;
}

declare class SynthComponentToneGenerator extends SynthComponent { 
	Frequency: number;
	Volume: number;
	DistanceAttenuationCurve: RuntimeFloatCurve;
	DistanceRange: Vector2D;
	AttenuationDbAtMaxRange: number;
	static Load(ResourceName: string): SynthComponentToneGenerator;
	static Find(Outer: UObject, ResourceName: string): SynthComponentToneGenerator;
	static GetDefaultObject(): SynthComponentToneGenerator;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SynthComponentToneGenerator;
	SetVolume(InVolume: number): void;
	SetFrequency(InFrequency: number): void;
	static C(Other: UObject | any): SynthComponentToneGenerator;
}

declare type ESamplePlayerSeekType = 'FromBeginning' | 'FromCurrentPosition' | 'FromEnd' | 'Count' | 'ESamplePlayerSeekType_MAX';
declare var ESamplePlayerSeekType : { FromBeginning:'FromBeginning',FromCurrentPosition:'FromCurrentPosition',FromEnd:'FromEnd',Count:'Count',ESamplePlayerSeekType_MAX:'ESamplePlayerSeekType_MAX', };
declare class SynthSamplePlayer extends SynthComponent { 
	SoundWave: SoundWave;
	OnSampleLoaded: UnrealEngineMulticastDelegate<() => void>;
	OnSamplePlaybackProgress: UnrealEngineMulticastDelegate<(ProgressPercent: number, ProgressTimeSeconds: number) => void>;
	static Load(ResourceName: string): SynthSamplePlayer;
	static Find(Outer: UObject, ResourceName: string): SynthSamplePlayer;
	static GetDefaultObject(): SynthSamplePlayer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SynthSamplePlayer;
	SetSoundWave(InSoundWave: SoundWave): void;
	SetScrubTimeWidth(InScrubTimeWidthSec: number): void;
	SetScrubMode(bScrubMode: boolean): void;
	SetPitch(InPitch: number,TimeSec: number): void;
	SeekToTime(TimeSec: number,SeekType: ESamplePlayerSeekType,bWrap: boolean): void;
	IsLoaded(): boolean;
	GetSampleDuration(): number;
	GetCurrentPlaybackProgressTime(): number;
	GetCurrentPlaybackProgressPercent(): number;
	static C(Other: UObject | any): SynthSamplePlayer;
}

declare class SynthesisUtilitiesBlueprintFunctionLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): SynthesisUtilitiesBlueprintFunctionLibrary;
	static Find(Outer: UObject, ResourceName: string): SynthesisUtilitiesBlueprintFunctionLibrary;
	static GetDefaultObject(): SynthesisUtilitiesBlueprintFunctionLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SynthesisUtilitiesBlueprintFunctionLibrary;
	static GetLogFrequency(InLinearValue: number,InDomainMin: number,InDomainMax: number,InRangeMin: number,InRangeMax: number): number;
	static GetLinearFrequency(InLogFrequencyValue: number,InDomainMin: number,InDomainMax: number,InRangeMin: number,InRangeMax: number): number;
	static C(Other: UObject | any): SynthesisUtilitiesBlueprintFunctionLibrary;
}

declare type ESynthKnobSize = 'Medium' | 'Large' | 'Count' | 'ESynthKnobSize_MAX';
declare var ESynthKnobSize : { Medium:'Medium',Large:'Large',Count:'Count',ESynthKnobSize_MAX:'ESynthKnobSize_MAX', };
declare class SynthKnobStyle extends SlateWidgetStyle { 
	LargeKnob: SlateBrush;
	LargeKnobOverlay: SlateBrush;
	MediumKnob: SlateBrush;
	MediumKnobOverlay: SlateBrush;
	MinValueAngle: number;
	MaxValueAngle: number;
	KnobSize: ESynthKnobSize;
	clone() : SynthKnobStyle;
	static C(Other: UObject | any): SynthKnobStyle;
}

declare class SynthKnob extends Widget { 
	Value: number;
	StepSize: number;
	MouseSpeed: number;
	MouseFineTuneSpeed: number;
	ShowTooltipInfo: boolean;
	ParameterName: string;
	ParameterUnits: string;
	ValueDelegate: UnrealEngineDelegate<() => number>;
	WidgetStyle: SynthKnobStyle;
	Locked: boolean;
	IsFocusable: boolean;
	OnMouseCaptureBegin: UnrealEngineMulticastDelegate<() => void>;
	OnMouseCaptureEnd: UnrealEngineMulticastDelegate<() => void>;
	OnControllerCaptureBegin: UnrealEngineMulticastDelegate<() => void>;
	OnControllerCaptureEnd: UnrealEngineMulticastDelegate<() => void>;
	OnValueChanged: UnrealEngineMulticastDelegate<(Value: number) => void>;
	static Load(ResourceName: string): SynthKnob;
	static Find(Outer: UObject, ResourceName: string): SynthKnob;
	static GetDefaultObject(): SynthKnob;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SynthKnob;
	SetValue(InValue: number): void;
	SetStepSize(InValue: number): void;
	SetLocked(InValue: boolean): void;
	GetValue(): number;
	static C(Other: UObject | any): SynthKnob;
}

declare class NumTablesChanged__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): NumTablesChanged__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): NumTablesChanged__PythonCallable;
	static GetDefaultObject(): NumTablesChanged__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NumTablesChanged__PythonCallable;
	static C(Other: UObject | any): NumTablesChanged__PythonCallable;
}

declare class OnControllerCaptureBeginEventSynth2D__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnControllerCaptureBeginEventSynth2D__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnControllerCaptureBeginEventSynth2D__PythonCallable;
	static GetDefaultObject(): OnControllerCaptureBeginEventSynth2D__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnControllerCaptureBeginEventSynth2D__PythonCallable;
	static C(Other: UObject | any): OnControllerCaptureBeginEventSynth2D__PythonCallable;
}

declare class OnControllerCaptureEndEventSynth2D__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnControllerCaptureEndEventSynth2D__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnControllerCaptureEndEventSynth2D__PythonCallable;
	static GetDefaultObject(): OnControllerCaptureEndEventSynth2D__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnControllerCaptureEndEventSynth2D__PythonCallable;
	static C(Other: UObject | any): OnControllerCaptureEndEventSynth2D__PythonCallable;
}

declare class OnEnvelopeFollowerUpdate__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnEnvelopeFollowerUpdate__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnEnvelopeFollowerUpdate__PythonCallable;
	static GetDefaultObject(): OnEnvelopeFollowerUpdate__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnEnvelopeFollowerUpdate__PythonCallable;
	static C(Other: UObject | any): OnEnvelopeFollowerUpdate__PythonCallable;
}

declare class OnFloatValueChangedEventSynth2D__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnFloatValueChangedEventSynth2D__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnFloatValueChangedEventSynth2D__PythonCallable;
	static GetDefaultObject(): OnFloatValueChangedEventSynth2D__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnFloatValueChangedEventSynth2D__PythonCallable;
	static C(Other: UObject | any): OnFloatValueChangedEventSynth2D__PythonCallable;
}

declare class OnMouseCaptureBeginEventSynth2D__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnMouseCaptureBeginEventSynth2D__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnMouseCaptureBeginEventSynth2D__PythonCallable;
	static GetDefaultObject(): OnMouseCaptureBeginEventSynth2D__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnMouseCaptureBeginEventSynth2D__PythonCallable;
	static C(Other: UObject | any): OnMouseCaptureBeginEventSynth2D__PythonCallable;
}

declare class OnMouseCaptureEndEventSynth2D__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnMouseCaptureEndEventSynth2D__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnMouseCaptureEndEventSynth2D__PythonCallable;
	static GetDefaultObject(): OnMouseCaptureEndEventSynth2D__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnMouseCaptureEndEventSynth2D__PythonCallable;
	static C(Other: UObject | any): OnMouseCaptureEndEventSynth2D__PythonCallable;
}

declare class OnSampleLoaded__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnSampleLoaded__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnSampleLoaded__PythonCallable;
	static GetDefaultObject(): OnSampleLoaded__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnSampleLoaded__PythonCallable;
	static C(Other: UObject | any): OnSampleLoaded__PythonCallable;
}

declare class OnSamplePlaybackProgress__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnSamplePlaybackProgress__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnSamplePlaybackProgress__PythonCallable;
	static GetDefaultObject(): OnSamplePlaybackProgress__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnSamplePlaybackProgress__PythonCallable;
	static C(Other: UObject | any): OnSamplePlaybackProgress__PythonCallable;
}

declare class OnTableAltered__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnTableAltered__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnTableAltered__PythonCallable;
	static GetDefaultObject(): OnTableAltered__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnTableAltered__PythonCallable;
	static C(Other: UObject | any): OnTableAltered__PythonCallable;
}

declare class AudioImpulseResponseFactory extends Factory { 
	static Load(ResourceName: string): AudioImpulseResponseFactory;
	static Find(Outer: UObject, ResourceName: string): AudioImpulseResponseFactory;
	static GetDefaultObject(): AudioImpulseResponseFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): AudioImpulseResponseFactory;
	static C(Other: UObject | any): AudioImpulseResponseFactory;
}

declare class ModularSynthPresetBankFactory extends Factory { 
	static Load(ResourceName: string): ModularSynthPresetBankFactory;
	static Find(Outer: UObject, ResourceName: string): ModularSynthPresetBankFactory;
	static GetDefaultObject(): ModularSynthPresetBankFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ModularSynthPresetBankFactory;
	static C(Other: UObject | any): ModularSynthPresetBankFactory;
}

declare class MonoWaveTableSynthPresetFactory extends Factory { 
	static Load(ResourceName: string): MonoWaveTableSynthPresetFactory;
	static Find(Outer: UObject, ResourceName: string): MonoWaveTableSynthPresetFactory;
	static GetDefaultObject(): MonoWaveTableSynthPresetFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MonoWaveTableSynthPresetFactory;
	static C(Other: UObject | any): MonoWaveTableSynthPresetFactory;
}

declare class SynthesisEditorSettings extends DeveloperSettings { 
	static Load(ResourceName: string): SynthesisEditorSettings;
	static Find(Outer: UObject, ResourceName: string): SynthesisEditorSettings;
	static GetDefaultObject(): SynthesisEditorSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SynthesisEditorSettings;
	static C(Other: UObject | any): SynthesisEditorSettings;
}

declare class RCPropertyContainerBase extends UObject { 
	static Load(ResourceName: string): RCPropertyContainerBase;
	static Find(Outer: UObject, ResourceName: string): RCPropertyContainerBase;
	static GetDefaultObject(): RCPropertyContainerBase;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RCPropertyContainerBase;
	static C(Other: UObject | any): RCPropertyContainerBase;
}

declare class RCPropertyContainerRegistry extends EngineSubsystem { 
	CachedContainerClasses: any;
	static Load(ResourceName: string): RCPropertyContainerRegistry;
	static Find(Outer: UObject, ResourceName: string): RCPropertyContainerRegistry;
	static GetDefaultObject(): RCPropertyContainerRegistry;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RCPropertyContainerRegistry;
	static C(Other: UObject | any): RCPropertyContainerRegistry;
}

declare class PropertyContainerTestObject extends UObject { 
	bSomeBool: boolean;
	SomeUInt32: any;
	SomeFloat: number;
	SomeVector: Vector;
	SomeRotator: Rotator;
	SomeClampedInt: number;
	SomeClampedInt2: number;
	SomeUIClampedInt: number;
	SomeClampedFloat: number;
	SomeUIClampedFloat: number;
	SomeClampedFloat2: number;
	SomeString: string;
	SomeText: string;
	SomeFloatArray: number[];
	static Load(ResourceName: string): PropertyContainerTestObject;
	static Find(Outer: UObject, ResourceName: string): PropertyContainerTestObject;
	static GetDefaultObject(): PropertyContainerTestObject;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PropertyContainerTestObject;
	static C(Other: UObject | any): PropertyContainerTestObject;
}

declare class RCPassphrase { 
	Identifier: string;
	Passphrase: string;
	clone() : RCPassphrase;
	static C(Other: UObject | any): RCPassphrase;
}

declare class RemoteControlSettings extends DeveloperSettings { 
	bProtocolsGenerateTransactions: boolean;
	RemoteControlWebInterfacePort: any;
	bForceWebAppBuildAtStartup: boolean;
	bWebAppLogRequestDuration: boolean;
	bUseRemoteControlPassphrase: boolean;
	bShowPassphraseDisabledWarning: boolean;
	bAutoStartWebServer: boolean;
	bAutoStartWebSocketServer: boolean;
	RemoteControlHttpServerPort: any;
	RemoteControlWebSocketServerPort: any;
	bDisplayInEditorOnlyWarnings: boolean;
	TreeBindingSplitRatio: number;
	bUseRebindingContext: boolean;
	Passphrases: RCPassphrase[];
	static Load(ResourceName: string): RemoteControlSettings;
	static Find(Outer: UObject, ResourceName: string): RemoteControlSettings;
	static GetDefaultObject(): RemoteControlSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RemoteControlSettings;
	static C(Other: UObject | any): RemoteControlSettings;
}

declare class RemoteControlBinding extends UObject { 
	Name: string;
	static Load(ResourceName: string): RemoteControlBinding;
	static Find(Outer: UObject, ResourceName: string): RemoteControlBinding;
	static GetDefaultObject(): RemoteControlBinding;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RemoteControlBinding;
	static C(Other: UObject | any): RemoteControlBinding;
}

declare class RemoteControlLevelIndependantBinding extends RemoteControlBinding { 
	BoundObject: UObject;
	static Load(ResourceName: string): RemoteControlLevelIndependantBinding;
	static Find(Outer: UObject, ResourceName: string): RemoteControlLevelIndependantBinding;
	static GetDefaultObject(): RemoteControlLevelIndependantBinding;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RemoteControlLevelIndependantBinding;
	static C(Other: UObject | any): RemoteControlLevelIndependantBinding;
}

declare class RemoteControlInitialBindingContext { 
	SupportedClass: Class;
	ComponentName: string;
	OwnerActorClass: Class;
	OwnerActorName: string;
	clone() : RemoteControlInitialBindingContext;
	static C(Other: UObject | any): RemoteControlInitialBindingContext;
}

declare class RemoteControlLevelDependantBinding extends RemoteControlBinding { 
	BoundObjectMap: any;
	SubLevelSelectionMap: any;
	LevelWithLastSuccessfulResolve: Level;
	BindingContext: RemoteControlInitialBindingContext;
	static Load(ResourceName: string): RemoteControlLevelDependantBinding;
	static Find(Outer: UObject, ResourceName: string): RemoteControlLevelDependantBinding;
	static GetDefaultObject(): RemoteControlLevelDependantBinding;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RemoteControlLevelDependantBinding;
	static C(Other: UObject | any): RemoteControlLevelDependantBinding;
}

declare class RemoteControlDeltaAPITestStruct { 
	ColorValue: LinearColor;
	clone() : RemoteControlDeltaAPITestStruct;
	static C(Other: UObject | any): RemoteControlDeltaAPITestStruct;
}

declare class RemoteControlDeltaAPITestObject extends UObject { 
	Int32Value: number;
	FloatValue: number;
	VectorValue: Vector;
	ColorValue: LinearColor;
	StructValue: RemoteControlDeltaAPITestStruct;
	Int32WithSetterValue: number;
	static Load(ResourceName: string): RemoteControlDeltaAPITestObject;
	static Find(Outer: UObject, ResourceName: string): RemoteControlDeltaAPITestObject;
	static GetDefaultObject(): RemoteControlDeltaAPITestObject;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RemoteControlDeltaAPITestObject;
	SetInt32WithSetterValue(NewValue: number): void;
	GetInt32WithSetterValue(): number;
	static C(Other: UObject | any): RemoteControlDeltaAPITestObject;
}

declare class RemoteControlExposeRegistry extends UObject { 
	ExposedEntities: any;
	LabelToIdCache: any;
	ExposedTypes: any;
	static Load(ResourceName: string): RemoteControlExposeRegistry;
	static Find(Outer: UObject, ResourceName: string): RemoteControlExposeRegistry;
	static GetDefaultObject(): RemoteControlExposeRegistry;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RemoteControlExposeRegistry;
	static C(Other: UObject | any): RemoteControlExposeRegistry;
}

declare class RemoteControlPresetGroup { 
	Name: string;
	ID: Guid;
	Fields: Guid[];
	clone() : RemoteControlPresetGroup;
	static C(Other: UObject | any): RemoteControlPresetGroup;
}

declare class RemoteControlPresetLayout { 
	Groups: RemoteControlPresetGroup[];
	Owner: any;
	clone() : RemoteControlPresetLayout;
	static C(Other: UObject | any): RemoteControlPresetLayout;
}

declare class RemoteControlOptionalExposeArgs { 
	DisplayName: string;
	GroupName: string;
	clone() : RemoteControlOptionalExposeArgs;
	static C(Other: UObject | any): RemoteControlOptionalExposeArgs;
}

declare class RemoteControlPreset extends UObject { 
	Layout: RemoteControlPresetLayout;
	MetaData: any;
	Bindings: RemoteControlBinding[];
	PresetId: Guid;
	RemoteControlTargets: any;
	FieldCache: any;
	NameToGuidMap: any;
	Registry: RemoteControlExposeRegistry;
	static Load(ResourceName: string): RemoteControlPreset;
	static Find(Outer: UObject, ResourceName: string): RemoteControlPreset;
	static GetDefaultObject(): RemoteControlPreset;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RemoteControlPreset;
	static C(Other: UObject | any): RemoteControlPreset;
	ExposeActor(Actor: Actor,Args: RemoteControlOptionalExposeArgs): boolean;
	ExposeFunction(SourceObject: UObject,UFunction: string,Args: RemoteControlOptionalExposeArgs): boolean;
	ExposeProperty(SourceObject: UObject,Property: string,Args: RemoteControlOptionalExposeArgs): boolean;
	static ExposeActor(Preset: RemoteControlPreset,Actor: Actor,Args: RemoteControlOptionalExposeArgs): boolean;
	static ExposeFunction(Preset: RemoteControlPreset,SourceObject: UObject,UFunction: string,Args: RemoteControlOptionalExposeArgs): boolean;
	static ExposeProperty(Preset: RemoteControlPreset,SourceObject: UObject,Property: string,Args: RemoteControlOptionalExposeArgs): boolean;
}

declare class RemoteControlFunctionLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): RemoteControlFunctionLibrary;
	static Find(Outer: UObject, ResourceName: string): RemoteControlFunctionLibrary;
	static GetDefaultObject(): RemoteControlFunctionLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RemoteControlFunctionLibrary;
	static ExposeProperty(Preset: RemoteControlPreset,SourceObject: UObject,Property: string,Args: RemoteControlOptionalExposeArgs): boolean;
	static ExposeFunction(Preset: RemoteControlPreset,SourceObject: UObject,UFunction: string,Args: RemoteControlOptionalExposeArgs): boolean;
	static ExposeActor(Preset: RemoteControlPreset,Actor: Actor,Args: RemoteControlOptionalExposeArgs): boolean;
	static C(Other: UObject | any): RemoteControlFunctionLibrary;
}

declare class RemoteControlInterceptionTestStruct { 
	Int32Value: number;
	clone() : RemoteControlInterceptionTestStruct;
	static C(Other: UObject | any): RemoteControlInterceptionTestStruct;
}

declare class RemoteControlInterceptionFunctionParamStruct { 
	Int32Value: number;
	IntArray: number[];
	IntString: string;
	clone() : RemoteControlInterceptionFunctionParamStruct;
	static C(Other: UObject | any): RemoteControlInterceptionFunctionParamStruct;
}

declare class RemoteControlInterceptionTestObject extends UObject { 
	CustomStruct: RemoteControlInterceptionTestStruct;
	FunctionParamStruct: RemoteControlInterceptionFunctionParamStruct;
	static Load(ResourceName: string): RemoteControlInterceptionTestObject;
	static Find(Outer: UObject, ResourceName: string): RemoteControlInterceptionTestObject;
	static GetDefaultObject(): RemoteControlInterceptionTestObject;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RemoteControlInterceptionTestObject;
	TestFunction(InStruct: RemoteControlInterceptionFunctionParamStruct,InTestFactor: number): RemoteControlInterceptionFunctionParamStruct;
	static C(Other: UObject | any): RemoteControlInterceptionTestObject;
}

declare class RemoteControlPresetActor extends Actor { 
	Preset: RemoteControlPreset;
	static GetDefaultObject(): RemoteControlPresetActor;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RemoteControlPresetActor;
	static C(Other: UObject | any): RemoteControlPresetActor;
}

declare class RemoteControlTestStructInnerSimple { 
	Int32Value: number;
	clone() : RemoteControlTestStructInnerSimple;
	static C(Other: UObject | any): RemoteControlTestStructInnerSimple;
}

declare class RemoteControlTestStructInner { 
	Int8Value: any;
	InnerSimple: RemoteControlTestStructInnerSimple;
	Int32Value: number;
	clone() : RemoteControlTestStructInner;
	static C(Other: UObject | any): RemoteControlTestStructInner;
}

declare class RemoteControlTestStructOuter { 
	Int8Value: any;
	StructInnerSet: any;
	Int32Value: number;
	RemoteControlTestStructInner: RemoteControlTestStructInner;
	clone() : RemoteControlTestStructOuter;
	static C(Other: UObject | any): RemoteControlTestStructOuter;
}

declare type ERemoteControlEnum = 'E_One' | 'E_Two' | 'E_Three' | 'E_MAX';
declare var ERemoteControlEnum : { E_One:'E_One',E_Two:'E_Two',E_Three:'E_Three',E_MAX:'E_MAX', };
declare type ERemoteControlEnumClass = 'E_One' | 'E_Two' | 'E_Three' | 'E_MAX';
declare var ERemoteControlEnumClass : { E_One:'E_One',E_Two:'E_Two',E_Three:'E_Three',E_MAX:'E_MAX', };
declare class RemoteControlAPITestObject extends UObject { 
	CStyleIntArray: number;
	IntArray: number[];
	StructOuterArray: RemoteControlTestStructOuter[];
	IntSet: any;
	IntMap: any;
	StructOuterMap: any;
	StringColorMap: any;
	ArrayOfVectors: Vector[];
	Int8Value: any;
	Int16Value: any;
	Int32Value: number;
	FloatValue: number;
	DoubleValue: any;
	RemoteControlTestStructOuter: RemoteControlTestStructOuter;
	StringValue: string;
	NameValue: string;
	TextValue: string;
	bValue: boolean;
	ByteValue: number;
	RemoteControlEnumByteValue: ERemoteControlEnum;
	RemoteControlEnumValue: ERemoteControlEnumClass;
	VectorValue: Vector;
	RotatorValue: Rotator;
	ColorValue: Color;
	LinearColorValue: LinearColor;
	static Load(ResourceName: string): RemoteControlAPITestObject;
	static Find(Outer: UObject, ResourceName: string): RemoteControlAPITestObject;
	static GetDefaultObject(): RemoteControlAPITestObject;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RemoteControlAPITestObject;
	static C(Other: UObject | any): RemoteControlAPITestObject;
}

declare class RemoteControlTestObject extends UObject { 
	CStyleIntArray: number;
	IntArray: number[];
	FloatArray: number[];
	IntSet: any;
	IntMap: any;
	IntInnerStructMap: any;
	StringColorMap: any;
	static Load(ResourceName: string): RemoteControlTestObject;
	static Find(Outer: UObject, ResourceName: string): RemoteControlTestObject;
	static GetDefaultObject(): RemoteControlTestObject;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RemoteControlTestObject;
	static C(Other: UObject | any): RemoteControlTestObject;
}

declare class WebRCStructRegistry extends EngineSubsystem { 
	CachedStructs: any;
	static Load(ResourceName: string): WebRCStructRegistry;
	static Find(Outer: UObject, ResourceName: string): WebRCStructRegistry;
	static GetDefaultObject(): WebRCStructRegistry;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): WebRCStructRegistry;
	static C(Other: UObject | any): WebRCStructRegistry;
}

declare class RemoteControlPresetActorFactory extends ActorFactory { 
	static Load(ResourceName: string): RemoteControlPresetActorFactory;
	static Find(Outer: UObject, ResourceName: string): RemoteControlPresetActorFactory;
	static GetDefaultObject(): RemoteControlPresetActorFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RemoteControlPresetActorFactory;
	static C(Other: UObject | any): RemoteControlPresetActorFactory;
}

declare class RemoteControlPresetFactory extends Factory { 
	static Load(ResourceName: string): RemoteControlPresetFactory;
	static Find(Outer: UObject, ResourceName: string): RemoteControlPresetFactory;
	static GetDefaultObject(): RemoteControlPresetFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RemoteControlPresetFactory;
	static C(Other: UObject | any): RemoteControlPresetFactory;
}

declare class RemoteControlProtocolWidgetsSettings extends UObject { 
	HiddenProtocolTypeNames: any;
	PreferredProtocol: string;
	static Load(ResourceName: string): RemoteControlProtocolWidgetsSettings;
	static Find(Outer: UObject, ResourceName: string): RemoteControlProtocolWidgetsSettings;
	static GetDefaultObject(): RemoteControlProtocolWidgetsSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RemoteControlProtocolWidgetsSettings;
	static C(Other: UObject | any): RemoteControlProtocolWidgetsSettings;
}

declare type ERemoteControlMIDIDeviceSelector = 'ProjectSettings' | 'DeviceName' | 'DeviceId' | 'ERemoteControlMIDIDeviceSelector_MAX';
declare var ERemoteControlMIDIDeviceSelector : { ProjectSettings:'ProjectSettings',DeviceName:'DeviceName',DeviceId:'DeviceId',ERemoteControlMIDIDeviceSelector_MAX:'ERemoteControlMIDIDeviceSelector_MAX', };
declare class RemoteControlMIDIDevice { 
	DeviceSelector: ERemoteControlMIDIDeviceSelector;
	ResolvedDeviceId: number;
	DeviceName: string;
	DeviceID: number;
	bDeviceIsAvailable: boolean;
	clone() : RemoteControlMIDIDevice;
	static C(Other: UObject | any): RemoteControlMIDIDevice;
}

declare class RemoteControlProtocolMIDISettings extends UObject { 
	DefaultDevice: RemoteControlMIDIDevice;
	static Load(ResourceName: string): RemoteControlProtocolMIDISettings;
	static Find(Outer: UObject, ResourceName: string): RemoteControlProtocolMIDISettings;
	static GetDefaultObject(): RemoteControlProtocolMIDISettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): RemoteControlProtocolMIDISettings;
	static C(Other: UObject | any): RemoteControlProtocolMIDISettings;
}

declare class ContentBrowserAssetDataSource extends ContentBrowserDataSource { 
	static Load(ResourceName: string): ContentBrowserAssetDataSource;
	static Find(Outer: UObject, ResourceName: string): ContentBrowserAssetDataSource;
	static GetDefaultObject(): ContentBrowserAssetDataSource;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ContentBrowserAssetDataSource;
	static C(Other: UObject | any): ContentBrowserAssetDataSource;
}

declare class ContentBrowserClassDataSource extends ContentBrowserDataSource { 
	static Load(ResourceName: string): ContentBrowserClassDataSource;
	static Find(Outer: UObject, ResourceName: string): ContentBrowserClassDataSource;
	static GetDefaultObject(): ContentBrowserClassDataSource;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): ContentBrowserClassDataSource;
	static C(Other: UObject | any): ContentBrowserClassDataSource;
}

declare class InterchangeGraphInspectorPipeline extends InterchangePipelineBase { 
	static Load(ResourceName: string): InterchangeGraphInspectorPipeline;
	static Find(Outer: UObject, ResourceName: string): InterchangeGraphInspectorPipeline;
	static GetDefaultObject(): InterchangeGraphInspectorPipeline;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeGraphInspectorPipeline;
	static C(Other: UObject | any): InterchangeGraphInspectorPipeline;
}

declare class InterchangePipelineConfigurationGeneric extends InterchangePipelineConfigurationBase { 
	static Load(ResourceName: string): InterchangePipelineConfigurationGeneric;
	static Find(Outer: UObject, ResourceName: string): InterchangePipelineConfigurationGeneric;
	static GetDefaultObject(): InterchangePipelineConfigurationGeneric;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangePipelineConfigurationGeneric;
	static C(Other: UObject | any): InterchangePipelineConfigurationGeneric;
}

declare class InterchangeActorFactoryNode extends InterchangeBaseNode { 
	static Load(ResourceName: string): InterchangeActorFactoryNode;
	static Find(Outer: UObject, ResourceName: string): InterchangeActorFactoryNode;
	static GetDefaultObject(): InterchangeActorFactoryNode;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeActorFactoryNode;
	SetCustomGlobalTransform(AttributeValue: Transform): boolean;
	SetCustomActorClassName(AttributeValue: string): boolean;
	GetCustomGlobalTransform(AttributeValue?: Transform): {AttributeValue: Transform, $: boolean};
	GetCustomActorClassName(AttributeValue?: string): {AttributeValue: string, $: boolean};
	static C(Other: UObject | any): InterchangeActorFactoryNode;
}

declare class InterchangeCameraNode extends InterchangeBaseNode { 
	static Load(ResourceName: string): InterchangeCameraNode;
	static Find(Outer: UObject, ResourceName: string): InterchangeCameraNode;
	static GetDefaultObject(): InterchangeCameraNode;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeCameraNode;
	static C(Other: UObject | any): InterchangeCameraNode;
}

declare class InterchangeLightNode extends InterchangeBaseNode { 
	static Load(ResourceName: string): InterchangeLightNode;
	static Find(Outer: UObject, ResourceName: string): InterchangeLightNode;
	static GetDefaultObject(): InterchangeLightNode;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeLightNode;
	static C(Other: UObject | any): InterchangeLightNode;
}

declare class InterchangeMaterialFactoryNode extends InterchangeBaseNode { 
	static Load(ResourceName: string): InterchangeMaterialFactoryNode;
	static Find(Outer: UObject, ResourceName: string): InterchangeMaterialFactoryNode;
	static GetDefaultObject(): InterchangeMaterialFactoryNode;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeMaterialFactoryNode;
	SetTextureDependencyUid(DependencyUid: string): boolean;
	SetCustomTranslatedMaterialNodeUid(AttributeValue: string): boolean;
	SetCustomMaterialUsage(AttributeValue: number,bAddApplyDelegate: boolean): boolean;
	SetCustomBlendMode(AttributeValue: number,bAddApplyDelegate: boolean): boolean;
	RemoveTextureDependencyUid(DependencyUid: string): boolean;
	InitializeMaterialNode(UniqueId: string,DisplayLabel: string,InAssetClass: string): void;
	GetTextureDependency(index: number,OutDependency?: string): {OutDependency: string};
	GetTextureDependencies(OutDependencies?: string[]): {OutDependencies: string[]};
	GetTextureDependeciesCount(): number;
	GetObjectClass(): UnrealEngineClass;
	GetCustomTranslatedMaterialNodeUid(AttributeValue?: string): {AttributeValue: string, $: boolean};
	GetCustomMaterialUsage(AttributeValue?: number): {AttributeValue: number, $: boolean};
	GetCustomBlendMode(AttributeValue?: number): {AttributeValue: number, $: boolean};
	static C(Other: UObject | any): InterchangeMaterialFactoryNode;
}

declare type EInterchangeMaterialNodeParameterName = 'BaseColor' | 'EmissiveColor' | 'Specular' | 'Roughness' | 'Metallic' | 'Normal' | 'Opacity' | 'OpacityMask' | 'EInterchangeMaterialNodeParameterName_MAX';
declare var EInterchangeMaterialNodeParameterName : { BaseColor:'BaseColor',EmissiveColor:'EmissiveColor',Specular:'Specular',Roughness:'Roughness',Metallic:'Metallic',Normal:'Normal',Opacity:'Opacity',OpacityMask:'OpacityMask',EInterchangeMaterialNodeParameterName_MAX:'EInterchangeMaterialNodeParameterName_MAX', };
declare class InterchangeMaterialNode extends InterchangeBaseNode { 
	static Load(ResourceName: string): InterchangeMaterialNode;
	static Find(Outer: UObject, ResourceName: string): InterchangeMaterialNode;
	static GetDefaultObject(): InterchangeMaterialNode;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeMaterialNode;
	SetTextureDependencyUid(DependencyUid: string): boolean;
	SetPayLoadKey(PayloadKey: string): void;
	RemoveTextureDependencyUid(DependencyUid: string): boolean;
	GetVectorParameterData(ParameterName: EInterchangeMaterialNodeParameterName,OutVectorData?: Vector): {OutVectorData: Vector, $: boolean};
	GetTextureParameterData(ParameterName: EInterchangeMaterialNodeParameterName,OutTextureUid?: string,OutUVSetIndex?: number,OutScaleU?: number,OutScaleV?: number): {OutTextureUid: string, OutUVSetIndex: number, OutScaleU: number, OutScaleV: number, $: boolean};
	GetTextureDependency(index: number,OutDependency?: string): {OutDependency: string};
	GetTextureDependencies(OutDependencies?: string[]): {OutDependencies: string[]};
	GetTextureDependeciesCount(): number;
	GetScalarParameterData(ParameterName: EInterchangeMaterialNodeParameterName,OutScalarData?: number): {OutScalarData: number, $: boolean};
	AddVectorParameterData(ParameterName: EInterchangeMaterialNodeParameterName,VectorData: Vector): void;
	AddTextureParameterData(ParameterName: EInterchangeMaterialNodeParameterName,TextureUid: string,UvSetIndex: number,ScaleU: number,ScaleV: number): void;
	AddScalarParameterData(ParameterName: EInterchangeMaterialNodeParameterName,ScalarData: number): void;
	static C(Other: UObject | any): InterchangeMaterialNode;
}

declare class InterchangeMeshNode extends InterchangeBaseNode { 
	static Load(ResourceName: string): InterchangeMeshNode;
	static Find(Outer: UObject, ResourceName: string): InterchangeMeshNode;
	static GetDefaultObject(): InterchangeMeshNode;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeMeshNode;
	SetSkinnedMesh(bIsSkinnedMesh: boolean): boolean;
	SetSkeletonDependencyUid(DependencyUid: string): boolean;
	SetShapeDependencyUid(DependencyUid: string): boolean;
	SetSceneInstanceUid(DependencyUid: string): boolean;
	SetPayLoadKey(PayloadKey: string): void;
	SetMaterialDependencyUid(DependencyUid: string): boolean;
	SetCustomVertexCount(AttributeValue: number): boolean;
	SetCustomUVCount(AttributeValue: number): boolean;
	SetCustomPolygonCount(AttributeValue: number): boolean;
	SetCustomHasVertexTangent(AttributeValue: boolean): boolean;
	SetCustomHasVertexNormal(AttributeValue: boolean): boolean;
	SetCustomHasVertexColor(AttributeValue: boolean): boolean;
	SetCustomHasVertexBinormal(AttributeValue: boolean): boolean;
	SetCustomHasSmoothGroup(AttributeValue: boolean): boolean;
	SetCustomBoundingBox(AttributeValue: Box): boolean;
	SetBlendShapeName(BlendShapeName: string): boolean;
	SetBlendShape(bIsBlendShape: boolean): boolean;
	RemoveSkeletonDependencyUid(DependencyUid: string): boolean;
	RemoveShapeDependencyUid(DependencyUid: string): boolean;
	RemoveSceneInstanceUid(DependencyUid: string): boolean;
	RemoveMaterialDependencyUid(DependencyUid: string): boolean;
	IsSkinnedMesh(): boolean;
	IsBlendShape(): boolean;
	GetSkeletonDependency(index: number,OutDependency?: string): {OutDependency: string};
	GetSkeletonDependencies(OutDependencies?: string[]): {OutDependencies: string[]};
	GetSkeletonDependeciesCount(): number;
	GetShapeDependency(index: number,OutDependency?: string): {OutDependency: string};
	GetShapeDependencies(OutDependencies?: string[]): {OutDependencies: string[]};
	GetShapeDependeciesCount(): number;
	GetSceneInstanceUidsCount(): number;
	GetSceneInstanceUids(OutDependencies?: string[]): {OutDependencies: string[]};
	GetSceneInstanceUid(index: number,OutDependency?: string): {OutDependency: string};
	GetMaterialDependency(index: number,OutDependency?: string): {OutDependency: string};
	GetMaterialDependencies(OutDependencies?: string[]): {OutDependencies: string[]};
	GetMaterialDependeciesCount(): number;
	GetCustomVertexCount(AttributeValue?: number): {AttributeValue: number, $: boolean};
	GetCustomUVCount(AttributeValue?: number): {AttributeValue: number, $: boolean};
	GetCustomPolygonCount(AttributeValue?: number): {AttributeValue: number, $: boolean};
	GetCustomHasVertexTangent(AttributeValue?: boolean): {AttributeValue: boolean, $: boolean};
	GetCustomHasVertexNormal(AttributeValue?: boolean): {AttributeValue: boolean, $: boolean};
	GetCustomHasVertexColor(AttributeValue?: boolean): {AttributeValue: boolean, $: boolean};
	GetCustomHasVertexBinormal(AttributeValue?: boolean): {AttributeValue: boolean, $: boolean};
	GetCustomHasSmoothGroup(AttributeValue?: boolean): {AttributeValue: boolean, $: boolean};
	GetCustomBoundingBox(AttributeValue?: Box): {AttributeValue: Box, $: boolean};
	GetBlendShapeName(OutBlendShapeName?: string): {OutBlendShapeName: string, $: boolean};
	static C(Other: UObject | any): InterchangeMeshNode;
}

declare class InterchangePhysicsAssetFactoryNode extends InterchangeBaseNode { 
	static Load(ResourceName: string): InterchangePhysicsAssetFactoryNode;
	static Find(Outer: UObject, ResourceName: string): InterchangePhysicsAssetFactoryNode;
	static GetDefaultObject(): InterchangePhysicsAssetFactoryNode;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangePhysicsAssetFactoryNode;
	SetCustomSkeletalMeshUid(AttributeValue: string): boolean;
	InitializePhysicsAssetNode(UniqueId: string,DisplayLabel: string,InAssetClass: string): void;
	GetObjectClass(): UnrealEngineClass;
	GetCustomSkeletalMeshUid(AttributeValue?: string): {AttributeValue: string, $: boolean};
	static C(Other: UObject | any): InterchangePhysicsAssetFactoryNode;
}

declare class InterchangeSceneNode extends InterchangeBaseNode { 
	static Load(ResourceName: string): InterchangeSceneNode;
	static Find(Outer: UObject, ResourceName: string): InterchangeSceneNode;
	static GetDefaultObject(): InterchangeSceneNode;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeSceneNode;
	SetCustomLocalTransform(AttributeValue: Transform): boolean;
	SetCustomGlobalTransform(AttributeValue: Transform): boolean;
	SetCustomAssetInstanceUid(AttributeValue: string): boolean;
	RemoveSpecializedType(SpecializedType: string): boolean;
	RemoveMaterialDependencyUid(MaterialDependencyUid: string): boolean;
	IsSpecializedTypeContains(SpecializedType: string): boolean;
	GetSpecializedTypes(OutSpecializedTypes?: string[]): {OutSpecializedTypes: string[]};
	GetSpecializedTypeCount(): number;
	GetSpecializedType(index: number,OutSpecializedType?: string): {OutSpecializedType: string};
	GetMaterialDependencyUidsCount(): number;
	GetMaterialDependencyUids(OutMaterialDependencyUids?: string[]): {OutMaterialDependencyUids: string[]};
	GetMaterialDependencyUid(index: number,OutMaterialDependencyUid?: string): {OutMaterialDependencyUid: string};
	GetCustomLocalTransform(AttributeValue?: Transform): {AttributeValue: Transform, $: boolean};
	GetCustomGlobalTransform(AttributeValue?: Transform): {AttributeValue: Transform, $: boolean};
	GetCustomAssetInstanceUid(AttributeValue?: string): {AttributeValue: string, $: boolean};
	AddSpecializedType(SpecializedType: string): boolean;
	AddMaterialDependencyUid(MaterialDependencyUid: string): boolean;
	static C(Other: UObject | any): InterchangeSceneNode;
}

declare class InterchangeSkeletalMeshFactoryNode extends InterchangeBaseNode { 
	static Load(ResourceName: string): InterchangeSkeletalMeshFactoryNode;
	static Find(Outer: UObject, ResourceName: string): InterchangeSkeletalMeshFactoryNode;
	static GetDefaultObject(): InterchangeSkeletalMeshFactoryNode;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeSkeletalMeshFactoryNode;
	SetCustomVertexColorReplace(AttributeValue: boolean): boolean;
	SetCustomVertexColorOverride(AttributeValue: Color): boolean;
	SetCustomVertexColorIgnore(AttributeValue: boolean): boolean;
	SetCustomSkeletonSoftObjectPath(AttributeValue: SoftObjectPath): boolean;
	SetCustomPhysicAssetSoftObjectPath(AttributeValue: SoftObjectPath): boolean;
	SetCustomImportMorphTarget(AttributeValue: boolean): boolean;
	SetCustomCreatePhysicsAsset(AttributeValue: boolean): boolean;
	RemoveLodDataUniqueId(LodDataUniqueId: string): boolean;
	InitializeSkeletalMeshNode(UniqueId: string,DisplayLabel: string,InAssetClass: string): void;
	GetObjectClass(): UnrealEngineClass;
	GetLodDataUniqueIds(OutLodDataUniqueIds?: string[]): {OutLodDataUniqueIds: string[]};
	GetLodDataCount(): number;
	GetCustomVertexColorReplace(AttributeValue?: boolean): {AttributeValue: boolean, $: boolean};
	GetCustomVertexColorOverride(AttributeValue?: Color): {AttributeValue: Color, $: boolean};
	GetCustomVertexColorIgnore(AttributeValue?: boolean): {AttributeValue: boolean, $: boolean};
	GetCustomSkeletonSoftObjectPath(AttributeValue?: SoftObjectPath): {AttributeValue: SoftObjectPath, $: boolean};
	GetCustomPhysicAssetSoftObjectPath(AttributeValue?: SoftObjectPath): {AttributeValue: SoftObjectPath, $: boolean};
	GetCustomImportMorphTarget(AttributeValue?: boolean): {AttributeValue: boolean, $: boolean};
	GetCustomCreatePhysicsAsset(AttributeValue?: boolean): {AttributeValue: boolean, $: boolean};
	AddLodDataUniqueId(LodDataUniqueId: string): boolean;
	static C(Other: UObject | any): InterchangeSkeletalMeshFactoryNode;
}

declare class InterchangeSkeletalMeshLodDataNode extends InterchangeBaseNode { 
	static Load(ResourceName: string): InterchangeSkeletalMeshLodDataNode;
	static Find(Outer: UObject, ResourceName: string): InterchangeSkeletalMeshLodDataNode;
	static GetDefaultObject(): InterchangeSkeletalMeshLodDataNode;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeSkeletalMeshLodDataNode;
	SetCustomSkeletonUid(AttributeValue: string): boolean;
	RemoveMeshUid(BlendShapeName: string): boolean;
	RemoveAllMeshes(): boolean;
	GetMeshUidsCount(): number;
	GetMeshUids(OutBlendShapeNames?: string[]): {OutBlendShapeNames: string[]};
	GetCustomSkeletonUid(AttributeValue?: string): {AttributeValue: string, $: boolean};
	AddMeshUid(BlendShapeName: string): boolean;
	static C(Other: UObject | any): InterchangeSkeletalMeshLodDataNode;
}

declare class InterchangeSkeletonFactoryNode extends InterchangeBaseNode { 
	static Load(ResourceName: string): InterchangeSkeletonFactoryNode;
	static Find(Outer: UObject, ResourceName: string): InterchangeSkeletonFactoryNode;
	static GetDefaultObject(): InterchangeSkeletonFactoryNode;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeSkeletonFactoryNode;
	SetCustomRootJointUid(AttributeValue: string): boolean;
	InitializeSkeletonNode(UniqueId: string,DisplayLabel: string,InAssetClass: string): void;
	GetObjectClass(): UnrealEngineClass;
	GetCustomRootJointUid(AttributeValue?: string): {AttributeValue: string, $: boolean};
	static C(Other: UObject | any): InterchangeSkeletonFactoryNode;
}

declare class InterchangeStaticMeshFactoryNode extends InterchangeBaseNode { 
	static Load(ResourceName: string): InterchangeStaticMeshFactoryNode;
	static Find(Outer: UObject, ResourceName: string): InterchangeStaticMeshFactoryNode;
	static GetDefaultObject(): InterchangeStaticMeshFactoryNode;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeStaticMeshFactoryNode;
	SetCustomVertexColorReplace(AttributeValue: boolean): boolean;
	SetCustomVertexColorOverride(AttributeValue: Color): boolean;
	SetCustomVertexColorIgnore(AttributeValue: boolean): boolean;
	RemoveLodDataUniqueId(LodDataUniqueId: string): boolean;
	InitializeStaticMeshNode(UniqueId: string,DisplayLabel: string,InAssetClass: string): void;
	GetObjectClass(): UnrealEngineClass;
	GetLodDataUniqueIds(OutLodDataUniqueIds?: string[]): {OutLodDataUniqueIds: string[]};
	GetLodDataCount(): number;
	GetCustomVertexColorReplace(AttributeValue?: boolean): {AttributeValue: boolean, $: boolean};
	GetCustomVertexColorOverride(AttributeValue?: Color): {AttributeValue: Color, $: boolean};
	GetCustomVertexColorIgnore(AttributeValue?: boolean): {AttributeValue: boolean, $: boolean};
	AddLodDataUniqueId(LodDataUniqueId: string): boolean;
	static C(Other: UObject | any): InterchangeStaticMeshFactoryNode;
}

declare class InterchangeStaticMeshLodDataNode extends InterchangeBaseNode { 
	static Load(ResourceName: string): InterchangeStaticMeshLodDataNode;
	static Find(Outer: UObject, ResourceName: string): InterchangeStaticMeshLodDataNode;
	static GetDefaultObject(): InterchangeStaticMeshLodDataNode;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeStaticMeshLodDataNode;
	RemoveMeshUid(MeshName: string): boolean;
	RemoveAllMeshes(): boolean;
	GetMeshUidsCount(): number;
	GetMeshUids(OutMeshNames?: string[]): {OutMeshNames: string[]};
	AddMeshUid(MeshName: string): boolean;
	static C(Other: UObject | any): InterchangeStaticMeshLodDataNode;
}

declare class InterchangeTextureFactoryNode extends InterchangeBaseNode { 
	static Load(ResourceName: string): InterchangeTextureFactoryNode;
	static Find(Outer: UObject, ResourceName: string): InterchangeTextureFactoryNode;
	static GetDefaultObject(): InterchangeTextureFactoryNode;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeTextureFactoryNode;
	SetCustomVirtualTextureStreaming(AttributeValue: boolean,bAddApplyDelegate: boolean): boolean;
	SetCustomTranslatedTextureNodeUid(AttributeValue: string): boolean;
	SetCustomSRGB(AttributeValue: boolean,bAddApplyDelegate: boolean): boolean;
	SetCustomPowerOfTwoMode(AttributeValue: number,bAddApplyDelegate: boolean): boolean;
	SetCustomPaddingColor(AttributeValue: Color,bAddApplyDelegate: boolean): boolean;
	SetCustomMipLoadOptions(AttributeValue: number,bAddApplyDelegate: boolean): boolean;
	SetCustomMipGenSettings(AttributeValue: number,bAddApplyDelegate: boolean): boolean;
	SetCustomMaxTextureSize(AttributeValue: number,bAddApplyDelegate: boolean): boolean;
	SetCustomLossyCompressionAmount(AttributeValue: number,bAddApplyDelegate: boolean): boolean;
	SetCustomLODGroup(AttributeValue: number,bAddApplyDelegate: boolean): boolean;
	SetCustomLODBias(AttributeValue: number,bAddApplyDelegate: boolean): boolean;
	SetCustomFilter(AttributeValue: number,bAddApplyDelegate: boolean): boolean;
	SetCustomDownscaleOptions(AttributeValue: number,bAddApplyDelegate: boolean): boolean;
	SetCustomDownscale(AttributeValue: number,bAddApplyDelegate: boolean): boolean;
	SetCustomDeferCompression(AttributeValue: boolean,bAddApplyDelegate: boolean): boolean;
	SetCustomCompressionSettings(AttributeValue: number,bAddApplyDelegate: boolean): boolean;
	SetCustomCompressionQuality(AttributeValue: number,bAddApplyDelegate: boolean): boolean;
	SetCustomCompressionNoAlpha(AttributeValue: boolean,bAddApplyDelegate: boolean): boolean;
	SetCustomCompositeTextureMode(AttributeValue: number,bAddApplyDelegate: boolean): boolean;
	SetCustomCompositePower(AttributeValue: number,bAddApplyDelegate: boolean): boolean;
	SetCustomChromaKeyThreshold(AttributeValue: number,bAddApplyDelegate: boolean): boolean;
	SetCustomChromaKeyColor(AttributeValue: Color,bAddApplyDelegate: boolean): boolean;
	SetCustombUseLegacyGamma(AttributeValue: boolean,bAddApplyDelegate: boolean): boolean;
	SetCustombPreserveBorder(AttributeValue: boolean,bAddApplyDelegate: boolean): boolean;
	SetCustombFlipGreenChannel(AttributeValue: boolean,bAddApplyDelegate: boolean): boolean;
	SetCustombDoScaleMipsForAlphaCoverage(AttributeValue: boolean,bAddApplyDelegate: boolean): boolean;
	SetCustombDitherMipMapAlpha(AttributeValue: boolean,bAddApplyDelegate: boolean): boolean;
	SetCustombChromaKeyTexture(AttributeValue: boolean,bAddApplyDelegate: boolean): boolean;
	SetCustomAlphaCoverageThresholds(AttributeValue: Vector4,bAddApplyDelegate: boolean): boolean;
	SetCustomAdjustVibrance(AttributeValue: number,bAddApplyDelegate: boolean): boolean;
	SetCustomAdjustSaturation(AttributeValue: number,bAddApplyDelegate: boolean): boolean;
	SetCustomAdjustRGBCurve(AttributeValue: number,bAddApplyDelegate: boolean): boolean;
	SetCustomAdjustMinAlpha(AttributeValue: number,bAddApplyDelegate: boolean): boolean;
	SetCustomAdjustMaxAlpha(AttributeValue: number,bAddApplyDelegate: boolean): boolean;
	SetCustomAdjustHue(AttributeValue: number,bAddApplyDelegate: boolean): boolean;
	SetCustomAdjustBrightnessCurve(AttributeValue: number,bAddApplyDelegate: boolean): boolean;
	SetCustomAdjustBrightness(AttributeValue: number,bAddApplyDelegate: boolean): boolean;
	SetCustomAddressY(AttributeValue: number,bAddApplyDelegate: boolean): boolean;
	SetCustomAddressX(AttributeValue: number,bAddApplyDelegate: boolean): boolean;
	InitializeTextureNode(UniqueId: string,DisplayLabel: string,InAssetClass: string,InAssetName: string): void;
	GetObjectClass(): UnrealEngineClass;
	GetCustomVirtualTextureStreaming(AttributeValue?: boolean): {AttributeValue: boolean, $: boolean};
	GetCustomTranslatedTextureNodeUid(AttributeValue?: string): {AttributeValue: string, $: boolean};
	GetCustomSRGB(AttributeValue?: boolean): {AttributeValue: boolean, $: boolean};
	GetCustomPowerOfTwoMode(AttributeValue?: number): {AttributeValue: number, $: boolean};
	GetCustomPaddingColor(AttributeValue?: Color): {AttributeValue: Color, $: boolean};
	GetCustomMipLoadOptions(AttributeValue?: number): {AttributeValue: number, $: boolean};
	GetCustomMipGenSettings(AttributeValue?: number): {AttributeValue: number, $: boolean};
	GetCustomMaxTextureSize(AttributeValue?: number): {AttributeValue: number, $: boolean};
	GetCustomLossyCompressionAmount(AttributeValue?: number): {AttributeValue: number, $: boolean};
	GetCustomLODGroup(AttributeValue?: number): {AttributeValue: number, $: boolean};
	GetCustomLODBias(AttributeValue?: number): {AttributeValue: number, $: boolean};
	GetCustomFilter(AttributeValue?: number): {AttributeValue: number, $: boolean};
	GetCustomDownscaleOptions(AttributeValue?: number): {AttributeValue: number, $: boolean};
	GetCustomDownscale(AttributeValue?: number): {AttributeValue: number, $: boolean};
	GetCustomDeferCompression(AttributeValue?: boolean): {AttributeValue: boolean, $: boolean};
	GetCustomCompressionSettings(AttributeValue?: number): {AttributeValue: number, $: boolean};
	GetCustomCompressionQuality(AttributeValue?: number): {AttributeValue: number, $: boolean};
	GetCustomCompressionNoAlpha(AttributeValue?: boolean): {AttributeValue: boolean, $: boolean};
	GetCustomCompositeTextureMode(AttributeValue?: number): {AttributeValue: number, $: boolean};
	GetCustomCompositePower(AttributeValue?: number): {AttributeValue: number, $: boolean};
	GetCustomChromaKeyThreshold(AttributeValue?: number): {AttributeValue: number, $: boolean};
	GetCustomChromaKeyColor(AttributeValue?: Color): {AttributeValue: Color, $: boolean};
	GetCustombUseLegacyGamma(AttributeValue?: boolean): {AttributeValue: boolean, $: boolean};
	GetCustombPreserveBorder(AttributeValue?: boolean): {AttributeValue: boolean, $: boolean};
	GetCustombFlipGreenChannel(AttributeValue?: boolean): {AttributeValue: boolean, $: boolean};
	GetCustombDoScaleMipsForAlphaCoverage(AttributeValue?: boolean): {AttributeValue: boolean, $: boolean};
	GetCustombDitherMipMapAlpha(AttributeValue?: boolean): {AttributeValue: boolean, $: boolean};
	GetCustombChromaKeyTexture(AttributeValue?: boolean): {AttributeValue: boolean, $: boolean};
	GetCustomAlphaCoverageThresholds(AttributeValue?: Vector4): {AttributeValue: Vector4, $: boolean};
	GetCustomAdjustVibrance(AttributeValue?: number): {AttributeValue: number, $: boolean};
	GetCustomAdjustSaturation(AttributeValue?: number): {AttributeValue: number, $: boolean};
	GetCustomAdjustRGBCurve(AttributeValue?: number): {AttributeValue: number, $: boolean};
	GetCustomAdjustMinAlpha(AttributeValue?: number): {AttributeValue: number, $: boolean};
	GetCustomAdjustMaxAlpha(AttributeValue?: number): {AttributeValue: number, $: boolean};
	GetCustomAdjustHue(AttributeValue?: number): {AttributeValue: number, $: boolean};
	GetCustomAdjustBrightnessCurve(AttributeValue?: number): {AttributeValue: number, $: boolean};
	GetCustomAdjustBrightness(AttributeValue?: number): {AttributeValue: number, $: boolean};
	GetCustomAddressY(AttributeValue?: number): {AttributeValue: number, $: boolean};
	GetCustomAddressX(AttributeValue?: number): {AttributeValue: number, $: boolean};
	static C(Other: UObject | any): InterchangeTextureFactoryNode;
}

declare class InterchangeTexture2DArrayFactoryNode extends InterchangeTextureFactoryNode { 
	static Load(ResourceName: string): InterchangeTexture2DArrayFactoryNode;
	static Find(Outer: UObject, ResourceName: string): InterchangeTexture2DArrayFactoryNode;
	static GetDefaultObject(): InterchangeTexture2DArrayFactoryNode;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeTexture2DArrayFactoryNode;
	SetCustomAddressZ(AttributeValue: number,bAddApplyDelegate: boolean): boolean;
	GetCustomAddressZ(AttributeValue?: number): {AttributeValue: number, $: boolean};
	static C(Other: UObject | any): InterchangeTexture2DArrayFactoryNode;
}

declare class InterchangeTextureNode extends InterchangeBaseNode { 
	static Load(ResourceName: string): InterchangeTextureNode;
	static Find(Outer: UObject, ResourceName: string): InterchangeTextureNode;
	static GetDefaultObject(): InterchangeTextureNode;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeTextureNode;
	SetPayLoadKey(PayloadKey: string): void;
	static C(Other: UObject | any): InterchangeTextureNode;
}

declare class InterchangeTexture2DArrayNode extends InterchangeTextureNode { 
	static Load(ResourceName: string): InterchangeTexture2DArrayNode;
	static Find(Outer: UObject, ResourceName: string): InterchangeTexture2DArrayNode;
	static GetDefaultObject(): InterchangeTexture2DArrayNode;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeTexture2DArrayNode;
	static C(Other: UObject | any): InterchangeTexture2DArrayNode;
}

declare class InterchangeTexture2DNode extends InterchangeTextureNode { 
	static Load(ResourceName: string): InterchangeTexture2DNode;
	static Find(Outer: UObject, ResourceName: string): InterchangeTexture2DNode;
	static GetDefaultObject(): InterchangeTexture2DNode;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeTexture2DNode;
	SetSourceBlocks(InSourceBlocks: any): void;
	GetSourceBlocks(): any;
	ClearSourceBlocksData(): void;
	static C(Other: UObject | any): InterchangeTexture2DNode;
}

declare class InterchangeTextureCubeFactoryNode extends InterchangeTextureFactoryNode { 
	static Load(ResourceName: string): InterchangeTextureCubeFactoryNode;
	static Find(Outer: UObject, ResourceName: string): InterchangeTextureCubeFactoryNode;
	static GetDefaultObject(): InterchangeTextureCubeFactoryNode;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeTextureCubeFactoryNode;
	static C(Other: UObject | any): InterchangeTextureCubeFactoryNode;
}

declare class InterchangeTextureCubeNode extends InterchangeTextureNode { 
	static Load(ResourceName: string): InterchangeTextureCubeNode;
	static Find(Outer: UObject, ResourceName: string): InterchangeTextureCubeNode;
	static GetDefaultObject(): InterchangeTextureCubeNode;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeTextureCubeNode;
	static C(Other: UObject | any): InterchangeTextureCubeNode;
}

declare class InterchangeTextureLightProfileFactoryNode extends InterchangeTextureFactoryNode { 
	static Load(ResourceName: string): InterchangeTextureLightProfileFactoryNode;
	static Find(Outer: UObject, ResourceName: string): InterchangeTextureLightProfileFactoryNode;
	static GetDefaultObject(): InterchangeTextureLightProfileFactoryNode;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeTextureLightProfileFactoryNode;
	SetCustomTextureMultiplier(AttributeValue: number,bAddApplyDelegate: boolean): boolean;
	SetCustomBrightness(AttributeValue: number,bAddApplyDelegate: boolean): boolean;
	GetCustomTextureMultiplier(AttributeValue?: number): {AttributeValue: number, $: boolean};
	GetCustomBrightness(AttributeValue?: number): {AttributeValue: number, $: boolean};
	static C(Other: UObject | any): InterchangeTextureLightProfileFactoryNode;
}

declare class InterchangeTextureLightProfileNode extends InterchangeTextureNode { 
	static Load(ResourceName: string): InterchangeTextureLightProfileNode;
	static Find(Outer: UObject, ResourceName: string): InterchangeTextureLightProfileNode;
	static GetDefaultObject(): InterchangeTextureLightProfileNode;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeTextureLightProfileNode;
	static C(Other: UObject | any): InterchangeTextureLightProfileNode;
}

declare class InterchangeActorFactory extends InterchangeFactoryBase { 
	static Load(ResourceName: string): InterchangeActorFactory;
	static Find(Outer: UObject, ResourceName: string): InterchangeActorFactory;
	static GetDefaultObject(): InterchangeActorFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeActorFactory;
	static C(Other: UObject | any): InterchangeActorFactory;
}

declare class InterchangeBlockedTexturePayloadInterface extends Interface { 
	static Load(ResourceName: string): InterchangeBlockedTexturePayloadInterface;
	static Find(Outer: UObject, ResourceName: string): InterchangeBlockedTexturePayloadInterface;
	static GetDefaultObject(): InterchangeBlockedTexturePayloadInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeBlockedTexturePayloadInterface;
	static C(Other: UObject | any): InterchangeBlockedTexturePayloadInterface;
}

declare class InterchangeBMPTranslator extends InterchangeTranslatorBase { 
	static Load(ResourceName: string): InterchangeBMPTranslator;
	static Find(Outer: UObject, ResourceName: string): InterchangeBMPTranslator;
	static GetDefaultObject(): InterchangeBMPTranslator;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeBMPTranslator;
	static C(Other: UObject | any): InterchangeBMPTranslator;
}

declare class InterchangeDDSTranslator extends InterchangeTranslatorBase { 
	static Load(ResourceName: string): InterchangeDDSTranslator;
	static Find(Outer: UObject, ResourceName: string): InterchangeDDSTranslator;
	static GetDefaultObject(): InterchangeDDSTranslator;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeDDSTranslator;
	static C(Other: UObject | any): InterchangeDDSTranslator;
}

declare class InterchangeEXRTranslator extends InterchangeTranslatorBase { 
	static Load(ResourceName: string): InterchangeEXRTranslator;
	static Find(Outer: UObject, ResourceName: string): InterchangeEXRTranslator;
	static GetDefaultObject(): InterchangeEXRTranslator;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeEXRTranslator;
	static C(Other: UObject | any): InterchangeEXRTranslator;
}

declare class InterchangeFbxTranslator extends InterchangeTranslatorBase { 
	static Load(ResourceName: string): InterchangeFbxTranslator;
	static Find(Outer: UObject, ResourceName: string): InterchangeFbxTranslator;
	static GetDefaultObject(): InterchangeFbxTranslator;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeFbxTranslator;
	static C(Other: UObject | any): InterchangeFbxTranslator;
}

declare class InterchangeHDRTranslator extends InterchangeTranslatorBase { 
	static Load(ResourceName: string): InterchangeHDRTranslator;
	static Find(Outer: UObject, ResourceName: string): InterchangeHDRTranslator;
	static GetDefaultObject(): InterchangeHDRTranslator;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeHDRTranslator;
	static C(Other: UObject | any): InterchangeHDRTranslator;
}

declare class InterchangeIESTranslator extends InterchangeTranslatorBase { 
	static Load(ResourceName: string): InterchangeIESTranslator;
	static Find(Outer: UObject, ResourceName: string): InterchangeIESTranslator;
	static GetDefaultObject(): InterchangeIESTranslator;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeIESTranslator;
	static C(Other: UObject | any): InterchangeIESTranslator;
}

declare class InterchangeJPGTranslator extends InterchangeTranslatorBase { 
	static Load(ResourceName: string): InterchangeJPGTranslator;
	static Find(Outer: UObject, ResourceName: string): InterchangeJPGTranslator;
	static GetDefaultObject(): InterchangeJPGTranslator;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeJPGTranslator;
	static C(Other: UObject | any): InterchangeJPGTranslator;
}

declare class InterchangeMaterialFactory extends InterchangeFactoryBase { 
	static Load(ResourceName: string): InterchangeMaterialFactory;
	static Find(Outer: UObject, ResourceName: string): InterchangeMaterialFactory;
	static GetDefaultObject(): InterchangeMaterialFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeMaterialFactory;
	static C(Other: UObject | any): InterchangeMaterialFactory;
}

declare class InterchangePCXTranslator extends InterchangeTranslatorBase { 
	static Load(ResourceName: string): InterchangePCXTranslator;
	static Find(Outer: UObject, ResourceName: string): InterchangePCXTranslator;
	static GetDefaultObject(): InterchangePCXTranslator;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangePCXTranslator;
	static C(Other: UObject | any): InterchangePCXTranslator;
}

declare class InterchangePhysicsAssetFactory extends InterchangeFactoryBase { 
	static Load(ResourceName: string): InterchangePhysicsAssetFactory;
	static Find(Outer: UObject, ResourceName: string): InterchangePhysicsAssetFactory;
	static GetDefaultObject(): InterchangePhysicsAssetFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangePhysicsAssetFactory;
	static C(Other: UObject | any): InterchangePhysicsAssetFactory;
}

declare class InterchangePNGTranslator extends InterchangeTranslatorBase { 
	static Load(ResourceName: string): InterchangePNGTranslator;
	static Find(Outer: UObject, ResourceName: string): InterchangePNGTranslator;
	static GetDefaultObject(): InterchangePNGTranslator;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangePNGTranslator;
	static C(Other: UObject | any): InterchangePNGTranslator;
}

declare class InterchangePSDTranslator extends InterchangeTranslatorBase { 
	static Load(ResourceName: string): InterchangePSDTranslator;
	static Find(Outer: UObject, ResourceName: string): InterchangePSDTranslator;
	static GetDefaultObject(): InterchangePSDTranslator;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangePSDTranslator;
	static C(Other: UObject | any): InterchangePSDTranslator;
}

declare class InterchangeSkeletalMeshFactory extends InterchangeFactoryBase { 
	static Load(ResourceName: string): InterchangeSkeletalMeshFactory;
	static Find(Outer: UObject, ResourceName: string): InterchangeSkeletalMeshFactory;
	static GetDefaultObject(): InterchangeSkeletalMeshFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeSkeletalMeshFactory;
	static C(Other: UObject | any): InterchangeSkeletalMeshFactory;
}

declare class InterchangeSkeletalMeshPayloadInterface extends Interface { 
	static Load(ResourceName: string): InterchangeSkeletalMeshPayloadInterface;
	static Find(Outer: UObject, ResourceName: string): InterchangeSkeletalMeshPayloadInterface;
	static GetDefaultObject(): InterchangeSkeletalMeshPayloadInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeSkeletalMeshPayloadInterface;
	static C(Other: UObject | any): InterchangeSkeletalMeshPayloadInterface;
}

declare class InterchangeSkeletonFactory extends InterchangeFactoryBase { 
	static Load(ResourceName: string): InterchangeSkeletonFactory;
	static Find(Outer: UObject, ResourceName: string): InterchangeSkeletonFactory;
	static GetDefaultObject(): InterchangeSkeletonFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeSkeletonFactory;
	static C(Other: UObject | any): InterchangeSkeletonFactory;
}

declare class InterchangeSlicedTexturePayloadInterface extends Interface { 
	static Load(ResourceName: string): InterchangeSlicedTexturePayloadInterface;
	static Find(Outer: UObject, ResourceName: string): InterchangeSlicedTexturePayloadInterface;
	static GetDefaultObject(): InterchangeSlicedTexturePayloadInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeSlicedTexturePayloadInterface;
	static C(Other: UObject | any): InterchangeSlicedTexturePayloadInterface;
}

declare class InterchangeStaticMeshFactory extends InterchangeFactoryBase { 
	static Load(ResourceName: string): InterchangeStaticMeshFactory;
	static Find(Outer: UObject, ResourceName: string): InterchangeStaticMeshFactory;
	static GetDefaultObject(): InterchangeStaticMeshFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeStaticMeshFactory;
	static C(Other: UObject | any): InterchangeStaticMeshFactory;
}

declare class InterchangeStaticMeshPayloadInterface extends Interface { 
	static Load(ResourceName: string): InterchangeStaticMeshPayloadInterface;
	static Find(Outer: UObject, ResourceName: string): InterchangeStaticMeshPayloadInterface;
	static GetDefaultObject(): InterchangeStaticMeshPayloadInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeStaticMeshPayloadInterface;
	static C(Other: UObject | any): InterchangeStaticMeshPayloadInterface;
}

declare class InterchangeTextureFactory extends InterchangeFactoryBase { 
	static Load(ResourceName: string): InterchangeTextureFactory;
	static Find(Outer: UObject, ResourceName: string): InterchangeTextureFactory;
	static GetDefaultObject(): InterchangeTextureFactory;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeTextureFactory;
	static C(Other: UObject | any): InterchangeTextureFactory;
}

declare class InterchangeTextureLightProfilePayloadInterface extends Interface { 
	static Load(ResourceName: string): InterchangeTextureLightProfilePayloadInterface;
	static Find(Outer: UObject, ResourceName: string): InterchangeTextureLightProfilePayloadInterface;
	static GetDefaultObject(): InterchangeTextureLightProfilePayloadInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeTextureLightProfilePayloadInterface;
	static C(Other: UObject | any): InterchangeTextureLightProfilePayloadInterface;
}

declare class InterchangeTexturePayloadInterface extends Interface { 
	static Load(ResourceName: string): InterchangeTexturePayloadInterface;
	static Find(Outer: UObject, ResourceName: string): InterchangeTexturePayloadInterface;
	static GetDefaultObject(): InterchangeTexturePayloadInterface;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeTexturePayloadInterface;
	static C(Other: UObject | any): InterchangeTexturePayloadInterface;
}

declare class InterchangeTGATranslator extends InterchangeTranslatorBase { 
	static Load(ResourceName: string): InterchangeTGATranslator;
	static Find(Outer: UObject, ResourceName: string): InterchangeTGATranslator;
	static GetDefaultObject(): InterchangeTGATranslator;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeTGATranslator;
	static C(Other: UObject | any): InterchangeTGATranslator;
}

declare class InterchangeTIFFTranslator extends InterchangeTranslatorBase { 
	static Load(ResourceName: string): InterchangeTIFFTranslator;
	static Find(Outer: UObject, ResourceName: string): InterchangeTIFFTranslator;
	static GetDefaultObject(): InterchangeTIFFTranslator;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeTIFFTranslator;
	static C(Other: UObject | any): InterchangeTIFFTranslator;
}

declare class InterchangeUDIMTranslator extends InterchangeTranslatorBase { 
	UdimRegexPattern: string;
	static Load(ResourceName: string): InterchangeUDIMTranslator;
	static Find(Outer: UObject, ResourceName: string): InterchangeUDIMTranslator;
	static GetDefaultObject(): InterchangeUDIMTranslator;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeUDIMTranslator;
	static C(Other: UObject | any): InterchangeUDIMTranslator;
}

declare class InterchangeResultMeshWarning extends InterchangeResultWarning { 
	MeshName: string;
	static Load(ResourceName: string): InterchangeResultMeshWarning;
	static Find(Outer: UObject, ResourceName: string): InterchangeResultMeshWarning;
	static GetDefaultObject(): InterchangeResultMeshWarning;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeResultMeshWarning;
	static C(Other: UObject | any): InterchangeResultMeshWarning;
}

declare class InterchangeResultMeshError extends InterchangeResultError { 
	MeshName: string;
	static Load(ResourceName: string): InterchangeResultMeshError;
	static Find(Outer: UObject, ResourceName: string): InterchangeResultMeshError;
	static GetDefaultObject(): InterchangeResultMeshError;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeResultMeshError;
	static C(Other: UObject | any): InterchangeResultMeshError;
}

declare class InterchangeResultMeshWarning_Generic extends InterchangeResultMeshWarning { 
	text: string;
	static Load(ResourceName: string): InterchangeResultMeshWarning_Generic;
	static Find(Outer: UObject, ResourceName: string): InterchangeResultMeshWarning_Generic;
	static GetDefaultObject(): InterchangeResultMeshWarning_Generic;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeResultMeshWarning_Generic;
	static C(Other: UObject | any): InterchangeResultMeshWarning_Generic;
}

declare class InterchangeResultMeshError_Generic extends InterchangeResultMeshError { 
	text: string;
	static Load(ResourceName: string): InterchangeResultMeshError_Generic;
	static Find(Outer: UObject, ResourceName: string): InterchangeResultMeshError_Generic;
	static GetDefaultObject(): InterchangeResultMeshError_Generic;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeResultMeshError_Generic;
	static C(Other: UObject | any): InterchangeResultMeshError_Generic;
}

declare class InterchangeResultMeshWarning_TooManyUVs extends InterchangeResultMeshWarning { 
	ExcessUVs: number;
	static Load(ResourceName: string): InterchangeResultMeshWarning_TooManyUVs;
	static Find(Outer: UObject, ResourceName: string): InterchangeResultMeshWarning_TooManyUVs;
	static GetDefaultObject(): InterchangeResultMeshWarning_TooManyUVs;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeResultMeshWarning_TooManyUVs;
	static C(Other: UObject | any): InterchangeResultMeshWarning_TooManyUVs;
}

declare class InterchangeTextureWriter extends InterchangeWriterBase { 
	static Load(ResourceName: string): InterchangeTextureWriter;
	static Find(Outer: UObject, ResourceName: string): InterchangeTextureWriter;
	static GetDefaultObject(): InterchangeTextureWriter;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeTextureWriter;
	static C(Other: UObject | any): InterchangeTextureWriter;
}

declare type EInterchangeVertexColorImportOption = 'IVCIO_Replace' | 'IVCIO_Ignore' | 'IVCIO_Override' | 'IVCIO_MAX';
declare var EInterchangeVertexColorImportOption : { IVCIO_Replace:'IVCIO_Replace',IVCIO_Ignore:'IVCIO_Ignore',IVCIO_Override:'IVCIO_Override',IVCIO_MAX:'IVCIO_MAX', };
declare class InterchangeGenericAssetsPipeline extends InterchangePipelineBase { 
	bUseSourceNameForAsset: boolean;
	bImportLods: boolean;
	bBakeMeshes: boolean;
	VertexColorImportOption: EInterchangeVertexColorImportOption;
	VertexOverrideColor: Color;
	bImportStaticMeshes: boolean;
	bCombineStaticMeshes: boolean;
	Skeleton: Skeleton;
	bImportSkeletalMeshes: boolean;
	bCombineSkeletalMeshes: boolean;
	bImportMorphTargets: boolean;
	bCreatePhysicsAsset: boolean;
	PhysicsAsset: PhysicsAsset;
	bImportMaterials: boolean;
	bImportTextures: boolean;
	bDetectNormalMapTexture: boolean;
	bFlipNormalMapGreenChannel: boolean;
	FileExtensionsToImportAsLongLatCubemap: any;
	static Load(ResourceName: string): InterchangeGenericAssetsPipeline;
	static Find(Outer: UObject, ResourceName: string): InterchangeGenericAssetsPipeline;
	static GetDefaultObject(): InterchangeGenericAssetsPipeline;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeGenericAssetsPipeline;
	static C(Other: UObject | any): InterchangeGenericAssetsPipeline;
}

declare class InterchangeGenericLevelPipeline extends InterchangePipelineBase { 
	static Load(ResourceName: string): InterchangeGenericLevelPipeline;
	static Find(Outer: UObject, ResourceName: string): InterchangeGenericLevelPipeline;
	static GetDefaultObject(): InterchangeGenericLevelPipeline;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangeGenericLevelPipeline;
	static C(Other: UObject | any): InterchangeGenericLevelPipeline;
}

declare class InterchangeMeshInstance { 
	MeshInstanceUid: string;
	LodGroupNode: InterchangeSceneNode;
	bReferenceSkinnedMesh: boolean;
	bReferenceBlendShape: boolean;
	SceneNodePerLodIndex: any;
	ReferencingMeshGeometryUids: string[];
	clone() : InterchangeMeshInstance;
	static C(Other: UObject | any): InterchangeMeshInstance;
}

declare class InterchangeMeshGeometry { 
	MeshUid: string;
	MeshNode: InterchangeMeshNode;
	ReferencingMeshInstanceUids: string[];
	clone() : InterchangeMeshGeometry;
	static C(Other: UObject | any): InterchangeMeshGeometry;
}

declare class InterchangePipelineMeshesUtilities extends UObject { 
	static Load(ResourceName: string): InterchangePipelineMeshesUtilities;
	static Find(Outer: UObject, ResourceName: string): InterchangePipelineMeshesUtilities;
	static GetDefaultObject(): InterchangePipelineMeshesUtilities;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): InterchangePipelineMeshesUtilities;
	IsValidMeshInstanceUid(MeshInstanceUid: string): boolean;
	IsValidMeshGeometryUid(MeshGeometryUid: string): boolean;
	GetMeshInstanceSkeletonRootUid(MeshInstanceUid: string): string;
	GetMeshInstanceByUid(MeshInstanceUid: string): InterchangeMeshInstance;
	GetMeshGeometrySkeletonRootUid(MeshGeometryUid: string): string;
	GetMeshGeometryByUid(MeshGeometryUid: string): InterchangeMeshGeometry;
	GetAllStaticMeshInstance(MeshInstanceUids?: string[]): {MeshInstanceUids: string[]};
	GetAllStaticMeshGeometry(MeshGeometryUids?: string[]): {MeshGeometryUids: string[]};
	GetAllSkinnedMeshInstance(MeshInstanceUids?: string[]): {MeshInstanceUids: string[]};
	GetAllSkinnedMeshGeometry(MeshGeometryUids?: string[]): {MeshGeometryUids: string[]};
	GetAllMeshInstanceUidsUsingMeshGeometryUid(MeshGeometryUid: string,MeshInstanceUids?: string[]): {MeshInstanceUids: string[]};
	GetAllMeshInstanceUids(MeshInstanceUids?: string[]): {MeshInstanceUids: string[]};
	GetAllMeshGeometryNotInstanced(MeshGeometryUids?: string[]): {MeshGeometryUids: string[]};
	GetAllMeshGeometry(MeshGeometryUids?: string[]): {MeshGeometryUids: string[]};
	static CreateInterchangePipelineMeshesUtilities(BaseNodeContainer: InterchangeBaseNodeContainer): InterchangePipelineMeshesUtilities;
	static C(Other: UObject | any): InterchangePipelineMeshesUtilities;
}

declare class MegascansSettings extends UObject { 
	bCreateFoliage: boolean;
	bApplyToSelection: boolean;
	static Load(ResourceName: string): MegascansSettings;
	static Find(Outer: UObject, ResourceName: string): MegascansSettings;
	static GetDefaultObject(): MegascansSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MegascansSettings;
	static C(Other: UObject | any): MegascansSettings;
}

declare class MaterialBlendSettings extends UObject { 
	BlendedMaterialName: string;
	BlendedMaterialPath: DirectoryPath;
	static Load(ResourceName: string): MaterialBlendSettings;
	static Find(Outer: UObject, ResourceName: string): MaterialBlendSettings;
	static GetDefaultObject(): MaterialBlendSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialBlendSettings;
	static C(Other: UObject | any): MaterialBlendSettings;
}

declare class MaterialAssetSettings extends UObject { 
	MasterMaterial3d: string;
	MasterMaterialSurface: string;
	MasterMaterialPlant: string;
	static Load(ResourceName: string): MaterialAssetSettings;
	static Find(Outer: UObject, ResourceName: string): MaterialAssetSettings;
	static GetDefaultObject(): MaterialAssetSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialAssetSettings;
	static C(Other: UObject | any): MaterialAssetSettings;
}

declare class MaterialPresetsSettings extends UObject { 
	MasterMaterial3d: any;
	MasterMaterialSurface: any;
	MasterMaterialPlant: any;
	static Load(ResourceName: string): MaterialPresetsSettings;
	static Find(Outer: UObject, ResourceName: string): MaterialPresetsSettings;
	static GetDefaultObject(): MaterialPresetsSettings;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): MaterialPresetsSettings;
	static C(Other: UObject | any): MaterialPresetsSettings;
}

declare class AssetInfo { 
	Path: string;
	Version: string;
	clone() : AssetInfo;
	static C(Other: UObject | any): AssetInfo;
}

declare class VersionData { 
	Assets: AssetInfo[];
	clone() : VersionData;
	static C(Other: UObject | any): VersionData;
}

declare class VersionInfoHandler extends UObject { 
	CommonVersionData: VersionData;
	static Load(ResourceName: string): VersionInfoHandler;
	static Find(Outer: UObject, ResourceName: string): VersionInfoHandler;
	static GetDefaultObject(): VersionInfoHandler;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): VersionInfoHandler;
	static Get(): VersionInfoHandler;
	static C(Other: UObject | any): VersionInfoHandler;
}

declare class WebJSCallbackBase { 
	clone() : WebJSCallbackBase;
	static C(Other: UObject | any): WebJSCallbackBase;
}

declare class WebJSFunction extends WebJSCallbackBase { 
	clone() : WebJSFunction;
	static C(Other: UObject | any): WebJSFunction;
}

declare class BrowserBinding extends UObject { 
	static Load(ResourceName: string): BrowserBinding;
	static Find(Outer: UObject, ResourceName: string): BrowserBinding;
	static GetDefaultObject(): BrowserBinding;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): BrowserBinding;
	StartNodeProcess(): void;
	ShowLoginDialog(LoginUrl: string,ResponseCodeUrl: string): void;
	ShowDialog(Type: string,URL: string): void;
	SendSuccess(Value: string): void;
	SendFailure(Message: string): void;
	SaveAuthToken(Value: string): void;
	RestartNodeProcess(): void;
	OpenMegascansPluginSettings(): void;
	OpenExternalUrl(URL: string): void;
	OnExitCallback(OnExitJSCallback: WebJSFunction): void;
	OnDroppedCallback(OnDroppedJSCallback: WebJSFunction): void;
	OnDropDiscardedCallback(OnDropDiscardedJSCallback: WebJSFunction): void;
	Logout(): void;
	GetProjectPath(): string;
	GetAuthToken(): string;
	ExportDataToMSPlugin(Data: string): void;
	DragStarted(ImageUrl: string[],IDs: string[]): void;
	DialogSuccessCallback(DialogJSCallback: WebJSFunction): void;
	DialogFailCallback(DialogJSCallback: WebJSFunction): void;
	static C(Other: UObject | any): BrowserBinding;
}

declare class NodePort extends UObject { 
	static Load(ResourceName: string): NodePort;
	static Find(Outer: UObject, ResourceName: string): NodePort;
	static GetDefaultObject(): NodePort;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): NodePort;
	IsNodeRunning(): boolean;
	GetNodePort(): string;
	static C(Other: UObject | any): NodePort;
}

declare type EJavasriptTabActivationCause = 'UserClickedOnTab' | 'SetDirectly' | 'EJavasriptTabActivationCause_MAX';
declare var EJavasriptTabActivationCause : { UserClickedOnTab:'UserClickedOnTab',SetDirectly:'SetDirectly',EJavasriptTabActivationCause_MAX:'EJavasriptTabActivationCause_MAX', };
declare class JavascriptWorkspaceItem { 
	clone() : JavascriptWorkspaceItem;
	static C(Other: UObject | any): JavascriptWorkspaceItem;
	AddGroup(DisplayName: string): JavascriptWorkspaceItem;
	static AddGroup(Parent: JavascriptWorkspaceItem,DisplayName: string): JavascriptWorkspaceItem;
	static GetGroup(Name: string): JavascriptWorkspaceItem;
}

declare type EJavascriptTabRole = 'MajorTab' | 'PanelTab' | 'NomadTab' | 'DocumentTab' | 'EJavascriptTabRole_MAX';
declare var EJavascriptTabRole : { MajorTab:'MajorTab',PanelTab:'PanelTab',NomadTab:'NomadTab',DocumentTab:'DocumentTab',EJavascriptTabRole_MAX:'EJavascriptTabRole_MAX', };
declare class JavascriptEditorTab extends UObject { 
	OnSpawnTab: UnrealEngineDelegate<(Context: UObject) => Widget>;
	OnCloseTab: UnrealEngineDelegate<(Widget: Widget) => void>;
	OnTabActivatedCallback: UnrealEngineDelegate<(TabId: string, Cause: EJavasriptTabActivationCause) => void>;
	Group: JavascriptWorkspaceItem;
	TabId: string;
	DisplayName: string;
	Icon: JavascriptSlateIcon;
	bIsNomad: boolean;
	Role: EJavascriptTabRole;
	static Load(ResourceName: string): JavascriptEditorTab;
	static Find(Outer: UObject, ResourceName: string): JavascriptEditorTab;
	static GetDefaultObject(): JavascriptEditorTab;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptEditorTab;
	ForceCommit(): void;
	Discard(): void;
	Commit(): void;
	CloseTab(Widget: Widget): void;
	ActivateInParent(): void;
	static C(Other: UObject | any): JavascriptEditorTab;
}

declare class JavascriptUICommandInfo { 
	clone() : JavascriptUICommandInfo;
	static C(Other: UObject | any): JavascriptUICommandInfo;
	static GenericCommand(What: string): JavascriptUICommandInfo;
}

declare class JavascriptUICommand { 
	ID: string;
	FriendlyName: string;
	Description: string;
	DefaultChord: InputChord;
	ActionType: EJavasrciptUserInterfaceActionType;
	CommandInfo: JavascriptUICommandInfo;
	IconStyleName: string;
	clone() : JavascriptUICommand;
	static C(Other: UObject | any): JavascriptUICommand;
}

declare class JavascriptBindingContext { 
	clone() : JavascriptBindingContext;
	static C(Other: UObject | any): JavascriptBindingContext;
	Destroy(): void;
	UI_COMMAND_Function(Command: JavascriptUICommand,InTextSubNamespace: string): JavascriptUICommandInfo;
	static Destroy(Context: JavascriptBindingContext): void;
	static UI_COMMAND_Function(This: JavascriptBindingContext,Command: JavascriptUICommand,InTextSubNamespace: string): JavascriptUICommandInfo;
	static NewBindingContext(InContextName: string,InContextDesc: string,InContextParent: string,InStyleSetName: string): JavascriptBindingContext;
}

declare class JavascriptUICommandList { 
	clone() : JavascriptUICommandList;
	static C(Other: UObject | any): JavascriptUICommandList;
	CreateMenuBarBuilder(UFunction: JavascriptFunction): void;
	CreateMenuBuilder(bInShouldCloseWindowAfterMenuSelection: boolean,UFunction: JavascriptFunction): void;
	CreateToolbarBuilder(Orientation: EOrientation,UFunction: JavascriptFunction): void;
	ProcessCommandBindings_KeyEvent(InKeyEvent: KeyEvent): boolean;
	ProcessCommandBindings_PointerEvent(InMouseEvent: UPointerEvent): boolean;
	static CreateMenuBarBuilder(CommandList: JavascriptUICommandList,UFunction: JavascriptFunction): void;
	static CreateMenuBuilder(CommandList: JavascriptUICommandList,bInShouldCloseWindowAfterMenuSelection: boolean,UFunction: JavascriptFunction): void;
	static CreateToolbarBuilder(CommandList: JavascriptUICommandList,Orientation: EOrientation,UFunction: JavascriptFunction): void;
	static ProcessCommandBindings_KeyEvent(CommandList: JavascriptUICommandList,InKeyEvent: KeyEvent): boolean;
	static ProcessCommandBindings_PointerEvent(CommandList: JavascriptUICommandList,InMouseEvent: UPointerEvent): boolean;
	static CreateUICommandList(): JavascriptUICommandList;
	static GetLevelEditorActions(): JavascriptUICommandList;
}

declare class JavascriptUICommands extends UObject { 
	OnExecuteAction: UnrealEngineDelegate<(ID: string) => void>;
	OnCanExecuteAction: UnrealEngineDelegate<(ID: string) => boolean>;
	OnIsActionChecked: UnrealEngineDelegate<(ID: string) => boolean>;
	OnIsActionButtonVisible: UnrealEngineDelegate<(ID: string) => boolean>;
	Commands: JavascriptUICommand[];
	ContextName: string;
	ContextDesc: string;
	ContextNameParent: string;
	StyleSetName: string;
	TextSubNamespace: string;
	CommandInfos: JavascriptUICommandInfo[];
	BindingContext: JavascriptBindingContext;
	static Load(ResourceName: string): JavascriptUICommands;
	static Find(Outer: UObject, ResourceName: string): JavascriptUICommands;
	static GetDefaultObject(): JavascriptUICommands;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptUICommands;
	Uninitialize(): void;
	Unbind(List: JavascriptUICommandList): void;
	Refresh(): void;
	Initialize(): void;
	GetAction(ID: string): JavascriptUICommandInfo;
	Discard(): void;
	Commit(): void;
	static BroadcastCommandsChanged(InContextName: string): void;
	Bind(List: JavascriptUICommandList): void;
	static C(Other: UObject | any): JavascriptUICommands;
}

declare type EJavascriptExtensionHook = 'Before' | 'After' | 'First' | 'EJavascriptExtensionHook_MAX';
declare var EJavascriptExtensionHook : { Before:'Before',After:'After',First:'First',EJavascriptExtensionHook_MAX:'EJavascriptExtensionHook_MAX', };
declare class JavascriptMenuExtension { 
	ExtensionHook: string;
	HookPosition: EJavascriptExtensionHook;
	clone() : JavascriptMenuExtension;
	static C(Other: UObject | any): JavascriptMenuExtension;
}

declare class JavascriptUIExtender extends UObject { 
	MenuExtensions: JavascriptMenuExtension[];
	ToolbarExtensions: JavascriptMenuExtension[];
	OnHook: UnrealEngineDelegate<(Hook: string) => void>;
	static Load(ResourceName: string): JavascriptUIExtender;
	static Find(Outer: UObject, ResourceName: string): JavascriptUIExtender;
	static GetDefaultObject(): JavascriptUIExtender;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptUIExtender;
	static GetTopCommandList(): JavascriptUICommandList;
	static EndSection(): void;
	static Bind(Commands: JavascriptUICommands): void;
	static BeginSection(Name: string,text: string): void;
	static AddToolBarButton(Commands: JavascriptUICommands,ID: string): void;
	static AddMenuSeparator(): void;
	static AddMenuEntry(Commands: JavascriptUICommands,ID: string): void;
	static C(Other: UObject | any): JavascriptUIExtender;
}

declare class JavascriptAssetEditorToolkit extends UObject { 
	ToolkitFName: string;
	Layout: string;
	BaseToolkitName: string;
	ToolkitName: string;
	WorldCentricTabColorScale: LinearColor;
	WorldCentricTabPrefix: string;
	Tabs: JavascriptEditorTab[];
	Commands: JavascriptUICommands;
	MenuExtender: JavascriptUIExtender;
	ToolbarExtender: JavascriptUIExtender;
	TestArray: number[];
	static Load(ResourceName: string): JavascriptAssetEditorToolkit;
	static Find(Outer: UObject, ResourceName: string): JavascriptAssetEditorToolkit;
	static GetDefaultObject(): JavascriptAssetEditorToolkit;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptAssetEditorToolkit;
	Refresh(): void;
	Discard(): void;
	Commit(): void;
	static C(Other: UObject | any): JavascriptAssetEditorToolkit;
}

declare class JavascriptAssetPicker extends Widget { 
	OnGetDefaultValue: UnrealEngineDelegate<() => UObject>;
	OnSetDefaultValue: UnrealEngineDelegate<(Value: string) => void>;
	CategoryObject: UObject;
	AllowedClasses: string;
	static Load(ResourceName: string): JavascriptAssetPicker;
	static Find(Outer: UObject, ResourceName: string): JavascriptAssetPicker;
	static GetDefaultObject(): JavascriptAssetPicker;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptAssetPicker;
	SetCategoryObject(InCategoryObject: UObject): void;
	SetAllowedClasses(InAllowedClasses: string): void;
	static C(Other: UObject | any): JavascriptAssetPicker;
}

declare class JavascriptAssetTypeActions extends UObject { 
	ActionsName: string;
	Color: Color;
	SupportedClass: UnrealEngineClass;
	Editor: JavascriptAssetEditorToolkit;
	Actions: JavascriptUIExtender;
	static Load(ResourceName: string): JavascriptAssetTypeActions;
	static Find(Outer: UObject, ResourceName: string): JavascriptAssetTypeActions;
	static GetDefaultObject(): JavascriptAssetTypeActions;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptAssetTypeActions;
	Refresh(): void;
	Discard(): void;
	Commit(): void;
	static C(Other: UObject | any): JavascriptAssetTypeActions;
}

declare class JavascriptClassViewer extends Widget { 
	OnGetDefaultValue: UnrealEngineDelegate<() => UnrealEngineClass>;
	OnSetDefaultValue: UnrealEngineDelegate<(Value: string) => void>;
	CategoryClass: UnrealEngineClass;
	AllowedChildrenOfClasses: UnrealEngineClass[];
	static Load(ResourceName: string): JavascriptClassViewer;
	static Find(Outer: UObject, ResourceName: string): JavascriptClassViewer;
	static GetDefaultObject(): JavascriptClassViewer;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptClassViewer;
	SetCategoryClass(InCategoryClass: UnrealEngineClass): void;
	SetAllowedChildrenOfClasses(InAllowedChildrenOfClasses: UnrealEngineClass[]): void;
	static C(Other: UObject | any): JavascriptClassViewer;
}

declare class JavascriptColorPicker extends Widget { 
	OnColorChanged: UnrealEngineMulticastDelegate<(Color: LinearColor) => void>;
	SelectedColor: LinearColor;
	static Load(ResourceName: string): JavascriptColorPicker;
	static Find(Outer: UObject, ResourceName: string): JavascriptColorPicker;
	static GetDefaultObject(): JavascriptColorPicker;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptColorPicker;
	static C(Other: UObject | any): JavascriptColorPicker;
}

declare class JavascriptCommandlet extends Commandlet { 
	CmdLineTokens: string[];
	CmdLineSwitches: string[];
	static Load(ResourceName: string): JavascriptCommandlet;
	static Find(Outer: UObject, ResourceName: string): JavascriptCommandlet;
	static GetDefaultObject(): JavascriptCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptCommandlet;
	static C(Other: UObject | any): JavascriptCommandlet;
}

declare class JavascriptCurveTableEditor extends Widget { 
	static Load(ResourceName: string): JavascriptCurveTableEditor;
	static Find(Outer: UObject, ResourceName: string): JavascriptCurveTableEditor;
	static GetDefaultObject(): JavascriptCurveTableEditor;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptCurveTableEditor;
	SetObject(UObject: CurveTable,bForceRefresh: boolean): void;
	Destruct(): void;
	Construct(): void;
	static C(Other: UObject | any): JavascriptCurveTableEditor;
}

declare class JavascriptWholeRowDetailCustomization extends UObject { 
	TypeName: string;
	CategoryName: string;
	CustomWidget: JavascriptSlateWidget;
	static Load(ResourceName: string): JavascriptWholeRowDetailCustomization;
	static Find(Outer: UObject, ResourceName: string): JavascriptWholeRowDetailCustomization;
	static GetDefaultObject(): JavascriptWholeRowDetailCustomization;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptWholeRowDetailCustomization;
	Unregister(): void;
	Register(): void;
	static C(Other: UObject | any): JavascriptWholeRowDetailCustomization;
}

declare class JavascriptDetailCustomization extends UObject { 
	TypeName: string;
	CategoryName: string;
	NameWidget: JavascriptSlateWidget;
	ValueWidget: JavascriptSlateWidget;
	static Load(ResourceName: string): JavascriptDetailCustomization;
	static Find(Outer: UObject, ResourceName: string): JavascriptDetailCustomization;
	static GetDefaultObject(): JavascriptDetailCustomization;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptDetailCustomization;
	Unregister(): void;
	Register(): void;
	static C(Other: UObject | any): JavascriptDetailCustomization;
}

declare class JavascriptEditorEngineLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): JavascriptEditorEngineLibrary;
	static Find(Outer: UObject, ResourceName: string): JavascriptEditorEngineLibrary;
	static GetDefaultObject(): JavascriptEditorEngineLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptEditorEngineLibrary;
	static SetMaterial(Engine: EditorEngine,InModel: Model,Material: MaterialInterface,Surfaces: number[]): void;
	static SelectNone(Engine: EditorEngine,bNoteSelectionChange: boolean,bDeselectBSPSurfs: boolean,WarnAboutManyActors: boolean): void;
	static SelectGroup(Engine: EditorEngine,InGroupActor: GroupActor,bForceSelection: boolean,bInSelected: boolean,bNotify: boolean): void;
	static SelectComponent(Engine: EditorEngine,Component: ActorComponent,bInSelected: boolean,bNotify: boolean,bSelectEvenIfHidden: boolean): void;
	static SelectActor(Engine: EditorEngine,Actor: Actor,bInSelected: boolean,bNotify: boolean,bSelectEvenIfHidden: boolean,bForceRefresh: boolean): void;
	static RedrawAllViewports(Engine: EditorEngine,bInvalidateHitProxies: boolean): void;
	static RebuildStaticNavigableGeometry(Engine: EditorEngine,Level: Level): void;
	static RebuildLevel(Engine: EditorEngine,Level: Level): void;
	static GetSurfaces(Brush: Brush,Surfaces?: number[]): {Surfaces: number[]};
	static GetSelectedSet(Engine: EditorEngine,Class: UnrealEngineClass): USelection;
	static GetSelectedObjects(Engine: EditorEngine): USelection;
	static GetSelectedComponents(Engine: EditorEngine): USelection;
	static GetSelectedActors(Engine: EditorEngine): USelection;
	static GetPIEWorld(Engine: Engine): World;
	static GetLongPackagePath(InPackage: Package): string;
	static GetEditorWorld(Engine: Engine): World;
	static FindBrushBuilder(Engine: EditorEngine,BrushBuilderClass: UnrealEngineClass): BrushBuilder;
	static Exec(Engine: EditorEngine,InWorld: World,Command: string,Out?: string): {Out: string, $: boolean};
	static DuplicateAsset(AssetName: string,PackagePath: string,OriginalObject: UObject): UObject;
	static DeleteObjectsUnchecked(ObjectsToDelete: UObject[]): number;
	static CanSelectActor(Engine: EditorEngine,Actor: Actor,bInSelected: boolean,bSelectEvenIfHidden: boolean,bWarnIfLevelLocked: boolean): boolean;
	static bspBrushCSG(Engine: EditorEngine,Actor: Brush,Model: Model,PolyFlags: number,BrushType: EBrushType,CSGOper: ECsgOper,bBuildBounds: boolean,bMergePolys: boolean,bReplaceNULLMaterialRefs: boolean,bShowProgressBar: boolean): number;
	static C(Other: UObject | any): JavascriptEditorEngineLibrary;
}

declare class JavascriptAssetData { 
	ObjectPath: string;
	PackageName: string;
	PackagePath: string;
	AssetName: string;
	AssetClass: string;
	ChunkIDs: number[];
	PackageFlags: number;
	clone() : JavascriptAssetData;
	static C(Other: UObject | any): JavascriptAssetData;
	GetAllTags(OutArray?: string[]): {OutArray: string[]};
	GetAsset(): UObject;
	GetClass(): UnrealEngineClass;
	GetPackage(): Package;
	GetTagValue(Name: string,OutValue?: string): {OutValue: string, $: boolean};
	IsAssetLoaded(): boolean;
	static GetAllTags(AssetData: JavascriptAssetData,OutArray?: string[]): {OutArray: string[]};
	static GetAsset(AssetData: JavascriptAssetData): UObject;
	static GetClass(AssetData: JavascriptAssetData): UnrealEngineClass;
	static GetPackage(AssetData: JavascriptAssetData): Package;
	static GetTagValue(AssetData: JavascriptAssetData,Name: string,OutValue?: string): {OutValue: string, $: boolean};
	static IsAssetLoaded(AssetData: JavascriptAssetData): boolean;
}

declare class JavascriptEditorGlobalDelegates extends UObject { 
	static Load(ResourceName: string): JavascriptEditorGlobalDelegates;
	static Find(Outer: UObject, ResourceName: string): JavascriptEditorGlobalDelegates;
	static GetDefaultObject(): JavascriptEditorGlobalDelegates;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptEditorGlobalDelegates;
	WorldChange(): void;
	UnbindAll(): void;
	Unbind(Key: string): void;
	SurfProps(): void;
	SingleStepPIE(bIsSimulating: boolean): void;
	SelectObjectEvent(UObject: UObject): void;
	SelectNoneEvent(): void;
	SelectionChangedEvent(UObject: UObject): void;
	SelectedProps(): void;
	ResumePIE(bIsSimulating: boolean): void;
	RefreshPrimitiveStatsBrowser(): void;
	RefreshLayerBrowser(): void;
	RefreshEditor(): void;
	RefreshAllBrowsers(): void;
	RedrawAllViewports(): void;
	PropertySelectionChange(): void;
	PreSaveWorldWithContext_Friendly(SaveFlags: number,World: World): void;
	PreBeginPIE(bIsSimulating: boolean): void;
	PostSaveWorldWithContext_Friendly(SaveFlags: number,World: World,bSuccess: boolean): void;
	PostPIEStarted(bIsSimulating: boolean): void;
	PostLandscapeLayerUpdated(): void;
	OnShutdownPostPackagesSaved(): void;
	OnPathRemoved(Path: string): void;
	OnPathAdded(Path: string): void;
	OnObjectReimported(UObject: UObject): void;
	OnNewAssetCreated(InFactory: Factory): void;
	OnNewActorsDropped(DroppedObjects: UObject[],OutNewActors: Actor[]): void;
	OnMapOpened(Filename: string,bAsTemplate: boolean): void;
	OnMainFrameCreationFinished_Friendly(): void;
	OnLightingBuildStarted(): void;
	OnLightingBuildKept(): void;
	OnLevelActorDeleted(Actor: Actor): void;
	OnLevelActorAdded(Actor: Actor): void;
	OnInMemoryAssetDeleted(InObject: UObject): void;
	OnInMemoryAssetCreated(InObject: UObject): void;
	OnGridSnappingChanged(bGridEnabled: boolean,GridSize: number): void;
	OnFocusViewportOnActors(Actors: Actor[]): void;
	OnFinishPickingBlueprintClass(InClass: UnrealEngineClass): void;
	OnFilesLoaded(): void;
	OnFileLoadProgressUpdated_Friendly(NumTotalAssets: number,NumAssetsProcessedByAssetRegistry: number,NumAssetsPendingDataLoad: number,bIsDiscoveringAssetFiles: boolean): void;
	OnEditPasteActorsEnd(): void;
	OnEditPasteActorsBegin(): void;
	OnEditorCameraMoved(ViewLocation: Vector,ViewRotation: Rotator,ViewportType: ELevelViewportType,ViewIndex: number): void;
	OnEditCutActorsEnd(): void;
	OnEditCutActorsBegin(): void;
	OnEditCopyActorsEnd(): void;
	OnEditCopyActorsBegin(): void;
	OnDuplicateActorsEnd(): void;
	OnDuplicateActorsBegin(): void;
	OnDollyPerspectiveCamera(Drag: Vector,ViewIndex: number): void;
	OnDeleteActorsEnd(): void;
	OnDeleteActorsBegin(): void;
	OnConsoleCommandJS(Args: string[],InWorld: World): void;
	OnConfigureNewAssetProperties(InFactory: Factory): void;
	OnClassPackageLoadedOrUnloaded(): void;
	OnBlueprintReinstanced(): void;
	OnBlueprintPreCompile(Blueprint: Blueprint): void;
	OnBlueprintCompiled(): void;
	OnAssetsPreDelete(Assets: UObject[]): void;
	OnAssetsDeleted(Classes: UnrealEngineClass[]): void;
	OnAssetRenamed_Friendly(AssetData: JavascriptAssetData,Name: string): void;
	OnAssetRemoved_Friendly(AssetData: JavascriptAssetData): void;
	OnAssetReimport(InCreatedObject: UObject): void;
	OnAssetPreImport_Friendly(InFactory: Factory,InClass: UnrealEngineClass,InParent: UObject,Name: string,Type: string): void;
	OnAssetPostImport(InFactory: Factory,InCreatedObject: UObject): void;
	OnAssetAdded_Friendly(AssetData: JavascriptAssetData): void;
	OnApplyObjectToActor(ObjectToApply: UObject,Actor: Actor): void;
	OnAddLevelToWorld(Level: Level): void;
	OnActionAxisMappingsChanged(): void;
	NewCurrentLevel(): void;
	MapChange_Friendly(MapChangeFlags: number): void;
	LoadSelectedAssetsIfNeeded(): void;
	LayerChange(): void;
	FitTextureToSurface(World: World): void;
	EndPlayMapDelegate(): void;
	EndPIE(bIsSimulating: boolean): void;
	DisplayLoadErrors(): void;
	CleanseEditor(): void;
	ChangeEditorMode(NewMode: string): void;
	Bind(Key: string): void;
	BeginPIE(bIsSimulating: boolean): void;
	ActorPropertiesChange(): void;
	static C(Other: UObject | any): JavascriptEditorGlobalDelegates;
}

declare class JavascriptEditorInputProcessor extends UObject { 
	static Load(ResourceName: string): JavascriptEditorInputProcessor;
	static Find(Outer: UObject, ResourceName: string): JavascriptEditorInputProcessor;
	static GetDefaultObject(): JavascriptEditorInputProcessor;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptEditorInputProcessor;
	UnRegister(): void;
	Register(): void;
	HandleMouseMoveEvent(InPointerEvent: UPointerEvent): boolean;
	HandleKeyUpEvent(InKeyEvent: KeyEvent): boolean;
	HandleKeyDownEvent(InKeyEvent: KeyEvent): boolean;
	HandleAnalogInputEvent(InKeyEvent: AnalogInputEvent): boolean;
	Activate(bEnable: boolean): void;
	static C(Other: UObject | any): JavascriptEditorInputProcessor;
}

declare class JavascriptExtensionBase { 
	clone() : JavascriptExtensionBase;
	static C(Other: UObject | any): JavascriptExtensionBase;
}

declare class JavascriptMenuBuilder { 
	clone() : JavascriptMenuBuilder;
	static C(Other: UObject | any): JavascriptMenuBuilder;
	AddComboButton(UObject?: JavascriptComboButtonContext,EditingObject?: UObject): {Builder: JavascriptMenuBuilder};
	AddMenuByCommands(UICommands?: JavascriptUICommands): {Builder: JavascriptMenuBuilder};
	AddMenuEntry(UObject?: JavascriptMenuContext): {Builder: JavascriptMenuBuilder};
	AddPullDownMenu(InMenuLabel?: string,InToolTip?: string,InPullDownMenu?: JavascriptFunction,InExtensionHook?: string,InTutorialHighlightName?: string): {MenuBuilder: JavascriptMenuBuilder};
	AddSeparator(): {Builder: JavascriptMenuBuilder};
	AddSubMenu(Label?: string,Tooltip?: string,bInOpenSubMenuOnClick?: boolean,UFunction?: JavascriptFunction): {Builder: JavascriptMenuBuilder};
	AddToolBarButton(CommandInfo?: JavascriptUICommandInfo): {Builder: JavascriptMenuBuilder};
	AddToolBarButtonByContext(Context?: JavascriptToolbarButtonContext,EditingObject?: UObject): {Builder: JavascriptMenuBuilder};
	AddWidget(Widget?: Widget,Label?: string,bNoIndent?: boolean,InTutorialHighlightName?: string,bSearchable?: boolean): {Builder: JavascriptMenuBuilder};
	BeginSection(InExtensionHook?: string,MenuHeadingText?: string): {Builder: JavascriptMenuBuilder};
	EndSection(): {Builder: JavascriptMenuBuilder};
	PopCommandList(): {Builder: JavascriptMenuBuilder};
	PushCommandList(List?: JavascriptUICommandList): {Builder: JavascriptMenuBuilder};
	static AddComboButton(Builder?: JavascriptMenuBuilder,UObject?: JavascriptComboButtonContext,EditingObject?: UObject): {Builder: JavascriptMenuBuilder};
	static AddMenuByCommands(Builder?: JavascriptMenuBuilder,UICommands?: JavascriptUICommands): {Builder: JavascriptMenuBuilder};
	static AddMenuEntry(Builder?: JavascriptMenuBuilder,UObject?: JavascriptMenuContext): {Builder: JavascriptMenuBuilder};
	static AddPullDownMenu(MenuBuilder?: JavascriptMenuBuilder,InMenuLabel?: string,InToolTip?: string,InPullDownMenu?: JavascriptFunction,InExtensionHook?: string,InTutorialHighlightName?: string): {MenuBuilder: JavascriptMenuBuilder};
	static AddSeparator(Builder?: JavascriptMenuBuilder): {Builder: JavascriptMenuBuilder};
	static AddSubMenu(Builder?: JavascriptMenuBuilder,Label?: string,Tooltip?: string,bInOpenSubMenuOnClick?: boolean,UFunction?: JavascriptFunction): {Builder: JavascriptMenuBuilder};
	static AddToolBarButton(Builder?: JavascriptMenuBuilder,CommandInfo?: JavascriptUICommandInfo): {Builder: JavascriptMenuBuilder};
	static AddToolBarButtonByContext(Builder?: JavascriptMenuBuilder,Context?: JavascriptToolbarButtonContext,EditingObject?: UObject): {Builder: JavascriptMenuBuilder};
	static AddWidget(Builder?: JavascriptMenuBuilder,Widget?: Widget,Label?: string,bNoIndent?: boolean,InTutorialHighlightName?: string,bSearchable?: boolean): {Builder: JavascriptMenuBuilder};
	static BeginSection(Builder?: JavascriptMenuBuilder,InExtensionHook?: string,MenuHeadingText?: string): {Builder: JavascriptMenuBuilder};
	static EndSection(Builder?: JavascriptMenuBuilder): {Builder: JavascriptMenuBuilder};
	static PopCommandList(Builder?: JavascriptMenuBuilder): {Builder: JavascriptMenuBuilder};
	static PushCommandList(Builder?: JavascriptMenuBuilder,List?: JavascriptUICommandList): {Builder: JavascriptMenuBuilder};
}

declare class JavascriptExtender { 
	clone() : JavascriptExtender;
	static C(Other: UObject | any): JavascriptExtender;
	AddMenubarExtension(ExtensionHook: string,HookPosition: EJavascriptExtensionHook,CommandList: JavascriptUICommandList,UFunction: JavascriptFunction): JavascriptExtensionBase;
	AddMenuExtension(ExtensionHook: string,HookPosition: EJavascriptExtensionHook,CommandList: JavascriptUICommandList,UFunction: JavascriptFunction): JavascriptExtensionBase;
	AddToolBarExtension(ExtensionHook: string,HookPosition: EJavascriptExtensionHook,CommandList: JavascriptUICommandList,UFunction: JavascriptFunction): JavascriptExtensionBase;
	Apply(ExtensionHook: string,HookPosition: EJavascriptExtensionHook,MenuBuilder?: JavascriptMenuBuilder): {MenuBuilder: JavascriptMenuBuilder};
	RemoveExtension(Extension: JavascriptExtensionBase): void;
	static AddMenubarExtension(Extender: JavascriptExtender,ExtensionHook: string,HookPosition: EJavascriptExtensionHook,CommandList: JavascriptUICommandList,UFunction: JavascriptFunction): JavascriptExtensionBase;
	static AddMenuExtension(Extender: JavascriptExtender,ExtensionHook: string,HookPosition: EJavascriptExtensionHook,CommandList: JavascriptUICommandList,UFunction: JavascriptFunction): JavascriptExtensionBase;
	static AddToolBarExtension(Extender: JavascriptExtender,ExtensionHook: string,HookPosition: EJavascriptExtensionHook,CommandList: JavascriptUICommandList,UFunction: JavascriptFunction): JavascriptExtensionBase;
	static Apply(Extender: JavascriptExtender,ExtensionHook: string,HookPosition: EJavascriptExtensionHook,MenuBuilder?: JavascriptMenuBuilder): {MenuBuilder: JavascriptMenuBuilder};
	static RemoveExtension(Extender: JavascriptExtender,Extension: JavascriptExtensionBase): void;
	static Combine(Extenders: JavascriptExtender[]): JavascriptExtender;
}

declare class JavascriptLazyExtenderDelegates extends UObject { 
	GetExtender: UnrealEngineDelegate<(List: JavascriptUICommandList, EditingObjects: UObject[]) => JavascriptExtender>;
	static Load(ResourceName: string): JavascriptLazyExtenderDelegates;
	static Find(Outer: UObject, ResourceName: string): JavascriptLazyExtenderDelegates;
	static GetDefaultObject(): JavascriptLazyExtenderDelegates;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptLazyExtenderDelegates;
	static C(Other: UObject | any): JavascriptLazyExtenderDelegates;
}

declare type EJavascriptRHIFeatureLevel = 'ES2' | 'ES3_1' | 'SM4' | 'SM5' | 'Num' | 'EJavascriptRHIFeatureLevel_MAX';
declare var EJavascriptRHIFeatureLevel : { ES2:'ES2',ES3_1:'ES3_1',SM4:'SM4',SM5:'SM5',Num:'Num',EJavascriptRHIFeatureLevel_MAX:'EJavascriptRHIFeatureLevel_MAX', };
declare class JavascriptPDI { 
	clone() : JavascriptPDI;
	static C(Other: UObject | any): JavascriptPDI;
	DrawArc(Base: Vector,X: Vector,Y: Vector,MinAngle: number,MaxAngle: number,Radius: number,Sections: number,Color: LinearColor,DepthPriority: ESceneDepthPriorityGroup): void;
	DrawCircle(Base: Vector,X: Vector,Y: Vector,Color: LinearColor,Radius: number,NumSides: number,DepthPriority: ESceneDepthPriorityGroup,Thickness: number,DepthBias: number,bScreenSpace: boolean): void;
	DrawConnectedArrow(ArrowToWorld: Transform,Color: LinearColor,ArrowHeight: number,ArrowWidth: number,DepthPriority: ESceneDepthPriorityGroup,Thickness: number,NumSpokes: number): void;
	DrawDashedLine(Start: Vector,End: Vector,Color: LinearColor,DashSize: number,DepthPriority: ESceneDepthPriorityGroup,DepthBias: number): void;
	DrawDirectionalArrow(ArrowToWorld: Transform,InColor: LinearColor,Length: number,ArrowSize: number,DepthPriority: ESceneDepthPriorityGroup,Thickness: number): void;
	DrawOrientedWireBox(Base: Vector,X: Vector,Y: Vector,Z: Vector,Extent: Vector,Color: LinearColor,DepthPriority: ESceneDepthPriorityGroup,Thickness: number,DepthBias: number,bScreenSpace: boolean): void;
	DrawPolygon(Verts: Vector[],InColor: LinearColor,DepthPriority: ESceneDepthPriorityGroup,RHIFeatureLevel: EJavascriptRHIFeatureLevel): void;
	DrawWireBox(Box: Box,Color: LinearColor,DepthPriority: ESceneDepthPriorityGroup,Thickness: number,DepthBias: number,bScreenSpace: boolean): void;
	DrawWireBox2(Matrix: Transform,Box: Box,Color: LinearColor,DepthPriority: ESceneDepthPriorityGroup,Thickness: number,DepthBias: number,bScreenSpace: boolean): void;
	DrawWireCapsule(Base: Vector,X: Vector,Y: Vector,Z: Vector,Color: LinearColor,Radius: number,HalfHeight: number,NumSides: number,DepthPriority: ESceneDepthPriorityGroup,Thickness: number,DepthBias: number,bScreenSpace: boolean): void;
	DrawWireChoppedCone(Base: Vector,X: Vector,Y: Vector,Z: Vector,Color: LinearColor,Radius: number,TopRadius: number,HalfHeight: number,NumSides: number,DepthPriority: ESceneDepthPriorityGroup): void;
	DrawWireCone(Verts?: Vector[],Transform?: Transform,ConeRadius?: number,ConeAngle?: number,ConeSides?: number,Color?: LinearColor,DepthPriority?: ESceneDepthPriorityGroup,Thickness?: number,DepthBias?: number,bScreenSpace?: boolean): {Verts: Vector[]};
	DrawWireCylinder(Base: Vector,X: Vector,Y: Vector,Z: Vector,Color: LinearColor,Radius: number,HalfHeight: number,NumSides: number,DepthPriority: ESceneDepthPriorityGroup,Thickness: number,DepthBias: number,bScreenSpace: boolean): void;
	DrawWireDiamond(Transform: Transform,Size: number,InColor: LinearColor,DepthPriority: ESceneDepthPriorityGroup): void;
	DrawWireSphere(Base: Vector,Color: LinearColor,Radius: number,NumSides: number,DepthPriority: ESceneDepthPriorityGroup,Thickness: number,DepthBias: number,bScreenSpace: boolean): void;
	DrawWireSphere2(Transform: Transform,Color: LinearColor,Radius: number,NumSides: number,DepthPriority: ESceneDepthPriorityGroup,Thickness: number,DepthBias: number,bScreenSpace: boolean): void;
	DrawWireSphereAutoSides(Base: Vector,Color: LinearColor,Radius: number,DepthPriority: ESceneDepthPriorityGroup,Thickness: number,DepthBias: number,bScreenSpace: boolean): void;
	DrawWireSphereAutoSides2(Transform: Transform,Color: LinearColor,Radius: number,DepthPriority: ESceneDepthPriorityGroup,Thickness: number,DepthBias: number,bScreenSpace: boolean): void;
	DrawWireSphereCappedCone(Transform: Transform,ConeRadius: number,ConeAngle: number,ConeSides: number,ArcFrequency: number,CapSegments: number,Color: LinearColor,DepthPriority: ESceneDepthPriorityGroup): void;
	DrawWireStar(position: Vector,Size: number,Color: LinearColor,DepthPriority: ESceneDepthPriorityGroup): void;
	SetHitProxy(Name: string): void;
	static DrawArc(PDI: JavascriptPDI,Base: Vector,X: Vector,Y: Vector,MinAngle: number,MaxAngle: number,Radius: number,Sections: number,Color: LinearColor,DepthPriority: ESceneDepthPriorityGroup): void;
	static DrawCircle(PDI: JavascriptPDI,Base: Vector,X: Vector,Y: Vector,Color: LinearColor,Radius: number,NumSides: number,DepthPriority: ESceneDepthPriorityGroup,Thickness: number,DepthBias: number,bScreenSpace: boolean): void;
	static DrawConnectedArrow(PDI: JavascriptPDI,ArrowToWorld: Transform,Color: LinearColor,ArrowHeight: number,ArrowWidth: number,DepthPriority: ESceneDepthPriorityGroup,Thickness: number,NumSpokes: number): void;
	static DrawDashedLine(PDI: JavascriptPDI,Start: Vector,End: Vector,Color: LinearColor,DashSize: number,DepthPriority: ESceneDepthPriorityGroup,DepthBias: number): void;
	static DrawDirectionalArrow(PDI: JavascriptPDI,ArrowToWorld: Transform,InColor: LinearColor,Length: number,ArrowSize: number,DepthPriority: ESceneDepthPriorityGroup,Thickness: number): void;
	static DrawOrientedWireBox(PDI: JavascriptPDI,Base: Vector,X: Vector,Y: Vector,Z: Vector,Extent: Vector,Color: LinearColor,DepthPriority: ESceneDepthPriorityGroup,Thickness: number,DepthBias: number,bScreenSpace: boolean): void;
	static DrawPolygon(PDI: JavascriptPDI,Verts: Vector[],InColor: LinearColor,DepthPriority: ESceneDepthPriorityGroup,RHIFeatureLevel: EJavascriptRHIFeatureLevel): void;
	static DrawWireBox(PDI: JavascriptPDI,Box: Box,Color: LinearColor,DepthPriority: ESceneDepthPriorityGroup,Thickness: number,DepthBias: number,bScreenSpace: boolean): void;
	static DrawWireBox2(PDI: JavascriptPDI,Matrix: Transform,Box: Box,Color: LinearColor,DepthPriority: ESceneDepthPriorityGroup,Thickness: number,DepthBias: number,bScreenSpace: boolean): void;
	static DrawWireCapsule(PDI: JavascriptPDI,Base: Vector,X: Vector,Y: Vector,Z: Vector,Color: LinearColor,Radius: number,HalfHeight: number,NumSides: number,DepthPriority: ESceneDepthPriorityGroup,Thickness: number,DepthBias: number,bScreenSpace: boolean): void;
	static DrawWireChoppedCone(PDI: JavascriptPDI,Base: Vector,X: Vector,Y: Vector,Z: Vector,Color: LinearColor,Radius: number,TopRadius: number,HalfHeight: number,NumSides: number,DepthPriority: ESceneDepthPriorityGroup): void;
	static DrawWireCone(PDI: JavascriptPDI,Verts?: Vector[],Transform?: Transform,ConeRadius?: number,ConeAngle?: number,ConeSides?: number,Color?: LinearColor,DepthPriority?: ESceneDepthPriorityGroup,Thickness?: number,DepthBias?: number,bScreenSpace?: boolean): {Verts: Vector[]};
	static DrawWireCylinder(PDI: JavascriptPDI,Base: Vector,X: Vector,Y: Vector,Z: Vector,Color: LinearColor,Radius: number,HalfHeight: number,NumSides: number,DepthPriority: ESceneDepthPriorityGroup,Thickness: number,DepthBias: number,bScreenSpace: boolean): void;
	static DrawWireDiamond(PDI: JavascriptPDI,Transform: Transform,Size: number,InColor: LinearColor,DepthPriority: ESceneDepthPriorityGroup): void;
	static DrawWireSphere(PDI: JavascriptPDI,Base: Vector,Color: LinearColor,Radius: number,NumSides: number,DepthPriority: ESceneDepthPriorityGroup,Thickness: number,DepthBias: number,bScreenSpace: boolean): void;
	static DrawWireSphere2(PDI: JavascriptPDI,Transform: Transform,Color: LinearColor,Radius: number,NumSides: number,DepthPriority: ESceneDepthPriorityGroup,Thickness: number,DepthBias: number,bScreenSpace: boolean): void;
	static DrawWireSphereAutoSides(PDI: JavascriptPDI,Base: Vector,Color: LinearColor,Radius: number,DepthPriority: ESceneDepthPriorityGroup,Thickness: number,DepthBias: number,bScreenSpace: boolean): void;
	static DrawWireSphereAutoSides2(PDI: JavascriptPDI,Transform: Transform,Color: LinearColor,Radius: number,DepthPriority: ESceneDepthPriorityGroup,Thickness: number,DepthBias: number,bScreenSpace: boolean): void;
	static DrawWireSphereCappedCone(PDI: JavascriptPDI,Transform: Transform,ConeRadius: number,ConeAngle: number,ConeSides: number,ArcFrequency: number,CapSegments: number,Color: LinearColor,DepthPriority: ESceneDepthPriorityGroup): void;
	static DrawWireStar(PDI: JavascriptPDI,position: Vector,Size: number,Color: LinearColor,DepthPriority: ESceneDepthPriorityGroup): void;
	static SetHitProxy(PDI: JavascriptPDI,Name: string): void;
}

declare class JavascriptExtensibilityManager { 
	clone() : JavascriptExtensibilityManager;
	static C(Other: UObject | any): JavascriptExtensibilityManager;
	AddExtender(Extender: JavascriptExtender): void;
	AddLazyExtender(Delegates: JavascriptLazyExtenderDelegates): void;
	RemoveAllLazyExtender(): void;
	RemoveExtender(Extender: JavascriptExtender): void;
	static AddExtender(Manager: JavascriptExtensibilityManager,Extender: JavascriptExtender): void;
	static AddLazyExtender(Manager: JavascriptExtensibilityManager,Delegates: JavascriptLazyExtenderDelegates): void;
	static RemoveAllLazyExtender(Manager: JavascriptExtensibilityManager): void;
	static RemoveExtender(Manager: JavascriptExtensibilityManager,Extender: JavascriptExtender): void;
	static GetMenuExtensibilityManager(What: string): JavascriptExtensibilityManager;
	static GetToolBarExtensibilityManager(What: string): JavascriptExtensibilityManager;
}

declare class JavascriptViewportClick { 
	clone() : JavascriptViewportClick;
	static C(Other: UObject | any): JavascriptViewportClick;
	GetClickPos(): IntPoint;
	GetDirection(): Vector;
	GetEvent(): EInputEvent;
	GetKey(): Key;
	GetOrigin(): Vector;
	IsAltDown(): boolean;
	IsControlDown(): boolean;
	IsShiftDown(): boolean;
	static GetClickPos(Click: JavascriptViewportClick): IntPoint;
	static GetDirection(Click: JavascriptViewportClick): Vector;
	static GetEvent(Click: JavascriptViewportClick): EInputEvent;
	static GetKey(Click: JavascriptViewportClick): Key;
	static GetOrigin(Click: JavascriptViewportClick): Vector;
	static IsAltDown(Click: JavascriptViewportClick): boolean;
	static IsControlDown(Click: JavascriptViewportClick): boolean;
	static IsShiftDown(Click: JavascriptViewportClick): boolean;
}

declare class JavascriptHitProxy { 
	clone() : JavascriptHitProxy;
	static C(Other: UObject | any): JavascriptHitProxy;
	GetActor(): Actor;
	GetName(): string;
	static GetActor(Proxy: JavascriptHitProxy): Actor;
	static GetName(Proxy: JavascriptHitProxy): string;
}

declare class JavascriptEditorObjectManager extends UObject { 
	static Load(ResourceName: string): JavascriptEditorObjectManager;
	static Find(Outer: UObject, ResourceName: string): JavascriptEditorObjectManager;
	static GetDefaultObject(): JavascriptEditorObjectManager;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptEditorObjectManager;
	SetStructRef(Key: string,Value: UnrealEngineClass,bOverride: boolean): boolean;
	SetRef(Key: string,Value: UnrealEngineClass,bOverride: boolean): boolean;
	SetObject(Key: string,Value: UObject): boolean;
	RemoveStructRef(Key: string): void;
	RemoveRef(Key: string): void;
	RemoveObjects(Key: string): void;
	HasStructRef(Key: string): boolean;
	HasRef(Key: string): boolean;
	GetStructRef(Key: string): ScriptStruct;
	GetRef(Key: string): UnrealEngineClass;
	GetObjects(Key: string): UObject[];
	GetObjectKeys(): string[];
	Clear(bWithClass: boolean): void;
	static C(Other: UObject | any): JavascriptEditorObjectManager;
}

declare type EJavascriptMessageSeverity = 'CriticalError' | 'Error' | 'PerformanceWarning' | 'Warning' | 'Info' | 'EJavascriptMessageSeverity_MAX';
declare var EJavascriptMessageSeverity : { CriticalError:'CriticalError',Error:'Error',PerformanceWarning:'PerformanceWarning',Warning:'Warning',Info:'Info',EJavascriptMessageSeverity_MAX:'EJavascriptMessageSeverity_MAX', };
declare class JavascriptEditorLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): JavascriptEditorLibrary;
	static Find(Outer: UObject, ResourceName: string): JavascriptEditorLibrary;
	static GetDefaultObject(): JavascriptEditorLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptEditorLibrary;
	static UpdateModelComponents(Level: Level): void;
	static ToggleSelect(USelection: USelection,InObject: UObject): void;
	static ToggleIsExecuteTestModePIE(): boolean;
	static SetIsTemporarilyHiddenInEditor(Actor: Actor,bIsHidden: boolean): void;
	static SetHitProxy(PDI: JavascriptPDI,Name: string): void;
	static SetHeightmapDataFromMemory(LandscapeInfo: LandscapeInfo,MinX: number,MinY: number,MaxX: number,MaxY: number): void;
	static SetFolderPath_Recursively(Actor: Actor,NewFolderPath: string): void;
	static SetFolderPath(Actor: Actor,NewFolderPath: string): void;
	static SetAlphamapDataFromMemory(LandscapeInfo: LandscapeInfo,LayerInfo: LandscapeLayerInfoObject,MinX: number,MinY: number,MaxX: number,MaxY: number,PaintingRestriction: ELandscapeLayerPaintingRestriction): void;
	static SetActorLocation(Actor: Actor,NewLocation: Vector,bSweep: boolean,SweepHitResult?: HitResult,bTeleport?: boolean): {SweepHitResult: HitResult, $: boolean};
	static SetActorLabelUnique(Actor: Actor,NewActorLabel: string,InExistingActorLabels: string[]): void;
	static SetActorLabel(Actor: Actor,NewActorLabel: string,bMarkDirty: boolean): void;
	static Select(USelection: USelection,InObject: UObject): void;
	static SavePackage(Package: Package,Filename: string): boolean;
	static SaveFileDialog(WindowHandle: JavascriptWindow,DialogTitle: string,DefaultPath: string,DefaultFile: string,FileTypes: string,Flags: number,OutFilenames?: string[]): {OutFilenames: string[], $: boolean};
	static RequestEndPlayMapInPIE(): void;
	static ReplaceAnimNotifyClass(Sequence: AnimSequenceBase,NotifyName: string,NewNotifyName: string,NewNotifyClass: UObject): number;
	static RemoveLevelInstance(World: World): void;
	static RemoveExtender(Manager: JavascriptExtensibilityManager,Extender: JavascriptExtender): void;
	static RemoveComponentFromBlueprint(Blueprint: Blueprint,RemoveComponent: ActorComponent,bPromoteChildren: boolean): void;
	static RemoveAllLazyExtender(Manager: JavascriptExtensibilityManager): void;
	static PostEditChange(InObject: UObject): void;
	static OpenFileDialog(WindowHandle: JavascriptWindow,DialogTitle: string,DefaultPath: string,DefaultFile: string,FileTypes: string,Flags: number,OutFilenames?: string[]): {OutFilenames: string[], $: boolean};
	static OpenEditorForAssetByPath(AssetPathName: string,ObjectName: string): void;
	static OpenEditorForAsset(Asset: UObject): boolean;
	static OpenDirectoryDialog(WindowHandle: JavascriptWindow,DialogTitle: string,DefaultPath: string,OutFolderName?: string): {OutFolderName: string, $: boolean};
	static NotifyUpdateCurveTable(InCurveTable: CurveTable): void;
	static ModifyObject(UObject: UObject,bAlwaysMarkDirty: boolean): void;
	static MarkPackageDirty(InObject: UObject): boolean;
	static LoadImageFromDiskAsync(ImagePath: string,Callback: AsyncTaskDownloadImage): boolean;
	static LoadFileToString(Path: string,Data?: string): {Data: string, $: boolean};
	static LoadFileToIntArray(Path: string,FileData?: number[]): {FileData: number[], $: boolean};
	static IsShiftDown(Click: JavascriptViewportClick): boolean;
	static IsControlDown(Click: JavascriptViewportClick): boolean;
	static IsAssetLoaded(AssetData: JavascriptAssetData): boolean;
	static IsAltDown(Click: JavascriptViewportClick): boolean;
	static IsActorLabelEditable(Actor: Actor): boolean;
	static IsActive(Transactor: Transactor): boolean;
	static InvalidateModelGeometry(World: World,InLevel: Level): void;
	static HasMetaData(Field: Field,Key: string): boolean;
	static GetUniqueID(InObject: UObject): number;
	static GetTransaction(Transactor: Transactor,QueueIndex: number): JavascriptTransaction;
	static GetToolBarExtensibilityManager(What: string): JavascriptExtensibilityManager;
	static GetTitle(Transaction: JavascriptTransaction): string;
	static GetTagValue(AssetData: JavascriptAssetData,Name: string,OutValue?: string): {OutValue: string, $: boolean};
	static GetSourceControlStatusText(): string;
	static GetSelectedObjects(USelection: USelection,Out?: UObject[]): {Out: UObject[], $: number};
	static GetRootWindow(): JavascriptSlateWidget;
	static GetQueueLength(Transactor: Transactor): number;
	static GetPrimaryObject(Transaction: JavascriptTransaction): UObject;
	static GetParentClassOfBlueprint(Blueprint: Blueprint): UnrealEngineClass;
	static GetPackage(AssetData: JavascriptAssetData): Package;
	static GetOrigin(Click: JavascriptViewportClick): Vector;
	static GetName(Proxy: JavascriptHitProxy): string;
	static GetMenuExtensibilityManager(What: string): JavascriptExtensibilityManager;
	static GetLevelEditorActions(): JavascriptUICommandList;
	static GetLayerInfoByName(LandscapeInfo: LandscapeInfo,LayerName: string,Owner: LandscapeProxy): LandscapeLayerInfoObject;
	static GetLandscapeInfo(Landscape: Landscape,bSpawnNewActor: boolean): LandscapeInfo;
	static GetLandscapeExtent(LandscapeInfo: LandscapeInfo,MinX?: number,MinY?: number,MaxX?: number,MaxY?: number): {MinX: number, MinY: number, MaxX: number, MaxY: number, $: boolean};
	static GetKeyNameByKeyEvent(Event: KeyEvent): string;
	static GetKey(Click: JavascriptViewportClick): Key;
	static GetIsShiftDownByKeyEvent(Event: KeyEvent): boolean;
	static GetIsExecuteTestModePIE(): boolean;
	static GetIsControlDownByKeyEvent(Event: KeyEvent): boolean;
	static GetIsAltDownByKeyEvent(Event: KeyEvent): boolean;
	static GetIPAddress(): string;
	static GetHostName(): string;
	static GetHeightmapDataToMemory(LandscapeInfo: LandscapeInfo,MinX: number,MinY: number,MaxX: number,MaxY: number): void;
	static GetGroup(Name: string): JavascriptWorkspaceItem;
	static GetFolderPath(Actor: Actor): string;
	static GetEvent(Click: JavascriptViewportClick): EInputEvent;
	static GetEngine(): EditorEngine;
	static GetEditorPlayWorld(): World;
	static GetEditorObjectManager(): JavascriptEditorObjectManager;
	static GetDirection(Click: JavascriptViewportClick): Vector;
	static GetDefaultBrush(World: World): Brush;
	static GetDataTableAsJSON(InDataTable: DataTable,InDTExportFlags: number): string;
	static GetContext(Transaction: JavascriptTransaction): string;
	static GetClickPos(Click: JavascriptViewportClick): IntPoint;
	static GetClass(AssetData: JavascriptAssetData): UnrealEngineClass;
	static GetAverageMS(): number;
	static GetAverageFPS(): number;
	static GetAssetsByType(Types: string[],bRecursiveClasses: boolean): AssetData[];
	static GetAsset(AssetData: JavascriptAssetData): UObject;
	static GetAlphamapDataToMemory(LandscapeInfo: LandscapeInfo,LayerInfo: LandscapeLayerInfoObject,MinX: number,MinY: number,MaxX: number,MaxY: number): void;
	static GetAllTags(AssetData: JavascriptAssetData,OutArray?: string[]): {OutArray: string[]};
	static GetActorRotation(Actor: Actor): Rotator;
	static GetActorLocation(Actor: Actor): Vector;
	static GetActorLabel(Actor: Actor): string;
	static GetActor(Proxy: JavascriptHitProxy): Actor;
	static FromStringTable(InTableId: string,InKey: string): JavascriptTextProperty;
	static FindWorldInPackage(Package: Package): World;
	static ExportNavigation(InWorld: World,Path: string): string;
	static EditorExec(World: World,Cmd: string): boolean;
	static EditorDestroyActor(World: World,Actor: Actor,bShouldModifyLevel: boolean): boolean;
	static EditorAddModalWindow(Widget: JavascriptSlateWidget): void;
	static DrawWireStar(PDI: JavascriptPDI,position: Vector,Size: number,Color: LinearColor,DepthPriority: ESceneDepthPriorityGroup): void;
	static DrawWireSphereCappedCone(PDI: JavascriptPDI,Transform: Transform,ConeRadius: number,ConeAngle: number,ConeSides: number,ArcFrequency: number,CapSegments: number,Color: LinearColor,DepthPriority: ESceneDepthPriorityGroup): void;
	static DrawWireSphereAutoSides2(PDI: JavascriptPDI,Transform: Transform,Color: LinearColor,Radius: number,DepthPriority: ESceneDepthPriorityGroup,Thickness: number,DepthBias: number,bScreenSpace: boolean): void;
	static DrawWireSphereAutoSides(PDI: JavascriptPDI,Base: Vector,Color: LinearColor,Radius: number,DepthPriority: ESceneDepthPriorityGroup,Thickness: number,DepthBias: number,bScreenSpace: boolean): void;
	static DrawWireSphere2(PDI: JavascriptPDI,Transform: Transform,Color: LinearColor,Radius: number,NumSides: number,DepthPriority: ESceneDepthPriorityGroup,Thickness: number,DepthBias: number,bScreenSpace: boolean): void;
	static DrawWireSphere(PDI: JavascriptPDI,Base: Vector,Color: LinearColor,Radius: number,NumSides: number,DepthPriority: ESceneDepthPriorityGroup,Thickness: number,DepthBias: number,bScreenSpace: boolean): void;
	static DrawWireDiamond(PDI: JavascriptPDI,Transform: Transform,Size: number,InColor: LinearColor,DepthPriority: ESceneDepthPriorityGroup): void;
	static DrawWireCylinder(PDI: JavascriptPDI,Base: Vector,X: Vector,Y: Vector,Z: Vector,Color: LinearColor,Radius: number,HalfHeight: number,NumSides: number,DepthPriority: ESceneDepthPriorityGroup,Thickness: number,DepthBias: number,bScreenSpace: boolean): void;
	static DrawWireCone(PDI: JavascriptPDI,Verts?: Vector[],Transform?: Transform,ConeRadius?: number,ConeAngle?: number,ConeSides?: number,Color?: LinearColor,DepthPriority?: ESceneDepthPriorityGroup,Thickness?: number,DepthBias?: number,bScreenSpace?: boolean): {Verts: Vector[]};
	static DrawWireChoppedCone(PDI: JavascriptPDI,Base: Vector,X: Vector,Y: Vector,Z: Vector,Color: LinearColor,Radius: number,TopRadius: number,HalfHeight: number,NumSides: number,DepthPriority: ESceneDepthPriorityGroup): void;
	static DrawWireCapsule(PDI: JavascriptPDI,Base: Vector,X: Vector,Y: Vector,Z: Vector,Color: LinearColor,Radius: number,HalfHeight: number,NumSides: number,DepthPriority: ESceneDepthPriorityGroup,Thickness: number,DepthBias: number,bScreenSpace: boolean): void;
	static DrawWireBox2(PDI: JavascriptPDI,Matrix: Transform,Box: Box,Color: LinearColor,DepthPriority: ESceneDepthPriorityGroup,Thickness: number,DepthBias: number,bScreenSpace: boolean): void;
	static DrawWireBox(PDI: JavascriptPDI,Box: Box,Color: LinearColor,DepthPriority: ESceneDepthPriorityGroup,Thickness: number,DepthBias: number,bScreenSpace: boolean): void;
	static DrawPolygon(PDI: JavascriptPDI,Verts: Vector[],InColor: LinearColor,DepthPriority: ESceneDepthPriorityGroup,RHIFeatureLevel: EJavascriptRHIFeatureLevel): void;
	static DrawOrientedWireBox(PDI: JavascriptPDI,Base: Vector,X: Vector,Y: Vector,Z: Vector,Extent: Vector,Color: LinearColor,DepthPriority: ESceneDepthPriorityGroup,Thickness: number,DepthBias: number,bScreenSpace: boolean): void;
	static DrawDirectionalArrow(PDI: JavascriptPDI,ArrowToWorld: Transform,InColor: LinearColor,Length: number,ArrowSize: number,DepthPriority: ESceneDepthPriorityGroup,Thickness: number): void;
	static DrawDashedLine(PDI: JavascriptPDI,Start: Vector,End: Vector,Color: LinearColor,DashSize: number,DepthPriority: ESceneDepthPriorityGroup,DepthBias: number): void;
	static DrawConnectedArrow(PDI: JavascriptPDI,ArrowToWorld: Transform,Color: LinearColor,ArrowHeight: number,ArrowWidth: number,DepthPriority: ESceneDepthPriorityGroup,Thickness: number,NumSpokes: number): void;
	static DrawCircle(PDI: JavascriptPDI,Base: Vector,X: Vector,Y: Vector,Color: LinearColor,Radius: number,NumSides: number,DepthPriority: ESceneDepthPriorityGroup,Thickness: number,DepthBias: number,bScreenSpace: boolean): void;
	static DrawArc(PDI: JavascriptPDI,Base: Vector,X: Vector,Y: Vector,MinAngle: number,MaxAngle: number,Radius: number,Sections: number,Color: LinearColor,DepthPriority: ESceneDepthPriorityGroup): void;
	static DeselectAll(USelection: USelection,InClass: UnrealEngineClass): void;
	static Deselect(USelection: USelection,InObject: UObject): void;
	static DeletePackage(Package: Package): boolean;
	static csgAdd(DefaultBrush: Brush,PolyFlags: number,BrushType: EBrushType): Brush;
	static CreatePropertyEditorToolkit(ObjectsForPropertiesMenu: UObject[]): void;
	static CreateLogListingWidget(InLogName: string): JavascriptSlateWidget;
	static CreateLogListing(InLogName: string,InLabel: string): void;
	static CreateBrushForVolumeActor(NewActor: Volume,BrushBuilder: BrushBuilder): void;
	static ConditionalBeginDestroybyUObject(TargetObject: UObject): boolean;
	static CompileBlueprint(Blueprint: Blueprint): void;
	static ClearActorLabel(Actor: Actor): void;
	static CheckActivatedStatGroup(GroupName: string): boolean;
	static Build(Builder: BrushBuilder,InWorld: World,InBrush: Brush): boolean;
	static BroadcastHotReload(): void;
	static BroadcastAssetCreated(NewAsset: UObject): void;
	static AddWhitelistedObject(InObject: UObject): void;
	static AddRichCurve(InCurveTable: CurveTable,Key: string,InCurve: RichCurve): void;
	static AddLogListingMessage(InLogName: string,InSeverity: EJavascriptMessageSeverity,LogText: string): void;
	static AddLazyExtender(Manager: JavascriptExtensibilityManager,Delegates: JavascriptLazyExtenderDelegates): void;
	static AddGroup(Parent: JavascriptWorkspaceItem,DisplayName: string): JavascriptWorkspaceItem;
	static AddExtender(Manager: JavascriptExtensibilityManager,Extender: JavascriptExtender): void;
	static AddComponentsToBlueprint(Blueprint: Blueprint,Components: ActorComponent[],bHarvesting: boolean,OptionalNewRootComponent: ActorComponent,bKeepMobility: boolean): void;
	static C(Other: UObject | any): JavascriptEditorLibrary;
}

declare class JavascriptEditorPopupWindow extends UObject { 
	Widget: Widget;
	static Load(ResourceName: string): JavascriptEditorPopupWindow;
	static Find(Outer: UObject, ResourceName: string): JavascriptEditorPopupWindow;
	static GetDefaultObject(): JavascriptEditorPopupWindow;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptEditorPopupWindow;
	Open(Heading: string,DesiredSize: Vector2D): boolean;
	OnDismissed(): void;
	static C(Other: UObject | any): JavascriptEditorPopupWindow;
}

declare class JavascriptEditorTabManager extends Widget { 
	Layout: string;
	Tabs: JavascriptEditorTab[];
	static Load(ResourceName: string): JavascriptEditorTabManager;
	static Find(Outer: UObject, ResourceName: string): JavascriptEditorTabManager;
	static GetDefaultObject(): JavascriptEditorTabManager;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptEditorTabManager;
	InvokeTab(SearchForTabId: string): void;
	InsertNewTab(PlaceholderId: string,SearchForTabId: string,NewTab: JavascriptEditorTab): void;
	static C(Other: UObject | any): JavascriptEditorTabManager;
}

declare class JavascriptEditorTick extends UObject { 
	OnTick: UnrealEngineDelegate<(DeltaSeconds: number) => void>;
	static Load(ResourceName: string): JavascriptEditorTick;
	static Find(Outer: UObject, ResourceName: string): JavascriptEditorTick;
	static GetDefaultObject(): JavascriptEditorTick;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptEditorTick;
	GetEngine(): EditorEngine;
	ForceTick(DeltaTime: number): void;
	static C(Other: UObject | any): JavascriptEditorTick;
}

declare class JavascriptEditorToolbar extends Widget { 
	OnHook: UnrealEngineDelegate<() => JavascriptMenuBuilder>;
	static Load(ResourceName: string): JavascriptEditorToolbar;
	static Find(Outer: UObject, ResourceName: string): JavascriptEditorToolbar;
	static GetDefaultObject(): JavascriptEditorToolbar;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptEditorToolbar;
	static C(Other: UObject | any): JavascriptEditorToolbar;
}

declare class JavascriptInputEventState { 
	clone() : JavascriptInputEventState;
	static C(Other: UObject | any): JavascriptInputEventState;
	GetInputEvent(): EInputEvent;
	GetKey(): Key;
	IsAltButtonEvent(): boolean;
	IsAltButtonPressed(): boolean;
	IsAnyMouseButtonDown(): boolean;
	IsButtonPressed(InKey: Key): boolean;
	IsCtrlButtonEvent(): boolean;
	IsCtrlButtonPressed(): boolean;
	IsLeftMouseButtonPressed(): boolean;
	IsMiddleMouseButtonPressed(): boolean;
	IsMouseButtonEvent(): boolean;
	IsRightMouseButtonPressed(): boolean;
	IsShiftButtonEvent(): boolean;
	IsShiftButtonPressed(): boolean;
	IsSpaceBarPressed(): boolean;
	static GetInputEvent(InputEvent: JavascriptInputEventState): EInputEvent;
	static GetKey(InputEvent: JavascriptInputEventState): Key;
	static IsAltButtonEvent(InputEvent: JavascriptInputEventState): boolean;
	static IsAltButtonPressed(InputEvent: JavascriptInputEventState): boolean;
	static IsAnyMouseButtonDown(InputEvent: JavascriptInputEventState): boolean;
	static IsButtonPressed(InputEvent: JavascriptInputEventState,InKey: Key): boolean;
	static IsCtrlButtonEvent(InputEvent: JavascriptInputEventState): boolean;
	static IsCtrlButtonPressed(InputEvent: JavascriptInputEventState): boolean;
	static IsLeftMouseButtonPressed(InputEvent: JavascriptInputEventState): boolean;
	static IsMiddleMouseButtonPressed(InputEvent: JavascriptInputEventState): boolean;
	static IsMouseButtonEvent(InputEvent: JavascriptInputEventState): boolean;
	static IsRightMouseButtonPressed(InputEvent: JavascriptInputEventState): boolean;
	static IsShiftButtonEvent(InputEvent: JavascriptInputEventState): boolean;
	static IsShiftButtonPressed(InputEvent: JavascriptInputEventState): boolean;
	static IsSpaceBarPressed(InputEvent: JavascriptInputEventState): boolean;
}

declare type EJavascriptWidgetMode = 'WM_Translate' | 'WM_TranslateRotateZ' | 'WM_2D' | 'WM_Rotate' | 'WM_Scale' | 'WM_Max' | 'WM_None';
declare var EJavascriptWidgetMode : { WM_Translate:'WM_Translate',WM_TranslateRotateZ:'WM_TranslateRotateZ',WM_2D:'WM_2D',WM_Rotate:'WM_Rotate',WM_Scale:'WM_Scale',WM_Max:'WM_Max',WM_None:'WM_None', };
declare class JavascriptEditorViewport extends PanelWidget { 
	OnClick: UnrealEngineDelegate<(ViewportClick: JavascriptViewportClick, HitProxy: JavascriptHitProxy, Instance: JavascriptEditorViewport) => void>;
	OnTrackingStarted: UnrealEngineDelegate<(InputState: JavascriptInputEventState, bIsDraggingWidget: boolean, bNudge: boolean, Instance: JavascriptEditorViewport) => void>;
	OnTrackingStopped: UnrealEngineDelegate<(Instance: JavascriptEditorViewport) => void>;
	OnInputWidgetDelta: UnrealEngineDelegate<(Drag: Vector, Rot: Rotator, Scale: Vector, Instance: JavascriptEditorViewport) => boolean>;
	OnInputKey: UnrealEngineDelegate<(ControllerId: number, Key: Key, Event: EInputEvent, Instance: JavascriptEditorViewport) => boolean>;
	OnInputAxis: UnrealEngineDelegate<(ControllerId: number, Key: Key, Delta: number, DeltaTime: number, Instance: JavascriptEditorViewport) => boolean>;
	OnMouseEnter: UnrealEngineDelegate<(X: number, Y: number, Instance: JavascriptEditorViewport) => boolean>;
	OnMouseMove: UnrealEngineDelegate<(X: number, Y: number, Instance: JavascriptEditorViewport) => boolean>;
	OnMouseLeave: UnrealEngineDelegate<(Instance: JavascriptEditorViewport) => boolean>;
	OnDraw: UnrealEngineDelegate<(PDI: JavascriptPDI, Instance: JavascriptEditorViewport) => void>;
	OnDrawCanvas: UnrealEngineDelegate<(Canvas: Canvas, Instance: JavascriptEditorViewport) => void>;
	OnGetWidgetLocation: UnrealEngineDelegate<(Instance: JavascriptEditorViewport) => Vector>;
	OnGetWidgetRotation: UnrealEngineDelegate<(Instance: JavascriptEditorViewport) => Rotator>;
	OnGetWidgetMode: UnrealEngineDelegate<(Instance: JavascriptEditorViewport) => EJavascriptWidgetMode>;
	static Load(ResourceName: string): JavascriptEditorViewport;
	static Find(Outer: UObject, ResourceName: string): JavascriptEditorViewport;
	static GetDefaultObject(): JavascriptEditorViewport;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptEditorViewport;
	SetWidgetMode(WidgetMode: EJavascriptWidgetMode): void;
	SetViewRotation(ViewRotation: Rotator): void;
	SetViewportType(InViewportType: ELevelViewportType): void;
	SetViewMode(InViewModeIndex: EViewModeIndex): void;
	SetViewLocation(ViewLocation: Vector): void;
	SetViewFOV(InViewFOV: number): void;
	SetSkyBrightness(SkyBrightness: number): void;
	SetSimulatePhysics(bShouldSimulatePhysics: boolean): void;
	SetRealtime(bInRealtime: boolean,bStoreCurrentValue: boolean): void;
	SetProfileIndex(InProfileIndex: number): void;
	SetLightLocation(InLightPos: Vector): void;
	SetLightDirection(InLightDir: Rotator): void;
	SetLightColor(LightColor: Color): void;
	SetLightBrightness(LightBrightness: number): void;
	SetFloorOffset(InFloorOffset: number): void;
	SetEngineShowFlags(In: string): boolean;
	SetCameraSpeedSetting(SpeedSetting: number): void;
	SetBackgroundColor(BackgroundColor: LinearColor): void;
	Redraw(): void;
	ProjectWorldToScreen(WorldPosition: Vector,OutScreenPosition?: Vector2D): {OutScreenPosition: Vector2D};
	OverridePostProcessSettings(PostProcessSettings: PostProcessSettings,Weight: number): void;
	GetWidgetMode(): EJavascriptWidgetMode;
	GetViewRotation(): Rotator;
	GetViewportWorld(): World;
	GetViewLocation(): Vector;
	GetViewFOV(): number;
	GetSkyComponent(): StaticMeshComponent;
	GetFloorMeshComponent(): StaticMeshComponent;
	GetEngineShowFlags(): string;
	GetDefaultSphereReflectionComponent(): SphereReflectionCaptureComponent;
	GetDefaultSkySphereComponent(): StaticMeshComponent;
	GetDefaultSkyLightComponent(): SkyLightComponent;
	GetDefaultPostProcessComponent(): PostProcessComponent;
	GetDefaultInstancedSkyMaterial(): MaterialInstanceConstant;
	GetDefaultDirectionalLightComponent(): DirectionalLightComponent;
	GetDefaultAssetViewerSettings(): AssetViewerSettings;
	GetCurrentProfileIndex(): number;
	GetCameraSpeedSetting(): number;
	DeprojectScreenToWorld(ScreenPosition: Vector2D,OutRayOrigin?: Vector,OutRayDirection?: Vector): {OutRayOrigin: Vector, OutRayDirection: Vector};
	static C(Other: UObject | any): JavascriptEditorViewport;
}

declare class JavascriptEdViewport { 
	clone() : JavascriptEdViewport;
	static C(Other: UObject | any): JavascriptEdViewport;
	GetHitProxy(): JavascriptHitProxy;
	static GetHitProxy(Viewport: JavascriptEdViewport): JavascriptHitProxy;
}

declare class JavascriptEditorModeTools { 
	clone() : JavascriptEditorModeTools;
	static C(Other: UObject | any): JavascriptEditorModeTools;
	ActivateDefaultMode(): {Tools: JavascriptEditorModeTools};
	ActivateMode(InID?: string,bToggle?: boolean): {Tools: JavascriptEditorModeTools};
	DeactivateAllModes(): {Tools: JavascriptEditorModeTools};
	DeactivateMode(InID?: string): {Tools: JavascriptEditorModeTools};
	DestroyMode(InID?: string): {Tools: JavascriptEditorModeTools};
	EndTracking(Viewport: JavascriptEdViewport): boolean;
	EnsureNotInMode(ModeId?: string,ErrorMsg?: string,bNotifyUser?: boolean): {Tools: JavascriptEditorModeTools, $: boolean};
	IsDefaultModeActive(): {Tools: JavascriptEditorModeTools, $: boolean};
	IsModeActive(InID?: string): {Tools: JavascriptEditorModeTools, $: boolean};
	IsTracking(): boolean;
	SetDefaultMode(DefaultID?: string): {Tools: JavascriptEditorModeTools};
	StartTracking(Viewport: JavascriptEdViewport): boolean;
	static ActivateDefaultMode(Tools?: JavascriptEditorModeTools): {Tools: JavascriptEditorModeTools};
	static ActivateMode(Tools?: JavascriptEditorModeTools,InID?: string,bToggle?: boolean): {Tools: JavascriptEditorModeTools};
	static DeactivateAllModes(Tools?: JavascriptEditorModeTools): {Tools: JavascriptEditorModeTools};
	static DeactivateMode(Tools?: JavascriptEditorModeTools,InID?: string): {Tools: JavascriptEditorModeTools};
	static DestroyMode(Tools?: JavascriptEditorModeTools,InID?: string): {Tools: JavascriptEditorModeTools};
	static EndTracking(Tools: JavascriptEditorModeTools,Viewport: JavascriptEdViewport): boolean;
	static EnsureNotInMode(Tools?: JavascriptEditorModeTools,ModeId?: string,ErrorMsg?: string,bNotifyUser?: boolean): {Tools: JavascriptEditorModeTools, $: boolean};
	static IsDefaultModeActive(Tools?: JavascriptEditorModeTools): {Tools: JavascriptEditorModeTools, $: boolean};
	static IsModeActive(Tools?: JavascriptEditorModeTools,InID?: string): {Tools: JavascriptEditorModeTools, $: boolean};
	static IsTracking(Tools: JavascriptEditorModeTools): boolean;
	static SetDefaultMode(Tools?: JavascriptEditorModeTools,DefaultID?: string): {Tools: JavascriptEditorModeTools};
	static StartTracking(Tools: JavascriptEditorModeTools,Viewport: JavascriptEdViewport): boolean;
	static GetLevelEditorModeTools(): JavascriptEditorModeTools;
}

declare class JavascriptEditorMode { 
	clone() : JavascriptEditorMode;
	static C(Other: UObject | any): JavascriptEditorMode;
	GetCurrentWidgetAxis(): number;
	GetModeManager(): JavascriptEditorModeTools;
	SelectNone(): void;
	SetCurrentWidgetAxis(InAxis: number): void;
	static GetCurrentWidgetAxis(Mode: JavascriptEditorMode): number;
	static GetModeManager(Mode: JavascriptEditorMode): JavascriptEditorModeTools;
	static SelectNone(Mode: JavascriptEditorMode): void;
	static SetCurrentWidgetAxis(Mode: JavascriptEditorMode,InAxis: number): void;
}

declare type EJavascriptEditAction = 'Skip' | 'Process' | 'Halt' | 'EJavascriptEditAction_MAX';
declare var EJavascriptEditAction : { Skip:'Skip',Process:'Process',Halt:'Halt',EJavascriptEditAction_MAX:'EJavascriptEditAction_MAX', };
declare class JavascriptEdMode extends UObject { 
	OnGetWidgetLocation: UnrealEngineDelegate<(Instance: JavascriptEditorMode) => Vector>;
	OnSelect: UnrealEngineDelegate<(Actor: Actor, bSelected: boolean, Instance: JavascriptEditorMode) => boolean>;
	OnDraw: UnrealEngineDelegate<(PDI: JavascriptPDI, Instance: JavascriptEditorMode) => void>;
	OnDrawHUD: UnrealEngineDelegate<(Canvas: Canvas, Instance: JavascriptEditorMode) => void>;
	IsSelectionAllowed: UnrealEngineDelegate<(Actor: Actor, bSelected: boolean, Instance: JavascriptEditorMode) => boolean>;
	OnClick: UnrealEngineDelegate<(ViewportClick: JavascriptViewportClick, HitProxy: JavascriptHitProxy, Instance: JavascriptEditorMode) => boolean>;
	OnQuery: UnrealEngineDelegate<(Request: string, Instance: JavascriptEditorMode) => boolean>;
	OnStartTracking: UnrealEngineDelegate<(Viewport: JavascriptEdViewport, Instance: JavascriptEditorMode) => boolean>;
	OnEndTracking: UnrealEngineDelegate<(Viewport: JavascriptEdViewport, Instance: JavascriptEditorMode) => boolean>;
	OnInputAxis: UnrealEngineDelegate<(Viewport: JavascriptEdViewport, ControllerId: number, Key: Key, Delta: number, DeltaTime: number, Instance: JavascriptEditorMode) => boolean>;
	OnInputKey: UnrealEngineDelegate<(Viewport: JavascriptEdViewport, Key: Key, Event: EInputEvent, Instance: JavascriptEditorMode) => boolean>;
	OnInputDelta: UnrealEngineDelegate<(Viewport: JavascriptEdViewport, Drag: Vector, Rot: Rotator, Scale: Vector, Instance: JavascriptEditorMode) => boolean>;
	OnCapturedMouseMove: UnrealEngineDelegate<(Viewport: JavascriptEdViewport, X: number, Y: number, Instance: JavascriptEditorMode) => boolean>;
	OnMouseEnter: UnrealEngineDelegate<(Viewport: JavascriptEdViewport, X: number, Y: number, Instance: JavascriptEditorMode) => boolean>;
	OnMouseLeave: UnrealEngineDelegate<(Viewport: JavascriptEdViewport, Instance: JavascriptEditorMode) => boolean>;
	OnMouseMove: UnrealEngineDelegate<(Viewport: JavascriptEdViewport, X: number, Y: number, Instance: JavascriptEditorMode) => boolean>;
	OnLostFocus: UnrealEngineDelegate<(Viewport: JavascriptEdViewport, Instance: JavascriptEditorMode) => boolean>;
	OnReceivedFocus: UnrealEngineDelegate<(Viewport: JavascriptEdViewport, Instance: JavascriptEditorMode) => boolean>;
	OnSelectionChanged: UnrealEngineDelegate<(Tools: JavascriptEditorModeTools, Item: UObject) => void>;
	OnGetContent: UnrealEngineDelegate<() => Widget>;
	OnProcess: UnrealEngineDelegate<(Request: string, Instance: JavascriptEditorMode) => boolean>;
	OnGetAction: UnrealEngineDelegate<(Request: string, Instance: JavascriptEditorMode) => EJavascriptEditAction>;
	OnUsesToolkits: UnrealEngineDelegate<() => boolean>;
	OnIsCompatibleWith: UnrealEngineDelegate<(bIsCompatibleWith: string) => boolean>;
	OnActorMoved: UnrealEngineDelegate<(Instance: JavascriptEditorMode) => void>;
	OnActorsDuplicated: UnrealEngineDelegate<(PreDuplicateSelection: Actor[], PostDuplicateSelection: Actor[], bOffsetLocations: boolean, Instance: JavascriptEditorMode) => void>;
	OnActorSelectionChanged: UnrealEngineDelegate<(Instance: JavascriptEditorMode) => void>;
	OnActorPropChanged: UnrealEngineDelegate<(Instance: JavascriptEditorMode) => void>;
	OnMapChanged: UnrealEngineDelegate<(Instance: JavascriptEditorMode) => void>;
	ModeId: string;
	SlateIcon: JavascriptSlateIcon;
	ModeName: string;
	bVisible: boolean;
	PriorityOrder: number;
	static Load(ResourceName: string): JavascriptEdMode;
	static Find(Outer: UObject, ResourceName: string): JavascriptEdMode;
	static GetDefaultObject(): JavascriptEdMode;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptEdMode;
	Unregister(): void;
	Register(): void;
	static C(Other: UObject | any): JavascriptEdMode;
}

declare class JavascriptEdModeLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): JavascriptEdModeLibrary;
	static Find(Outer: UObject, ResourceName: string): JavascriptEdModeLibrary;
	static GetDefaultObject(): JavascriptEdModeLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptEdModeLibrary;
	static StartTracking(Tools: JavascriptEditorModeTools,Viewport: JavascriptEdViewport): boolean;
	static SetDefaultMode(Tools?: JavascriptEditorModeTools,DefaultID?: string): {Tools: JavascriptEditorModeTools};
	static SetCurrentWidgetAxis(Mode: JavascriptEditorMode,InAxis: number): void;
	static SelectNone(Mode: JavascriptEditorMode): void;
	static IsTracking(Tools: JavascriptEditorModeTools): boolean;
	static IsModeActive(Tools?: JavascriptEditorModeTools,InID?: string): {Tools: JavascriptEditorModeTools, $: boolean};
	static IsDefaultModeActive(Tools?: JavascriptEditorModeTools): {Tools: JavascriptEditorModeTools, $: boolean};
	static GetModeManager(Mode: JavascriptEditorMode): JavascriptEditorModeTools;
	static GetLevelEditorModeTools(): JavascriptEditorModeTools;
	static GetHitProxy(Viewport: JavascriptEdViewport): JavascriptHitProxy;
	static GetCurrentWidgetAxis(Mode: JavascriptEditorMode): number;
	static EnsureNotInMode(Tools?: JavascriptEditorModeTools,ModeId?: string,ErrorMsg?: string,bNotifyUser?: boolean): {Tools: JavascriptEditorModeTools, $: boolean};
	static EndTracking(Tools: JavascriptEditorModeTools,Viewport: JavascriptEdViewport): boolean;
	static DestroyMode(Tools?: JavascriptEditorModeTools,InID?: string): {Tools: JavascriptEditorModeTools};
	static DeactivateMode(Tools?: JavascriptEditorModeTools,InID?: string): {Tools: JavascriptEditorModeTools};
	static DeactivateAllModes(Tools?: JavascriptEditorModeTools): {Tools: JavascriptEditorModeTools};
	static ActivateMode(Tools?: JavascriptEditorModeTools,InID?: string,bToggle?: boolean): {Tools: JavascriptEditorModeTools};
	static ActivateDefaultMode(Tools?: JavascriptEditorModeTools): {Tools: JavascriptEditorModeTools};
	static C(Other: UObject | any): JavascriptEdModeLibrary;
}

declare class JavascriptInputEventStateLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): JavascriptInputEventStateLibrary;
	static Find(Outer: UObject, ResourceName: string): JavascriptInputEventStateLibrary;
	static GetDefaultObject(): JavascriptInputEventStateLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptInputEventStateLibrary;
	static IsSpaceBarPressed(InputEvent: JavascriptInputEventState): boolean;
	static IsShiftButtonPressed(InputEvent: JavascriptInputEventState): boolean;
	static IsShiftButtonEvent(InputEvent: JavascriptInputEventState): boolean;
	static IsRightMouseButtonPressed(InputEvent: JavascriptInputEventState): boolean;
	static IsMouseButtonEvent(InputEvent: JavascriptInputEventState): boolean;
	static IsMiddleMouseButtonPressed(InputEvent: JavascriptInputEventState): boolean;
	static IsLeftMouseButtonPressed(InputEvent: JavascriptInputEventState): boolean;
	static IsCtrlButtonPressed(InputEvent: JavascriptInputEventState): boolean;
	static IsCtrlButtonEvent(InputEvent: JavascriptInputEventState): boolean;
	static IsButtonPressed(InputEvent: JavascriptInputEventState,InKey: Key): boolean;
	static IsAnyMouseButtonDown(InputEvent: JavascriptInputEventState): boolean;
	static IsAltButtonPressed(InputEvent: JavascriptInputEventState): boolean;
	static IsAltButtonEvent(InputEvent: JavascriptInputEventState): boolean;
	static GetKey(InputEvent: JavascriptInputEventState): Key;
	static GetInputEvent(InputEvent: JavascriptInputEventState): EInputEvent;
	static C(Other: UObject | any): JavascriptInputEventStateLibrary;
}

declare class JavascriptLogSubscriber extends UObject { 
	OnNewLogMessage: UnrealEngineMulticastDelegate<(Message: string, Type: string, Category: string) => void>;
	static Load(ResourceName: string): JavascriptLogSubscriber;
	static Find(Outer: UObject, ResourceName: string): JavascriptLogSubscriber;
	static GetDefaultObject(): JavascriptLogSubscriber;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptLogSubscriber;
	static C(Other: UObject | any): JavascriptLogSubscriber;
}

declare class JavascriptMenuLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): JavascriptMenuLibrary;
	static Find(Outer: UObject, ResourceName: string): JavascriptMenuLibrary;
	static GetDefaultObject(): JavascriptMenuLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptMenuLibrary;
	static UI_COMMAND_Function(This: JavascriptBindingContext,Command: JavascriptUICommand,InTextSubNamespace: string): JavascriptUICommandInfo;
	static RemoveExtension(Extender: JavascriptExtender,Extension: JavascriptExtensionBase): void;
	static PushCommandList(Builder?: JavascriptMenuBuilder,List?: JavascriptUICommandList): {Builder: JavascriptMenuBuilder};
	static ProcessCommandBindings_PointerEvent(CommandList: JavascriptUICommandList,InMouseEvent: UPointerEvent): boolean;
	static ProcessCommandBindings_KeyEvent(CommandList: JavascriptUICommandList,InKeyEvent: KeyEvent): boolean;
	static PopCommandList(Builder?: JavascriptMenuBuilder): {Builder: JavascriptMenuBuilder};
	static NewBindingContext(InContextName: string,InContextDesc: string,InContextParent: string,InStyleSetName: string): JavascriptBindingContext;
	static GenericCommand(What: string): JavascriptUICommandInfo;
	static EndSection(Builder?: JavascriptMenuBuilder): {Builder: JavascriptMenuBuilder};
	static Destroy(Context: JavascriptBindingContext): void;
	static CreateUICommandList(): JavascriptUICommandList;
	static CreateToolbarBuilder(CommandList: JavascriptUICommandList,Orientation: EOrientation,UFunction: JavascriptFunction): void;
	static CreateMenuBuilder(CommandList: JavascriptUICommandList,bInShouldCloseWindowAfterMenuSelection: boolean,UFunction: JavascriptFunction): void;
	static CreateMenuBarBuilder(CommandList: JavascriptUICommandList,UFunction: JavascriptFunction): void;
	static Combine(Extenders: JavascriptExtender[]): JavascriptExtender;
	static BeginSection(Builder?: JavascriptMenuBuilder,InExtensionHook?: string,MenuHeadingText?: string): {Builder: JavascriptMenuBuilder};
	static Apply(Extender: JavascriptExtender,ExtensionHook: string,HookPosition: EJavascriptExtensionHook,MenuBuilder?: JavascriptMenuBuilder): {MenuBuilder: JavascriptMenuBuilder};
	static AddWidget(Builder?: JavascriptMenuBuilder,Widget?: Widget,Label?: string,bNoIndent?: boolean,InTutorialHighlightName?: string,bSearchable?: boolean): {Builder: JavascriptMenuBuilder};
	static AddToolBarExtension(Extender: JavascriptExtender,ExtensionHook: string,HookPosition: EJavascriptExtensionHook,CommandList: JavascriptUICommandList,UFunction: JavascriptFunction): JavascriptExtensionBase;
	static AddToolBarButtonByContext(Builder?: JavascriptMenuBuilder,Context?: JavascriptToolbarButtonContext,EditingObject?: UObject): {Builder: JavascriptMenuBuilder};
	static AddToolBarButton(Builder?: JavascriptMenuBuilder,CommandInfo?: JavascriptUICommandInfo): {Builder: JavascriptMenuBuilder};
	static AddSubMenu(Builder?: JavascriptMenuBuilder,Label?: string,Tooltip?: string,bInOpenSubMenuOnClick?: boolean,UFunction?: JavascriptFunction): {Builder: JavascriptMenuBuilder};
	static AddSeparator(Builder?: JavascriptMenuBuilder): {Builder: JavascriptMenuBuilder};
	static AddPullDownMenu(MenuBuilder?: JavascriptMenuBuilder,InMenuLabel?: string,InToolTip?: string,InPullDownMenu?: JavascriptFunction,InExtensionHook?: string,InTutorialHighlightName?: string): {MenuBuilder: JavascriptMenuBuilder};
	static AddMenuExtension(Extender: JavascriptExtender,ExtensionHook: string,HookPosition: EJavascriptExtensionHook,CommandList: JavascriptUICommandList,UFunction: JavascriptFunction): JavascriptExtensionBase;
	static AddMenuEntry(Builder?: JavascriptMenuBuilder,UObject?: JavascriptMenuContext): {Builder: JavascriptMenuBuilder};
	static AddMenuByCommands(Builder?: JavascriptMenuBuilder,UICommands?: JavascriptUICommands): {Builder: JavascriptMenuBuilder};
	static AddMenubarExtension(Extender: JavascriptExtender,ExtensionHook: string,HookPosition: EJavascriptExtensionHook,CommandList: JavascriptUICommandList,UFunction: JavascriptFunction): JavascriptExtensionBase;
	static AddComboButton(Builder?: JavascriptMenuBuilder,UObject?: JavascriptComboButtonContext,EditingObject?: UObject): {Builder: JavascriptMenuBuilder};
	static C(Other: UObject | any): JavascriptMenuLibrary;
}

declare class JavascriptMultiBox extends Widget { 
	OnHook: UnrealEngineDelegate<(ID: string, Self: JavascriptMultiBox, CurrentBuilder: JavascriptMenuBuilder) => void>;
	static Load(ResourceName: string): JavascriptMultiBox;
	static Find(Outer: UObject, ResourceName: string): JavascriptMultiBox;
	static GetDefaultObject(): JavascriptMultiBox;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptMultiBox;
	static Bind(Builder: JavascriptMenuBuilder): void;
	AddSubMenu(Builder?: JavascriptMenuBuilder,ID?: string,Label?: string,Tooltip?: string,bInOpenSubMenuOnClick?: boolean): {Builder: JavascriptMenuBuilder};
	AddPullDownMenu(Builder?: JavascriptMenuBuilder,ID?: string,Label?: string,Tooltip?: string): {Builder: JavascriptMenuBuilder};
	static C(Other: UObject | any): JavascriptMultiBox;
}

declare type EJSCheckBoxState = 'Unchecked' | 'Checked' | 'Undetermined' | 'EJSCheckBoxState_MAX';
declare var EJSCheckBoxState : { Unchecked:'Unchecked',Checked:'Checked',Undetermined:'Undetermined',EJSCheckBoxState_MAX:'EJSCheckBoxState_MAX', };
declare class JavascriptNotification extends UObject { 
	text: string;
	bUseImage: boolean;
	UImage: SlateBrush;
	FadeInDuration: number;
	FadeOutDuration: number;
	ExpireDuration: number;
	bUseThrobber: boolean;
	bUseSuccessFailIcons: boolean;
	bUseLargeFont: boolean;
	bFireAndForget: boolean;
	CheckBoxState: EJSCheckBoxState;
	CheckBoxStateChanged: UnrealEngineDelegate<(State: ECheckBoxState) => void>;
	CheckBoxText: string;
	Hyperlink: UnrealEngineDelegate<() => void>;
	HyperlinkText: string;
	bAllowThrottleWhenFrameRateIsLow: boolean;
	static Load(ResourceName: string): JavascriptNotification;
	static Find(Outer: UObject, ResourceName: string): JavascriptNotification;
	static GetDefaultObject(): JavascriptNotification;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptNotification;
	Success(): void;
	SetText(InText: string): void;
	Reset(): void;
	Pending(): void;
	Fire(): void;
	Fail(): void;
	Fadeout(): void;
	static C(Other: UObject | any): JavascriptNotification;
}

declare class JavascriptOnEditorCommandlet extends Commandlet { 
	CmdLineTokens: string[];
	CmdLineSwitches: string[];
	static Load(ResourceName: string): JavascriptOnEditorCommandlet;
	static Find(Outer: UObject, ResourceName: string): JavascriptOnEditorCommandlet;
	static GetDefaultObject(): JavascriptOnEditorCommandlet;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptOnEditorCommandlet;
	GetEngine(): EditorEngine;
	static C(Other: UObject | any): JavascriptOnEditorCommandlet;
}

declare type EPropertyAccessResult = 'MultipleValues' | 'Fail' | 'Success' | 'EPropertyAccessResult_MAX';
declare var EPropertyAccessResult : { MultipleValues:'MultipleValues',Fail:'Fail',Success:'Success',EPropertyAccessResult_MAX:'EPropertyAccessResult_MAX', };
declare class JavascriptSimpleDelegateWrapper extends UObject { 
	delegate: UnrealEngineDelegate<() => void>;
	static Load(ResourceName: string): JavascriptSimpleDelegateWrapper;
	static Find(Outer: UObject, ResourceName: string): JavascriptSimpleDelegateWrapper;
	static GetDefaultObject(): JavascriptSimpleDelegateWrapper;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptSimpleDelegateWrapper;
	static C(Other: UObject | any): JavascriptSimpleDelegateWrapper;
}

declare class JavascriptPropertyHandle { 
	clone() : JavascriptPropertyHandle;
	static C(Other: UObject | any): JavascriptPropertyHandle;
	CreatePropertyNameWidget(NameOverride: string,ToolTipOverride: string,bDisplayResetToDefault: boolean,bHideText: boolean,bHideThumbnail: boolean): JavascriptSlateWidget;
	CreatePropertyValueWidget(bHideDefaultPropertyButtons: boolean): JavascriptSlateWidget;
	GeneratePathToProperty(): string;
	GetChildHandle(Name: string): JavascriptPropertyHandle;
	GetIndexInArray(): number;
	GetJavascriptRefValue(OutValue?: JavascriptRef): {OutValue: JavascriptRef, $: EPropertyAccessResult};
	GetKeyHandle(): JavascriptPropertyHandle;
	GetMetaData(Key: string): string;
	GetObjectValue(OutValue?: UObject): {OutValue: UObject, $: EPropertyAccessResult};
	GetOuterObjects(): UObject[];
	GetParentHandle(): JavascriptPropertyHandle;
	GetProperty(): any;
	GetPropertyName(): string;
	GetValueAsFormattedString(OutValue?: string): {OutValue: string, $: EPropertyAccessResult};
	IsArrayProperty(): boolean;
	IsArrayPropertyWithValueType(): boolean;
	IsEditConst(): boolean;
	IsValidHandle(): boolean;
	SetJavascriptRefValue(InValue: JavascriptRef): EPropertyAccessResult;
	SetObjectValue(InValue: UObject): EPropertyAccessResult;
	SetOnPropertyValueChanged(Wrapper: JavascriptSimpleDelegateWrapper): void;
	SetValueFromFormattedString(InValue: string): EPropertyAccessResult;
	static CreatePropertyNameWidget(Handle: JavascriptPropertyHandle,NameOverride: string,ToolTipOverride: string,bDisplayResetToDefault: boolean,bHideText: boolean,bHideThumbnail: boolean): JavascriptSlateWidget;
	static CreatePropertyValueWidget(Handle: JavascriptPropertyHandle,bHideDefaultPropertyButtons: boolean): JavascriptSlateWidget;
	static GeneratePathToProperty(Handle: JavascriptPropertyHandle): string;
	static GetChildHandle(Parent: JavascriptPropertyHandle,Name: string): JavascriptPropertyHandle;
	static GetIndexInArray(Handle: JavascriptPropertyHandle): number;
	static GetJavascriptRefValue(Handle: JavascriptPropertyHandle,OutValue?: JavascriptRef): {OutValue: JavascriptRef, $: EPropertyAccessResult};
	static GetKeyHandle(Handle: JavascriptPropertyHandle): JavascriptPropertyHandle;
	static GetMetaData(Handle: JavascriptPropertyHandle,Key: string): string;
	static GetObjectValue(Handle: JavascriptPropertyHandle,OutValue?: UObject): {OutValue: UObject, $: EPropertyAccessResult};
	static GetOuterObjects(Handle: JavascriptPropertyHandle): UObject[];
	static GetParentHandle(Handle: JavascriptPropertyHandle): JavascriptPropertyHandle;
	static GetProperty(Handle: JavascriptPropertyHandle): any;
	static GetPropertyName(Handle: JavascriptPropertyHandle): string;
	static GetValueAsFormattedString(Handle: JavascriptPropertyHandle,OutValue?: string): {OutValue: string, $: EPropertyAccessResult};
	static IsArrayProperty(Handle: JavascriptPropertyHandle): boolean;
	static IsArrayPropertyWithValueType(Handle: JavascriptPropertyHandle): boolean;
	static IsEditConst(Handle: JavascriptPropertyHandle): boolean;
	static IsValidHandle(Handle: JavascriptPropertyHandle): boolean;
	static SetJavascriptRefValue(Handle: JavascriptPropertyHandle,InValue: JavascriptRef): EPropertyAccessResult;
	static SetObjectValue(Handle: JavascriptPropertyHandle,InValue: UObject): EPropertyAccessResult;
	static SetOnPropertyValueChanged(Handle: JavascriptPropertyHandle,Wrapper: JavascriptSimpleDelegateWrapper): void;
	static SetValueFromFormattedString(Handle: JavascriptPropertyHandle,InValue: string): EPropertyAccessResult;
}

declare class JavascriptDetailWidgetDecl { 
	clone() : JavascriptDetailWidgetDecl;
	static C(Other: UObject | any): JavascriptDetailWidgetDecl;
	SetContent(Widget: JavascriptSlateWidget): void;
	SetHAlign(InAlignment: EHorizontalAlignment): void;
	SetMaxDesiredWidth(MaxWidth: number): void;
	SetMinDesiredWidth(MinWidth: number): void;
	SetVAlign(InAlignment: EVerticalAlignment): void;
	static SetContent(Decl: JavascriptDetailWidgetDecl,Widget: JavascriptSlateWidget): void;
	static SetHAlign(Decl: JavascriptDetailWidgetDecl,InAlignment: EHorizontalAlignment): void;
	static SetMaxDesiredWidth(Decl: JavascriptDetailWidgetDecl,MaxWidth: number): void;
	static SetMinDesiredWidth(Decl: JavascriptDetailWidgetDecl,MinWidth: number): void;
	static SetVAlign(Decl: JavascriptDetailWidgetDecl,InAlignment: EVerticalAlignment): void;
}

declare class JavascriptDetailWidgetRow { 
	clone() : JavascriptDetailWidgetRow;
	static C(Other: UObject | any): JavascriptDetailWidgetRow;
	NameContent(): JavascriptDetailWidgetDecl;
	SetFilterString(InFilterString: string): void;
	ValueContent(): JavascriptDetailWidgetDecl;
	WholeRowContent(): JavascriptDetailWidgetDecl;
	static NameContent(Row: JavascriptDetailWidgetRow): JavascriptDetailWidgetDecl;
	static SetFilterString(Row: JavascriptDetailWidgetRow,InFilterString: string): void;
	static ValueContent(Row: JavascriptDetailWidgetRow): JavascriptDetailWidgetDecl;
	static WholeRowContent(Row: JavascriptDetailWidgetRow): JavascriptDetailWidgetDecl;
}

declare class JavascriptPropertyTypeCustomizationUtils { 
	clone() : JavascriptPropertyTypeCustomizationUtils;
	static C(Other: UObject | any): JavascriptPropertyTypeCustomizationUtils;
	RequestRefresh(bForce: boolean): void;
	static RequestRefresh(CustomizationUtils: JavascriptPropertyTypeCustomizationUtils,bForce: boolean): void;
}

declare class JavascriptSimpleGetBoolDelegateWrapper extends UObject { 
	delegate: UnrealEngineDelegate<() => boolean>;
	static Load(ResourceName: string): JavascriptSimpleGetBoolDelegateWrapper;
	static Find(Outer: UObject, ResourceName: string): JavascriptSimpleGetBoolDelegateWrapper;
	static GetDefaultObject(): JavascriptSimpleGetBoolDelegateWrapper;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptSimpleGetBoolDelegateWrapper;
	static C(Other: UObject | any): JavascriptSimpleGetBoolDelegateWrapper;
}

declare class JavascriptDetailPropertyRow { 
	clone() : JavascriptDetailPropertyRow;
	static C(Other: UObject | any): JavascriptDetailPropertyRow;
	BindVisibility(Wrapper: JavascriptSimpleGetBoolDelegateWrapper): void;
	CustomWidget(bShowChildren: boolean): JavascriptDetailWidgetRow;
	static BindVisibility(Row: JavascriptDetailPropertyRow,Wrapper: JavascriptSimpleGetBoolDelegateWrapper): void;
	static CustomWidget(Row: JavascriptDetailPropertyRow,bShowChildren: boolean): JavascriptDetailWidgetRow;
}

declare class JavascriptDetailChildrenBuilder { 
	clone() : JavascriptDetailChildrenBuilder;
	static C(Other: UObject | any): JavascriptDetailChildrenBuilder;
	AddChildContent(SearchString: string): JavascriptDetailWidgetRow;
	AddChildProperty(PropertyHandle: JavascriptPropertyHandle): JavascriptDetailPropertyRow;
	AddExternalObjectProperty(Objects?: UObject[],PropertyName?: string,UniqueIdName?: string,bAllowChildrenOverride?: boolean,bCreateCategoryNodesOverride?: boolean): {Objects: UObject[], $: JavascriptDetailPropertyRow};
	AddExternalObjects(Objects?: UObject[],UniqueIdName?: string): {Objects: UObject[], $: JavascriptDetailPropertyRow};
	GenerateStructValueWidget(StructPropertyHandle: JavascriptPropertyHandle): JavascriptSlateWidget;
	static AddChildContent(ChildBuilder: JavascriptDetailChildrenBuilder,SearchString: string): JavascriptDetailWidgetRow;
	static AddChildProperty(ChildBuilder: JavascriptDetailChildrenBuilder,PropertyHandle: JavascriptPropertyHandle): JavascriptDetailPropertyRow;
	static AddExternalObjectProperty(ChildBuilder: JavascriptDetailChildrenBuilder,Objects?: UObject[],PropertyName?: string,UniqueIdName?: string,bAllowChildrenOverride?: boolean,bCreateCategoryNodesOverride?: boolean): {Objects: UObject[], $: JavascriptDetailPropertyRow};
	static AddExternalObjects(ChildBuilder: JavascriptDetailChildrenBuilder,Objects?: UObject[],UniqueIdName?: string): {Objects: UObject[], $: JavascriptDetailPropertyRow};
	static GenerateStructValueWidget(ChildBuilder: JavascriptDetailChildrenBuilder,StructPropertyHandle: JavascriptPropertyHandle): JavascriptSlateWidget;
}

declare class JavascriptPropertyCustomization extends UObject { 
	PropertyTypeName: string;
	OnDestroy: UnrealEngineDelegate<(ID: number) => void>;
	OnCustomizeHeader: UnrealEngineDelegate<(Handle: JavascriptPropertyHandle, HeaderRow: JavascriptDetailWidgetRow, Utils: JavascriptPropertyTypeCustomizationUtils, ID: number) => void>;
	OnCustomizeChildren: UnrealEngineDelegate<(Handle: JavascriptPropertyHandle, ChildBuilder: JavascriptDetailChildrenBuilder, Utils: JavascriptPropertyTypeCustomizationUtils, ID: number) => void>;
	OnPropertyValueChanged: UnrealEngineMulticastDelegate<() => void>;
	static Load(ResourceName: string): JavascriptPropertyCustomization;
	static Find(Outer: UObject, ResourceName: string): JavascriptPropertyCustomization;
	static GetDefaultObject(): JavascriptPropertyCustomization;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptPropertyCustomization;
	Unregister(): void;
	Register(): void;
	static C(Other: UObject | any): JavascriptPropertyCustomization;
}

declare class JavascriptPropertyCustomizationLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): JavascriptPropertyCustomizationLibrary;
	static Find(Outer: UObject, ResourceName: string): JavascriptPropertyCustomizationLibrary;
	static GetDefaultObject(): JavascriptPropertyCustomizationLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptPropertyCustomizationLibrary;
	static WholeRowContent(Row: JavascriptDetailWidgetRow): JavascriptDetailWidgetDecl;
	static ValueContent(Row: JavascriptDetailWidgetRow): JavascriptDetailWidgetDecl;
	static SetValueFromFormattedString(Handle: JavascriptPropertyHandle,InValue: string): EPropertyAccessResult;
	static SetVAlign(Decl: JavascriptDetailWidgetDecl,InAlignment: EVerticalAlignment): void;
	static SetOnPropertyValueChanged(Handle: JavascriptPropertyHandle,Wrapper: JavascriptSimpleDelegateWrapper): void;
	static SetObjectValue(Handle: JavascriptPropertyHandle,InValue: UObject): EPropertyAccessResult;
	static SetMinDesiredWidth(Decl: JavascriptDetailWidgetDecl,MinWidth: number): void;
	static SetMaxDesiredWidth(Decl: JavascriptDetailWidgetDecl,MaxWidth: number): void;
	static SetJavascriptRefValue(Handle: JavascriptPropertyHandle,InValue: JavascriptRef): EPropertyAccessResult;
	static SetHAlign(Decl: JavascriptDetailWidgetDecl,InAlignment: EHorizontalAlignment): void;
	static SetFilterString(Row: JavascriptDetailWidgetRow,InFilterString: string): void;
	static SetContent(Decl: JavascriptDetailWidgetDecl,Widget: JavascriptSlateWidget): void;
	static RequestRefresh(CustomizationUtils: JavascriptPropertyTypeCustomizationUtils,bForce: boolean): void;
	static NameContent(Row: JavascriptDetailWidgetRow): JavascriptDetailWidgetDecl;
	static IsValidHandle(Handle: JavascriptPropertyHandle): boolean;
	static IsEditConst(Handle: JavascriptPropertyHandle): boolean;
	static IsArrayPropertyWithValueType(Handle: JavascriptPropertyHandle): boolean;
	static IsArrayProperty(Handle: JavascriptPropertyHandle): boolean;
	static GetValueAsFormattedString(Handle: JavascriptPropertyHandle,OutValue?: string): {OutValue: string, $: EPropertyAccessResult};
	static GetPropertyName(Handle: JavascriptPropertyHandle): string;
	static GetProperty(Handle: JavascriptPropertyHandle): any;
	static GetParentHandle(Handle: JavascriptPropertyHandle): JavascriptPropertyHandle;
	static GetOuterObjects(Handle: JavascriptPropertyHandle): UObject[];
	static GetObjectValue(Handle: JavascriptPropertyHandle,OutValue?: UObject): {OutValue: UObject, $: EPropertyAccessResult};
	static GetMetaData(Handle: JavascriptPropertyHandle,Key: string): string;
	static GetKeyHandle(Handle: JavascriptPropertyHandle): JavascriptPropertyHandle;
	static GetJavascriptRefValue(Handle: JavascriptPropertyHandle,OutValue?: JavascriptRef): {OutValue: JavascriptRef, $: EPropertyAccessResult};
	static GetIndexInArray(Handle: JavascriptPropertyHandle): number;
	static GetChildHandle(Parent: JavascriptPropertyHandle,Name: string): JavascriptPropertyHandle;
	static GenerateStructValueWidget(ChildBuilder: JavascriptDetailChildrenBuilder,StructPropertyHandle: JavascriptPropertyHandle): JavascriptSlateWidget;
	static GeneratePathToProperty(Handle: JavascriptPropertyHandle): string;
	static CustomWidget(Row: JavascriptDetailPropertyRow,bShowChildren: boolean): JavascriptDetailWidgetRow;
	static CreatePropertyValueWidget(Handle: JavascriptPropertyHandle,bHideDefaultPropertyButtons: boolean): JavascriptSlateWidget;
	static CreatePropertyNameWidget(Handle: JavascriptPropertyHandle,NameOverride: string,ToolTipOverride: string,bDisplayResetToDefault: boolean,bHideText: boolean,bHideThumbnail: boolean): JavascriptSlateWidget;
	static BindVisibility(Row: JavascriptDetailPropertyRow,Wrapper: JavascriptSimpleGetBoolDelegateWrapper): void;
	static AddExternalObjects(ChildBuilder: JavascriptDetailChildrenBuilder,Objects?: UObject[],UniqueIdName?: string): {Objects: UObject[], $: JavascriptDetailPropertyRow};
	static AddExternalObjectProperty(ChildBuilder: JavascriptDetailChildrenBuilder,Objects?: UObject[],PropertyName?: string,UniqueIdName?: string,bAllowChildrenOverride?: boolean,bCreateCategoryNodesOverride?: boolean): {Objects: UObject[], $: JavascriptDetailPropertyRow};
	static AddChildProperty(ChildBuilder: JavascriptDetailChildrenBuilder,PropertyHandle: JavascriptPropertyHandle): JavascriptDetailPropertyRow;
	static AddChildContent(ChildBuilder: JavascriptDetailChildrenBuilder,SearchString: string): JavascriptDetailWidgetRow;
	static C(Other: UObject | any): JavascriptPropertyCustomizationLibrary;
}

declare type EPropertyEditorNameAreaSettings = 'HideNameArea' | 'ObjectsUseNameArea' | 'ActorsUseNameArea' | 'ComponentsAndActorsUseNameArea' | 'EPropertyEditorNameAreaSettings_MAX';
declare var EPropertyEditorNameAreaSettings : { HideNameArea:'HideNameArea',ObjectsUseNameArea:'ObjectsUseNameArea',ActorsUseNameArea:'ActorsUseNameArea',ComponentsAndActorsUseNameArea:'ComponentsAndActorsUseNameArea',EPropertyEditorNameAreaSettings_MAX:'EPropertyEditorNameAreaSettings_MAX', };
declare class PropertyEditor extends Widget { 
	OnChange: UnrealEngineMulticastDelegate<(PropertyName: string, MemberPropertyName: string) => void>;
	bUpdateFromSelection: boolean;
	bLockable: boolean;
	bAllowSearch: boolean;
	bHideSelectionTip: boolean;
	bReadOnly: boolean;
	bEnablePropertyPath: boolean;
	NameAreaSettings: EPropertyEditorNameAreaSettings;
	ReadOnlyDelegate: UnrealEngineDelegate<() => boolean>;
	static Load(ResourceName: string): PropertyEditor;
	static Find(Outer: UObject, ResourceName: string): PropertyEditor;
	static GetDefaultObject(): PropertyEditor;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): PropertyEditor;
	SetObjects(Objects: UObject[],bForceRefresh: boolean,bOverrideLock: boolean): void;
	SetObject(UObject: UObject,bForceRefresh: boolean): void;
	IsPropertyVisible(PropertName: string,ParentPropertyName: string,PropertyPaths: string[]): boolean;
	IsPropertyReadOnly(PropertyName: string,ParentPropertyName: string,PropertyPaths: string[]): boolean;
	ForceRefresh(): void;
	Destruct(): void;
	Construct(): void;
	static C(Other: UObject | any): PropertyEditor;
}

declare class JavascriptPropertyTable extends Widget { 
	OnGenerateCustomCellWidget: UnrealEngineDelegate<(UObject: UObject, ColumnName: string) => JavascriptSlateWidget>;
	OnUseCustomCellWidget: UnrealEngineDelegate<(UObject: UObject, ColumnName: string) => boolean>;
	bUseCustomColumns: boolean;
	static Load(ResourceName: string): JavascriptPropertyTable;
	static Find(Outer: UObject, ResourceName: string): JavascriptPropertyTable;
	static GetDefaultObject(): JavascriptPropertyTable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptPropertyTable;
	SetEditingObjects(InEditingObjects: UObject[]): void;
	GetSelectedTableObjects(): UObject[];
	GetEditingObjects(): UObject[];
	static C(Other: UObject | any): JavascriptPropertyTable;
}

declare class JavascriptRawMeshLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): JavascriptRawMeshLibrary;
	static Find(Outer: UObject, ResourceName: string): JavascriptRawMeshLibrary;
	static GetDefaultObject(): JavascriptRawMeshLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptRawMeshLibrary;
	static SetSectionInfo(StaticMesh: StaticMesh,LODIndex: number,SectionIndex: number,Info: MeshSectionInfo): void;
	static SaveRawMesh(StaticMesh: StaticMesh,SourceModelIndex: number,InMesh?: JavascriptRawMesh): {InMesh: JavascriptRawMesh};
	static LoadRawMesh(StaticMesh: StaticMesh,SourceModelIndex: number,OutMesh?: JavascriptRawMesh): {OutMesh: JavascriptRawMesh};
	static IsValidOrFixable(RawMesh: JavascriptRawMesh): boolean;
	static IsValid(RawMesh: JavascriptRawMesh): boolean;
	static GetWedgePosition(RawMesh: JavascriptRawMesh,WedgeIndex: number): Vector;
	static GetSectionInfo(StaticMesh: StaticMesh,LODIndex: number,SectionIndex: number): MeshSectionInfo;
	static GetPhysicsBodySetupFromStaticMeshComponent(InStaticMeshComp: StaticMeshComponent): BodySetup;
	static GetPhysicsBodySetupFromStaticMesh(InStaticMesh: StaticMesh): BodySetup;
	static GetPhysicsBodySetupFromMesh(InSkeletalMesh: SkeletalMesh,InName: string): BodySetup;
	static GetPhysicsBodySetup(InSkeletalMeshComp: SkeletalMeshComponent,InName: string): BodySetup;
	static Empty(RawMesh?: JavascriptRawMesh): {RawMesh: JavascriptRawMesh};
	static CompactMaterialIndices(RawMesh?: JavascriptRawMesh): {RawMesh: JavascriptRawMesh};
	static Build(StaticMesh: StaticMesh): void;
	static C(Other: UObject | any): JavascriptRawMeshLibrary;
}

declare class JavascriptScrubControlPanel extends Widget { 
	OnClick_Forward_Delegate: UnrealEngineMulticastDelegate<() => void>;
	OnClick_Forward_Step_Delegate: UnrealEngineMulticastDelegate<() => void>;
	OnClick_Forward_End_Delegate: UnrealEngineMulticastDelegate<() => void>;
	OnClick_Backward_Delegate: UnrealEngineMulticastDelegate<() => void>;
	OnClick_Backward_Step_Delegate: UnrealEngineMulticastDelegate<() => void>;
	OnClick_Backward_End_Delegate: UnrealEngineMulticastDelegate<() => void>;
	OnClick_ToggleLoop_Delegate: UnrealEngineMulticastDelegate<() => void>;
	SetPlaybackPosition_Delegate: UnrealEngineMulticastDelegate<() => void>;
	static Load(ResourceName: string): JavascriptScrubControlPanel;
	static Find(Outer: UObject, ResourceName: string): JavascriptScrubControlPanel;
	static GetDefaultObject(): JavascriptScrubControlPanel;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptScrubControlPanel;
	SetViewRange(NewMin: number,NewMax: number): void;
	SetSumFrames(NewSumFrames: number): void;
	SetPlaybackPosition(NewTime: number): void;
	SetLooping(NewbLooping: boolean): void;
	SetFramesPerSecond(NewFramesPerSecond: number): void;
	IsLooping(): boolean;
	GetViewRangeMin(): number;
	GetViewRangeMax(): number;
	GetTotalSequenceLength(): number;
	GetTotalFrameCount(): any;
	GetPlaybackPosition(): number;
	GetFramesPerSecond(): number;
	static C(Other: UObject | any): JavascriptScrubControlPanel;
}

declare class JavascriptWebBrowser extends Widget { 
	OnUrlChanged: UnrealEngineMulticastDelegate<(text: string) => void>;
	OnBeforePopup: UnrealEngineMulticastDelegate<(URL: string, Frame: string) => void>;
	bShowAddressBar: boolean;
	bShowControls: boolean;
	bSupportsThumbMouseButtonNavigation: boolean;
	static Load(ResourceName: string): JavascriptWebBrowser;
	static Find(Outer: UObject, ResourceName: string): JavascriptWebBrowser;
	static GetDefaultObject(): JavascriptWebBrowser;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptWebBrowser;
	LoadURL(NewURL: string): void;
	LoadString(Contents: string,DummyURL: string): void;
	GetUrl(): string;
	GetTitleText(): string;
	ExecuteJavascript(ScriptText: string): void;
	static C(Other: UObject | any): JavascriptWebBrowser;
}

declare class JavascriptPinParams { 
	ContainerType: EPinContainerType;
	bIsReference: boolean;
	bIsConst: boolean;
	index: number;
	clone() : JavascriptPinParams;
	static C(Other: UObject | any): JavascriptPinParams;
}

declare class JavascriptGraphEdNode extends EdGraphNode { 
	BackgroundColor: SlateColor;
	GraphNode: UObject;
	IsTitleOnly: boolean;
	IsCustomNode: boolean;
	WidgetFinalized: JavascriptFunction;
	RenderOpacity: number;
	Bidirectional: boolean;
	PriorityOrder: number;
	PinRefMap: any;
	static Load(ResourceName: string): JavascriptGraphEdNode;
	static Find(Outer: UObject, ResourceName: string): JavascriptGraphEdNode;
	static GetDefaultObject(): JavascriptGraphEdNode;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptGraphEdNode;
	UpdateSlate(): void;
	SetVisible(bVisible: boolean): void;
	SetTitleSelectionMode(InTitleHeight: number): void;
	SetRenderOpacity(Opacity: number): void;
	SetEnable(bEnable: boolean): void;
	ResetTitleSelectionMode(): void;
	RemovePinByName(PinName: string): boolean;
	RemovePin(Pin: JavascriptEdGraphPin): boolean;
	GetVisible(): boolean;
	GetNumOfPins(Direction: EEdGraphPinDirection): number;
	GetDesiredSize(): Vector2D;
	CreatePin(Dir: EEdGraphPinDirection,PinCategory: string,PinSubCategory: string,PinSubCategoryObject: UObject,PinName: string,PinToolTip: string,PinDisplayName: string,InPinParams: JavascriptPinParams): JavascriptEdGraphPin;
	static C(Other: UObject | any): JavascriptGraphEdNode;
	GetOwnerPanel(): JavascriptSlateWidget;
	static GetOwnerPanel(UNode: JavascriptGraphEdNode): JavascriptSlateWidget;
}

declare class JavascriptSlateEdNode { 
	clone() : JavascriptSlateEdNode;
	static C(Other: UObject | any): JavascriptSlateEdNode;
	AddPinToHoverSet(Pin: JavascriptEdGraphPin): void;
	RemovePinFromHoverSet(Pin: JavascriptEdGraphPin): void;
	static AddPinToHoverSet(InSlateEdNode: JavascriptSlateEdNode,Pin: JavascriptEdGraphPin): void;
	static RemovePinFromHoverSet(InSlateNode: JavascriptSlateEdNode,Pin: JavascriptEdGraphPin): void;
}

declare class JavascriptPerformSecondPassLayoutContainer { 
	PrevNode: EdGraphNode;
	NextNode: EdGraphNode;
	NodeIndex: number;
	MaxNodes: number;
	clone() : JavascriptPerformSecondPassLayoutContainer;
	static C(Other: UObject | any): JavascriptPerformSecondPassLayoutContainer;
}

declare class JavascriptConnectionParams { 
	WireColor: LinearColor;
	AssociatedPin1: JavascriptEdGraphPin;
	AssociatedPin2: JavascriptEdGraphPin;
	WireThickness: number;
	bDrawBubbles: boolean;
	bUserFlag1: boolean;
	bUserFlag2: boolean;
	StartDirection: EEdGraphPinDirection;
	EndDirection: EEdGraphPinDirection;
	clone() : JavascriptConnectionParams;
	static C(Other: UObject | any): JavascriptConnectionParams;
}

declare class JavascriptGraphConnectionDrawingPolicyContainer { 
	clone() : JavascriptGraphConnectionDrawingPolicyContainer;
	static C(Other: UObject | any): JavascriptGraphConnectionDrawingPolicyContainer;
	ApplyHoverDeemphasis(OutputPin: JavascriptEdGraphPin,InputPin: JavascriptEdGraphPin,Thickness: number,WireColor: LinearColor): void;
	DetermineWiringStyle(OutputPin: JavascriptEdGraphPin,InputPin: JavascriptEdGraphPin,Params?: JavascriptConnectionParams): {Params: JavascriptConnectionParams};
	DrawConnection(A: Vector2D,B: Vector2D,Params: JavascriptConnectionParams): void;
	DrawSplineWithArrow(StartAnchorPoint: Vector2D,EndAnchorPoint: Vector2D,Params: JavascriptConnectionParams): void;
	GetHorveredPinNum(): number;
	IsContainedHoveredPins(Pin: JavascriptEdGraphPin): boolean;
	MakeRotatedBox(ArrowDrawPos: Vector2D,AngleInRadians: number,WireColor: LinearColor): void;
	static ApplyHoverDeemphasis(Container: JavascriptGraphConnectionDrawingPolicyContainer,OutputPin: JavascriptEdGraphPin,InputPin: JavascriptEdGraphPin,Thickness: number,WireColor: LinearColor): void;
	static DetermineWiringStyle(Container: JavascriptGraphConnectionDrawingPolicyContainer,OutputPin: JavascriptEdGraphPin,InputPin: JavascriptEdGraphPin,Params?: JavascriptConnectionParams): {Params: JavascriptConnectionParams};
	static DrawConnection(Container: JavascriptGraphConnectionDrawingPolicyContainer,A: Vector2D,B: Vector2D,Params: JavascriptConnectionParams): void;
	static DrawSplineWithArrow(Container: JavascriptGraphConnectionDrawingPolicyContainer,StartAnchorPoint: Vector2D,EndAnchorPoint: Vector2D,Params: JavascriptConnectionParams): void;
	static GetHorveredPinNum(Container: JavascriptGraphConnectionDrawingPolicyContainer): number;
	static IsContainedHoveredPins(Container: JavascriptGraphConnectionDrawingPolicyContainer,Pin: JavascriptEdGraphPin): boolean;
	static MakeRotatedBox(Container: JavascriptGraphConnectionDrawingPolicyContainer,ArrowDrawPos: Vector2D,AngleInRadians: number,WireColor: LinearColor): void;
}

declare type EGraphSchemaGetStringQuery = 'Description' | 'Title' | 'EGraphSchemaGetStringQuery_MAX';
declare var EGraphSchemaGetStringQuery : { Description:'Description',Title:'Title',EGraphSchemaGetStringQuery_MAX:'EGraphSchemaGetStringQuery_MAX', };
declare class JavascriptGraphMenuBuilder extends JavascriptMenuBuilder { 
	Graph: EdGraph;
	GraphNode: EdGraphNode;
	GraphPin: JavascriptEdGraphPin;
	bIsDebugging: boolean;
	clone() : JavascriptGraphMenuBuilder;
	static C(Other: UObject | any): JavascriptGraphMenuBuilder;
}

declare type ECanCreateConnectionResponse = 'CONNECT_RESPONSE_MAKE' | 'CONNECT_RESPONSE_DISALLOW' | 'CONNECT_RESPONSE_BREAK_OTHERS_A' | 'CONNECT_RESPONSE_BREAK_OTHERS_B' | 'CONNECT_RESPONSE_BREAK_OTHERS_AB' | 'CONNECT_RESPONSE_MAKE_WITH_CONVERSION_NODE' | 'CONNECT_RESPONSE_MAKE_WITH_PROMOTION' | 'CONNECT_RESPONSE_MAX';
declare var ECanCreateConnectionResponse : { CONNECT_RESPONSE_MAKE:'CONNECT_RESPONSE_MAKE',CONNECT_RESPONSE_DISALLOW:'CONNECT_RESPONSE_DISALLOW',CONNECT_RESPONSE_BREAK_OTHERS_A:'CONNECT_RESPONSE_BREAK_OTHERS_A',CONNECT_RESPONSE_BREAK_OTHERS_B:'CONNECT_RESPONSE_BREAK_OTHERS_B',CONNECT_RESPONSE_BREAK_OTHERS_AB:'CONNECT_RESPONSE_BREAK_OTHERS_AB',CONNECT_RESPONSE_MAKE_WITH_CONVERSION_NODE:'CONNECT_RESPONSE_MAKE_WITH_CONVERSION_NODE',CONNECT_RESPONSE_MAKE_WITH_PROMOTION:'CONNECT_RESPONSE_MAKE_WITH_PROMOTION',CONNECT_RESPONSE_MAX:'CONNECT_RESPONSE_MAX', };
declare class JavascriptPinConnectionResponse { 
	Message: string;
	Response: ECanCreateConnectionResponse;
	clone() : JavascriptPinConnectionResponse;
	static C(Other: UObject | any): JavascriptPinConnectionResponse;
}

declare class EdGraphSchemaAction { 
	MenuDescription: string;
	TooltipDescription: string;
	Category: string;
	Keywords: string;
	Grouping: number;
	SectionID: number;
	MenuDescriptionArray: string[];
	FullSearchTitlesArray: string[];
	FullSearchKeywordsArray: string[];
	FullSearchCategoryArray: string[];
	LocalizedMenuDescriptionArray: string[];
	LocalizedFullSearchTitlesArray: string[];
	LocalizedFullSearchKeywordsArray: string[];
	LocalizedFullSearchCategoryArray: string[];
	SearchText: string;
	clone() : EdGraphSchemaAction;
	static C(Other: UObject | any): EdGraphSchemaAction;
}

declare class PerformActionContext { 
	ParentGraph: EdGraph;
	FromPins: JavascriptEdGraphPin[];
	Location: Vector2D;
	bSelectNewNode: boolean;
	clone() : PerformActionContext;
	static C(Other: UObject | any): PerformActionContext;
}

declare class JavascriptArrangedWidget { 
	clone() : JavascriptArrangedWidget;
	static C(Other: UObject | any): JavascriptArrangedWidget;
}

declare class JavascriptPinWidget { 
	clone() : JavascriptPinWidget;
	static C(Other: UObject | any): JavascriptPinWidget;
}

declare class JavascriptDetermineLinkGeometryContainer { 
	clone() : JavascriptDetermineLinkGeometryContainer;
	static C(Other: UObject | any): JavascriptDetermineLinkGeometryContainer;
	FindPinGeometries(PinWidget: JavascriptPinWidget): JavascriptArrangedWidget;
	FindPinToPinWidgetMap(Pin: JavascriptEdGraphPin): JavascriptPinWidget;
	GetArrangedNodes(UNode: EdGraphNode): JavascriptArrangedWidget;
	GetOutputPinWidget(): JavascriptPinWidget;
	static FindPinGeometries(Container: JavascriptDetermineLinkGeometryContainer,PinWidget: JavascriptPinWidget): JavascriptArrangedWidget;
	static FindPinToPinWidgetMap(Container: JavascriptDetermineLinkGeometryContainer,Pin: JavascriptEdGraphPin): JavascriptPinWidget;
	static GetArrangedNodes(Container: JavascriptDetermineLinkGeometryContainer,UNode: EdGraphNode): JavascriptArrangedWidget;
	static GetOutputPinWidget(Container: JavascriptDetermineLinkGeometryContainer): JavascriptPinWidget;
}

declare class JavascriptGraphAssetGraphSchema extends EdGraphSchema { 
	OnGetPinColor: UnrealEngineDelegate<(bHovered: boolean, Pin: JavascriptEdGraphPin) => SlateColor>;
	OnGetPinTextColor: UnrealEngineDelegate<(bHovered: boolean, Pin: JavascriptEdGraphPin) => SlateColor>;
	OnGetDefaultValueVisibility: UnrealEngineDelegate<(Pin: JavascriptEdGraphPin) => boolean>;
	OnGetSlateBrushName: UnrealEngineDelegate<(bHovered: boolean, Pin: JavascriptEdGraphPin) => string>;
	OnPinConnectionListChanged: UnrealEngineDelegate<(Pin: JavascriptEdGraphPin) => void>;
	OnTryCreateConnection: UnrealEngineDelegate<(PinA: JavascriptEdGraphPin, PinB: JavascriptEdGraphPin) => void>;
	OnMouseEnter: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode, SlateEdNode: JavascriptSlateEdNode, UPointerEvent: UPointerEvent) => void>;
	OnMouseLeave: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode, SlateEdNode: JavascriptSlateEdNode, UPointerEvent: UPointerEvent) => void>;
	OnMouseMove: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode, Delta: Vector2D, bUserIsDragging: boolean, MouseZone: number, UPointerEvent: UPointerEvent) => boolean>;
	OnMouseButtonDown: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode, MyGeometry: Geometry, UPointerEvent: UPointerEvent) => boolean>;
	OnMouseButtonUp: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode, MyGeometry: Geometry, UPointerEvent: UPointerEvent) => boolean>;
	OnPerformSecondPassLayout: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode) => JavascriptPerformSecondPassLayoutContainer>;
	OnRequiresSecondPassLayout: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode) => boolean>;
	OnMoveTo: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode, NewPosition: Vector2D) => boolean>;
	OnTakeContentWidget: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode, OutLeftNodeBoxWidget: JavascriptSlateWidget, OutRightNodeBoxWidget: JavascriptSlateWidget) => JavascriptSlateWidget>;
	OnGetValueWidget: UnrealEngineDelegate<(Pin: JavascriptEdGraphPin) => JavascriptSlateWidget>;
	OnGetActualPinWidget: UnrealEngineDelegate<(Pin: JavascriptEdGraphPin) => JavascriptSlateWidget>;
	OnGetPinStatusIndicator: UnrealEngineDelegate<(Pin: JavascriptEdGraphPin) => JavascriptSlateWidget>;
	OnDisableMakePins: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode) => boolean>;
	OnEnablePin: UnrealEngineDelegate<(Pin: JavascriptEdGraphPin) => boolean>;
	OnUsingDefaultPin: UnrealEngineDelegate<(Pin: JavascriptEdGraphPin) => boolean>;
	OnGetPinLabelVisibility: UnrealEngineDelegate<(Pin: JavascriptEdGraphPin) => boolean>;
	OnGetCustomPinBoxWidget: UnrealEngineDelegate<(Pin: JavascriptEdGraphPin) => JavascriptSlateWidget>;
	OnUsingNodeWidgetMap: UnrealEngineDelegate<() => boolean>;
	OnDetermineWiringStyle: UnrealEngineDelegate<(A: JavascriptEdGraphPin, B: JavascriptEdGraphPin, Params: JavascriptConnectionParams, Container: JavascriptGraphConnectionDrawingPolicyContainer) => void>;
	OnComputeSplineTangent: UnrealEngineDelegate<(A: Vector2D, B: Vector2D) => Vector2D>;
	OnDrawSplineWithArrow: UnrealEngineDelegate<(A: Vector2D, B: Vector2D, Params: JavascriptConnectionParams, Container: JavascriptGraphConnectionDrawingPolicyContainer, ArrowRadius: Vector2D) => boolean>;
	OnDrawSplineWithArrow_Geom: UnrealEngineDelegate<(A: Geometry, B: Geometry, Params: JavascriptConnectionParams, Container: JavascriptGraphConnectionDrawingPolicyContainer) => boolean>;
	OnDrawPreviewConnector: UnrealEngineDelegate<(PinGeometry: Geometry, StartPoint: Vector2D, Endpoint: Vector2D, Pin: JavascriptEdGraphPin, Params: JavascriptConnectionParams, Container: JavascriptGraphConnectionDrawingPolicyContainer) => boolean>;
	OnTakeUserWidget: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode) => JavascriptSlateWidget>;
	OnTakeTitleAreaWidget: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode) => JavascriptSlateWidget>;
	OnTakeErrorReportingWidget: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode) => JavascriptSlateWidget>;
	OnGetString: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode, Query: EGraphSchemaGetStringQuery) => string>;
	OnBuildMenu: UnrealEngineDelegate<(Builder: JavascriptGraphMenuBuilder) => void>;
	OnAllocateDefaultPins: UnrealEngineDelegate<(UNode: JavascriptGraphEdNode) => void>;
	OnCreatePin: UnrealEngineDelegate<(Pin: JavascriptEdGraphPin) => JavascriptSlateWidget>;
	OnCanCreateConnection: UnrealEngineDelegate<(A: JavascriptEdGraphPin, B: JavascriptEdGraphPin) => JavascriptPinConnectionResponse>;
	OnPerformAction: UnrealEngineDelegate<(Action: EdGraphSchemaAction, Context: PerformActionContext) => EdGraphNode>;
	OnContextActions: UnrealEngineDelegate<(FromPin: JavascriptEdGraphPin) => EdGraphSchemaAction[]>;
	OnNodeConnectionListChanged: UnrealEngineDelegate<(UNode: JavascriptGraphEdNode) => void>;
	OnCreateAutomaticConversionNodeAndConnections: UnrealEngineDelegate<(A: JavascriptEdGraphPin, B: JavascriptEdGraphPin) => boolean>;
	OnDetermineLinkGeometry: UnrealEngineDelegate<(OutPin: JavascriptEdGraphPin, InputPin: JavascriptEdGraphPin, StartWidgetGeometry: JavascriptArrangedWidget, EndWidgetGeometry: JavascriptArrangedWidget, Container: JavascriptDetermineLinkGeometryContainer) => boolean>;
	OnIsNodeComment: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode) => boolean>;
	OnEndUserInteraction: UnrealEngineDelegate<(UNode: JavascriptGraphEdNode) => void>;
	OnCreateOutputSideAddButton: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode) => boolean>;
	OnAddPinByAddButton: UnrealEngineDelegate<(UNode: JavascriptGraphEdNode) => void>;
	OnShouldAlwaysPurgeOnModification: UnrealEngineDelegate<() => boolean>;
	OnDragEnter: UnrealEngineDelegate<(Target: JavascriptGraphEdNode, Capture: JavascriptGraphEdNode, MyGeometry: Geometry) => boolean>;
	OnDragLeave: UnrealEngineDelegate<(Instance: JavascriptGraphEdNode) => boolean>;
	OnDragOver: UnrealEngineDelegate<(Target: JavascriptGraphEdNode, Capture: JavascriptGraphEdNode, MyGeometry: Geometry) => boolean>;
	OnDrop: UnrealEngineDelegate<(Target: JavascriptGraphEdNode, Capture: JavascriptGraphEdNode, MyGeometry: Geometry) => boolean>;
	OnGetSideMarginInPin: UnrealEngineDelegate<(Pin: JavascriptEdGraphPin) => number>;
	static Load(ResourceName: string): JavascriptGraphAssetGraphSchema;
	static Find(Outer: UObject, ResourceName: string): JavascriptGraphAssetGraphSchema;
	static GetDefaultObject(): JavascriptGraphAssetGraphSchema;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptGraphAssetGraphSchema;
	BreakSinglePinLink(SourcePin: JavascriptEdGraphPin,TargetPin: JavascriptEdGraphPin): void;
	BreakPinLinks(TargetPin: JavascriptEdGraphPin,bSendsNodeNotifcation: boolean): void;
	BreakNodeLinks(TargetNode: EdGraphNode): void;
	static C(Other: UObject | any): JavascriptGraphAssetGraphSchema;
}

declare class JavascriptGraphEdCustomNodeWidget extends Widget { 
	EdNode: JavascriptGraphEdNode;
	static Load(ResourceName: string): JavascriptGraphEdCustomNodeWidget;
	static Find(Outer: UObject, ResourceName: string): JavascriptGraphEdCustomNodeWidget;
	static GetDefaultObject(): JavascriptGraphEdCustomNodeWidget;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptGraphEdCustomNodeWidget;
	SetNode(InEdNode: JavascriptGraphEdNode): void;
	SetGraphPanel(InGraphPanel: JavascriptSlateWidget): void;
	static C(Other: UObject | any): JavascriptGraphEdCustomNodeWidget;
}

declare class JavascriptNodeCreator { 
	UNode: JavascriptGraphEdNode;
	clone() : JavascriptNodeCreator;
	static C(Other: UObject | any): JavascriptNodeCreator;
	Finalize(): {Creator: JavascriptNodeCreator};
	static Finalize(Creator?: JavascriptNodeCreator): {Creator: JavascriptNodeCreator};
}

declare class JavascriptGraphEdGraph extends EdGraph { 
	CustomNodes: JavascriptGraphEdNode[];
	static Load(ResourceName: string): JavascriptGraphEdGraph;
	static Find(Outer: UObject, ResourceName: string): JavascriptGraphEdGraph;
	static GetDefaultObject(): JavascriptGraphEdGraph;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptGraphEdGraph;
	RebuildGenericGraph(): void;
	static C(Other: UObject | any): JavascriptGraphEdGraph;
	CommentNodeCreator(bSelectNewNode: boolean): JavascriptNodeCreator;
	CustomNodeCreator(): JavascriptNodeCreator;
	NodeCreator(bSelectNewNode: boolean): JavascriptNodeCreator;
	static CommentNodeCreator(Graph: JavascriptGraphEdGraph,bSelectNewNode: boolean): JavascriptNodeCreator;
	static CustomNodeCreator(Graph: JavascriptGraphEdGraph): JavascriptNodeCreator;
	static NodeCreator(Graph: JavascriptGraphEdGraph,bSelectNewNode: boolean): JavascriptNodeCreator;
}

declare class JavascriptGraphEditorLibrary extends BlueprintFunctionLibrary { 
	static Load(ResourceName: string): JavascriptGraphEditorLibrary;
	static Find(Outer: UObject, ResourceName: string): JavascriptGraphEditorLibrary;
	static GetDefaultObject(): JavascriptGraphEditorLibrary;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptGraphEditorLibrary;
	static TryConnection(Schema: EdGraphSchema,A: JavascriptEdGraphPin,B: JavascriptEdGraphPin): boolean;
	static SetPinType(Pin: JavascriptEdGraphPin,PinType: EdGraphPinType): void;
	static SetPinRefObject(InPin: JavascriptEdGraphPin,InObject: UObject): void;
	static SetPinInfo(A: JavascriptEdGraphPin,InPinName: string,InPinToolTip: string): void;
	static SetPinHidden(A: JavascriptEdGraphPin,bHidden: boolean): void;
	static SetPinContainerType(A: JavascriptEdGraphPin,ContainerType: EJavascriptPinContainerType): void;
	static SetPinAdvancedView(A: JavascriptEdGraphPin,bAdvancedView: boolean): void;
	static SetParentPin(A: JavascriptEdGraphPin,Parent: JavascriptEdGraphPin): void;
	static SetNodeMetaData(Schema: EdGraphSchema,UNode: EdGraphNode,KeyValue: string): boolean;
	static ResizeNode(UNode: EdGraphNode,NewSize: Vector2D): void;
	static RemovePinFromHoverSet(InSlateNode: JavascriptSlateEdNode,Pin: JavascriptEdGraphPin): void;
	static NodeCreator(Graph: JavascriptGraphEdGraph,bSelectNewNode: boolean): JavascriptNodeCreator;
	static MakeRotatedBox(Container: JavascriptGraphConnectionDrawingPolicyContainer,ArrowDrawPos: Vector2D,AngleInRadians: number,WireColor: LinearColor): void;
	static MakeLinkTo(A: JavascriptEdGraphPin,B: JavascriptEdGraphPin): void;
	static IsValid(A: JavascriptEdGraphPin): boolean;
	static IsPinHidden(A: JavascriptEdGraphPin): boolean;
	static IsContainedHoveredPins(Container: JavascriptGraphConnectionDrawingPolicyContainer,Pin: JavascriptEdGraphPin): boolean;
	static GetSubPins(A: JavascriptEdGraphPin): JavascriptEdGraphPin[];
	static GetPinType(A: JavascriptEdGraphPin): EdGraphPinType;
	static GetPins(UNode: EdGraphNode): JavascriptEdGraphPin[];
	static GetPinRefObject(InPin: JavascriptEdGraphPin): UObject;
	static GetPinName(A: JavascriptEdGraphPin): string;
	static GetPinIndex(A: JavascriptEdGraphPin): number;
	static GetPinGUID(A: JavascriptEdGraphPin): Guid;
	static GetPinContainerType(A: JavascriptEdGraphPin): EJavascriptPinContainerType;
	static GetParentPin(A: JavascriptEdGraphPin): JavascriptEdGraphPin;
	static GetOwningNode(A: JavascriptEdGraphPin): EdGraphNode;
	static GetOwnerPanel(UNode: JavascriptGraphEdNode): JavascriptSlateWidget;
	static GetOutputPinWidget(Container: JavascriptDetermineLinkGeometryContainer): JavascriptPinWidget;
	static GetLinkedTo(A: JavascriptEdGraphPin): JavascriptEdGraphPin[];
	static GetLinkedPinNum(A: JavascriptEdGraphPin): number;
	static GetHorveredPinNum(Container: JavascriptGraphConnectionDrawingPolicyContainer): number;
	static GetDirection(A: JavascriptEdGraphPin): EEdGraphPinDirection;
	static GetDefaultObject(): JavascriptEdGraphPin;
	static GetArrangedNodes(Container: JavascriptDetermineLinkGeometryContainer,UNode: EdGraphNode): JavascriptArrangedWidget;
	static FindPinToPinWidgetMap(Container: JavascriptDetermineLinkGeometryContainer,Pin: JavascriptEdGraphPin): JavascriptPinWidget;
	static FindPinGeometries(Container: JavascriptDetermineLinkGeometryContainer,PinWidget: JavascriptPinWidget): JavascriptArrangedWidget;
	static FindPin(UNode: EdGraphNode,PinName: string,Direction: EEdGraphPinDirection): JavascriptEdGraphPin;
	static FindClosestPointOnGeom(Geom: Geometry,TestPoint: Vector2D): Vector2D;
	static Finalize(Creator?: JavascriptNodeCreator): {Creator: JavascriptNodeCreator};
	static DrawSplineWithArrow(Container: JavascriptGraphConnectionDrawingPolicyContainer,StartAnchorPoint: Vector2D,EndAnchorPoint: Vector2D,Params: JavascriptConnectionParams): void;
	static DrawConnection(Container: JavascriptGraphConnectionDrawingPolicyContainer,A: Vector2D,B: Vector2D,Params: JavascriptConnectionParams): void;
	static DetermineWiringStyle(Container: JavascriptGraphConnectionDrawingPolicyContainer,OutputPin: JavascriptEdGraphPin,InputPin: JavascriptEdGraphPin,Params?: JavascriptConnectionParams): {Params: JavascriptConnectionParams};
	static DestroyNode(UNode: EdGraphNode): void;
	static CustomNodeCreator(Graph: JavascriptGraphEdGraph): JavascriptNodeCreator;
	static CommentNodeCreator(Graph: JavascriptGraphEdGraph,bSelectNewNode: boolean): JavascriptNodeCreator;
	static CenterOf(Geom: Geometry): Vector2D;
	static CanUserDeleteNode(UNode: EdGraphNode): boolean;
	static CanDuplicateNode(UNode: EdGraphNode): boolean;
	static BreakLinkTo(A: JavascriptEdGraphPin,B: JavascriptEdGraphPin): void;
	static BreakAllPinLinks(A: JavascriptEdGraphPin): void;
	static AutowireNewNode(UNode: EdGraphNode,FromPin: JavascriptEdGraphPin): void;
	static ApplyHoverDeemphasis(Container: JavascriptGraphConnectionDrawingPolicyContainer,OutputPin: JavascriptEdGraphPin,InputPin: JavascriptEdGraphPin,Thickness: number,WireColor: LinearColor): void;
	static AddPinToHoverSet(InSlateEdNode: JavascriptSlateEdNode,Pin: JavascriptEdGraphPin): void;
	static C(Other: UObject | any): JavascriptGraphEditorLibrary;
}

declare class JavascriptGraphAppearanceInfo { 
	CornerImage: SlateBrush;
	CornerText: string;
	PIENotifyText: string;
	ReadOnlyText: string;
	InstructionText: string;
	clone() : JavascriptGraphAppearanceInfo;
	static C(Other: UObject | any): JavascriptGraphAppearanceInfo;
}

declare type EPinVisibility = 'Pin_Show' | 'Pin_HideNoConnection' | 'Pin_HideNoConnectionNoDefault' | 'Pin_MAX';
declare var EPinVisibility : { Pin_Show:'Pin_Show',Pin_HideNoConnection:'Pin_HideNoConnection',Pin_HideNoConnectionNoDefault:'Pin_HideNoConnectionNoDefault',Pin_MAX:'Pin_MAX', };
declare class JavascriptGraphEditorWidget extends Widget { 
	EdGraph: JavascriptGraphEdGraph;
	OnNodeDoubleClicked: UnrealEngineDelegate<(UNode: EdGraphNode) => void>;
	OnDropActor: UnrealEngineDelegate<(Actors: Actor[], Graph: EdGraph, Point: Vector2D) => void>;
	OnDisallowedPinConnection: UnrealEngineDelegate<(A: JavascriptEdGraphPin, B: JavascriptEdGraphPin) => void>;
	OnSelectedNodesChanged: UnrealEngineDelegate<(Set: UObject[]) => void>;
	OnInitialGraphPanelUpdated: UnrealEngineDelegate<() => void>;
	AppearanceInfo: JavascriptGraphAppearanceInfo;
	CommandList: JavascriptUICommandList;
	static Load(ResourceName: string): JavascriptGraphEditorWidget;
	static Find(Outer: UObject, ResourceName: string): JavascriptGraphEditorWidget;
	static GetDefaultObject(): JavascriptGraphEditorWidget;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptGraphEditorWidget;
	SetViewLocation(Location: Vector2D,ZoomAmount: number): void;
	SetPinVisibility(InVisibility: EPinVisibility): void;
	SetNodeSelection(UNode: EdGraphNode,bSelect: boolean): void;
	SetGraph(InEdGraph: JavascriptGraphEdGraph): void;
	SelectAllNodes(): void;
	NotifyGraphChanged(): void;
	static NewGraph(ParentScope: UObject): JavascriptGraphEdGraph;
	JumpToPin(JumpToMe: JavascriptEdGraphPin): void;
	JumpToNode(JumpToMe: EdGraphNode,bRequestRename: boolean,bSelectNode: boolean): void;
	GetViewLocation(OutLocation?: Vector2D,OutZoomAmount?: number): {OutLocation: Vector2D, OutZoomAmount: number};
	GetSelectedNodes(): UObject[];
	GetPasteLocation(): Vector2D;
	ClearSelectionSet(): void;
	static C(Other: UObject | any): JavascriptGraphEditorWidget;
}

declare class JavascriptGraphEdNodeWidget extends Widget { 
	EdNode: JavascriptGraphEdNode;
	static Load(ResourceName: string): JavascriptGraphEdNodeWidget;
	static Find(Outer: UObject, ResourceName: string): JavascriptGraphEdNodeWidget;
	static GetDefaultObject(): JavascriptGraphEdNodeWidget;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptGraphEdNodeWidget;
	SetNode(InEdNode: JavascriptGraphEdNode): void;
	static C(Other: UObject | any): JavascriptGraphEdNodeWidget;
}

declare class JavascriptGraphEdNode_Comment extends JavascriptGraphEdNode { 
	CommentColor: LinearColor;
	FontSize: number;
	bCommentBubbleVisible_InDetailsPanel: boolean;
	bColorCommentBubble: boolean;
	MoveMode: ECommentBoxMode;
	CommentDepth: number;
	static Load(ResourceName: string): JavascriptGraphEdNode_Comment;
	static Find(Outer: UObject, ResourceName: string): JavascriptGraphEdNode_Comment;
	static GetDefaultObject(): JavascriptGraphEdNode_Comment;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptGraphEdNode_Comment;
	static C(Other: UObject | any): JavascriptGraphEdNode_Comment;
}

declare class JavascriptGraphTextPropertyEditableTextBox extends Widget { 
	OnGetGraphPin: UnrealEngineDelegate<() => JavascriptEdGraphPin>;
	OnGetDefaultValue: UnrealEngineDelegate<() => JavascriptTextProperty>;
	OnTextCommitted: UnrealEngineMulticastDelegate<(TextProperty: JavascriptTextProperty) => void>;
	WidgetStyle: EditableTextBoxStyle;
	WrapTextAt: number;
	AutoWrapText: boolean;
	static Load(ResourceName: string): JavascriptGraphTextPropertyEditableTextBox;
	static Find(Outer: UObject, ResourceName: string): JavascriptGraphTextPropertyEditableTextBox;
	static GetDefaultObject(): JavascriptGraphTextPropertyEditableTextBox;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): JavascriptGraphTextPropertyEditableTextBox;
	static C(Other: UObject | any): JavascriptGraphTextPropertyEditableTextBox;
}

declare class OnGetGraphPin__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnGetGraphPin__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnGetGraphPin__PythonCallable;
	static GetDefaultObject(): OnGetGraphPin__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnGetGraphPin__PythonCallable;
	static C(Other: UObject | any): OnGetGraphPin__PythonCallable;
}

declare class OnDisallowedPinConnection__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnDisallowedPinConnection__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnDisallowedPinConnection__PythonCallable;
	static GetDefaultObject(): OnDisallowedPinConnection__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnDisallowedPinConnection__PythonCallable;
	static C(Other: UObject | any): OnDisallowedPinConnection__PythonCallable;
}

declare class OnDropActor__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnDropActor__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnDropActor__PythonCallable;
	static GetDefaultObject(): OnDropActor__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnDropActor__PythonCallable;
	static C(Other: UObject | any): OnDropActor__PythonCallable;
}

declare class SetNodes__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): SetNodes__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): SetNodes__PythonCallable;
	static GetDefaultObject(): SetNodes__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SetNodes__PythonCallable;
	static C(Other: UObject | any): SetNodes__PythonCallable;
}

declare class SimpleDelegate__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): SimpleDelegate__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): SimpleDelegate__PythonCallable;
	static GetDefaultObject(): SimpleDelegate__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SimpleDelegate__PythonCallable;
	static C(Other: UObject | any): SimpleDelegate__PythonCallable;
}

declare class SingleNode__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): SingleNode__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): SingleNode__PythonCallable;
	static GetDefaultObject(): SingleNode__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): SingleNode__PythonCallable;
	static C(Other: UObject | any): SingleNode__PythonCallable;
}

declare class OnBuildMenu__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnBuildMenu__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnBuildMenu__PythonCallable;
	static GetDefaultObject(): OnBuildMenu__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnBuildMenu__PythonCallable;
	static C(Other: UObject | any): OnBuildMenu__PythonCallable;
}

declare class OnCanCreateConnection__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnCanCreateConnection__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnCanCreateConnection__PythonCallable;
	static GetDefaultObject(): OnCanCreateConnection__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnCanCreateConnection__PythonCallable;
	static C(Other: UObject | any): OnCanCreateConnection__PythonCallable;
}

declare class OnContextActions__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnContextActions__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnContextActions__PythonCallable;
	static GetDefaultObject(): OnContextActions__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnContextActions__PythonCallable;
	static C(Other: UObject | any): OnContextActions__PythonCallable;
}

declare class OnCreateAutomaticConversionNodeAndConnections__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnCreateAutomaticConversionNodeAndConnections__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnCreateAutomaticConversionNodeAndConnections__PythonCallable;
	static GetDefaultObject(): OnCreateAutomaticConversionNodeAndConnections__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnCreateAutomaticConversionNodeAndConnections__PythonCallable;
	static C(Other: UObject | any): OnCreateAutomaticConversionNodeAndConnections__PythonCallable;
}

declare class OnCreatePin__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnCreatePin__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnCreatePin__PythonCallable;
	static GetDefaultObject(): OnCreatePin__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnCreatePin__PythonCallable;
	static C(Other: UObject | any): OnCreatePin__PythonCallable;
}

declare class OnDetermineLinkGeometry__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnDetermineLinkGeometry__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnDetermineLinkGeometry__PythonCallable;
	static GetDefaultObject(): OnDetermineLinkGeometry__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnDetermineLinkGeometry__PythonCallable;
	static C(Other: UObject | any): OnDetermineLinkGeometry__PythonCallable;
}

declare class OnDetermineWiringStyle__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnDetermineWiringStyle__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnDetermineWiringStyle__PythonCallable;
	static GetDefaultObject(): OnDetermineWiringStyle__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnDetermineWiringStyle__PythonCallable;
	static C(Other: UObject | any): OnDetermineWiringStyle__PythonCallable;
}

declare class OnDrawPreviewConnector__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnDrawPreviewConnector__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnDrawPreviewConnector__PythonCallable;
	static GetDefaultObject(): OnDrawPreviewConnector__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnDrawPreviewConnector__PythonCallable;
	static C(Other: UObject | any): OnDrawPreviewConnector__PythonCallable;
}

declare class OnDrawSplineWithArrow__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnDrawSplineWithArrow__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnDrawSplineWithArrow__PythonCallable;
	static GetDefaultObject(): OnDrawSplineWithArrow__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnDrawSplineWithArrow__PythonCallable;
	static C(Other: UObject | any): OnDrawSplineWithArrow__PythonCallable;
}

declare class OnDrawSplineWithArrow_Geom__PythonCallable extends PythonCallableForDelegate { 
	static Load(ResourceName: string): OnDrawSplineWithArrow_Geom__PythonCallable;
	static Find(Outer: UObject, ResourceName: string): OnDrawSplineWithArrow_Geom__PythonCallable;
	static GetDefaultObject(): OnDrawSplineWithArrow_Geom__PythonCallable;
	static CreateDefaultSubobject(Name: string, Transient?: boolean, Required?: boolean, Abstract?: boolean): OnDrawSplineWithArrow_Geom__PythonCallable;
	static C(Other: UObject | any): OnDrawSplineWithArrow_Geom__PythonCallable;
}

